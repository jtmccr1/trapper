{"version":3,"sources":["../../figtree.js/dist/figtree.umd.js","images/logo.png","components/Header.js","lib/outbreak/Case.js","lib/outbreak/Link.js","utils/commonFunctions.js","lib/charts/d3Plot.js","lib/charts/stackedHistogram.js","lib/charts/stackedHistogramLayout.js","components/StackedHistogram.js","components/PhyloChart.js","lib/outbreak/Outbreak.js","lib/charts/fishplotLayout.js","lib/charts/areaPlot.js","components/AreaPlot.js","components/ObjectChart.js","components/ArcTransmission.js","lib/outbreak/Epidemic.js","lib/charts/axis.js","components/TimeAxis.js","components/ChartContainer.js","components/App.js","serviceWorker.js","index.js"],"names":["_possibleConstructorReturn","__webpack_require__","_getPrototypeOf","_inherits","_objectSpread","_slicedToArray","_regeneratorRuntime","_toConsumableArray","_classCallCheck","_createClass","exports","Type","DISCRETE","Symbol","BOOLEAN","INTEGER","FLOAT","PROBABILITIES","Tree","_this","this","rootNode","arguments","length","undefined","root","annotations","nodeList","preorder","forEach","node","index","label","startsWith","id","substring","concat","addAnnotations","nodeMap","Map","map","tipMap","externalNodes","tip","name","treeUpdateCallback","key","value","parent","children","find","child","get","mark","traverse","wrap","_context2","prev","next","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_context","iterator","done","delegateYield","t1","return","finish","stop","postorder","_context4","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_context3","_this2","toNewick","join","_this3","proportion","rootLength","node0","nodeAtTop","rootChild1","rootChild2","oldLength","filter","sibling","getSibling","push","_ref","internalNodes","l","recursive","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","rotate","err","reverse","increasing","orderNodes","callback","factor","count","counts","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","set","sort","a","b","call","node1","node2","path1","pathToRoot","path2","sharedAncestors","n1","n2","indexOf","lastSharedAncestor","reduce","acc","curr","level","sum","mrca","lastCommonAncestor","_i","_arr","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_this4","rootToTipLength","_this5","splits","splitNode","_ref2","_ref3","time","splitBranch","splitLocation","midpoint","_i2","_Object$entries","Object","entries","_Object$entries$_i","values","getExternalNode","Error","annotateNode","_i3","_Object$entries2","_Object$entries2$_i","getNode","_i4","_Object$entries3","_Object$entries3$_i","addValues","annotation","Array","isArray","type","isExtensible","_type","_sum","keys","_i5","_Object$entries4","_Object$entries4$_i","_key","includes","append","_type2","Number","Set","add","acctran","fitchParsimony","I","U","childStates","state","reconstructInternalStates","parentStates","nodeStates","stateCounts","_max","current","_ref4","_ref5","_ref6","_ref7","nodes","_context5","newickString","labelName","datePrefix","tokens","split","currentNode","nodeStack","labelNext","lengthNext","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","token","pop","_parent","parseFloat","isNaN","substr","endsWith","trim","_date","parts","externalNode","date","Layout","_horizontalRange","_verticalRange","_horizontalTicks","updateCallback","vertices","edges","_this6","vertex","tree","update","_this7","_this8","_this9","edge","position","reroot","v1","text","_ref8","_ref9","ascending","NaN","bisectRight","compare","f","d","x","left","lo","hi","mid","right","bisector","number","e10","Math","sqrt","e5","e2","tickIncrement","start","step","max","power","floor","log","LN10","error","pow","valueof","n","i","slice","prototype","identity","top","bottom","epsilon","translateX","translateY","y","entering","__axis","axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","k","transform","context","ticks","apply","domain","format","spacing","range","range0","range1","bandwidth","offset","round","copy","selection","path","selectAll","data","tick","order","tickExit","exit","tickEnter","enter","attr","line","select","merge","insert","transition","isFinite","getAttribute","p","parentNode","remove","each","_","tickSize","axisBottom","noop","dispatch","t","Dispatch","c","constructor","on","typename","types","T","hasOwnProperty","that","args","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","document","uri","namespaceURI","documentElement","createElement","none","selector","querySelector","empty","selectorAll","querySelectorAll","matcher","matches","sparse","EnterNode","datum","_next","__data__","appendChild","insertBefore","keyPrefix","bindIndex","group","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","ascending$1","defaultView","styleValue","style","getPropertyValue","getComputedStyle","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","classedRemove","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","setAttribute","splice","contains","filterEvents","event","element","mouseenter","mouseleave","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","o","j","m","removeEventListener","capture","onAdd","addEventListener","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","Selection","groups","parents","_groups","_parents","sourceEvent","source","define","factory","extend","definition","create","Color","subgroups","subnode","subgroup","match","size","bind","enterGroup","updateGroup","exitGroup","previous","i0","i1","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","m1","min","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","removeAttributeNS","removeAttribute","v","setAttributeNS","priority","removeProperty","setProperty","property","classed","html","before","clone","deep","typenames","parseTypenames$1","_brighter","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","r","g","rgbConvert","rgb","opacity","_hex","toString","h","s","Hsl","hsl2rgb","m2","displayable","hex","brighter","darker","hslConvert","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab2xyz","lrgb2rgb","atan2","hclConvert","A","B","C","D","E","ED","EB","BC_DA","cubehelix","Cubehelix","bl","cubehelixConvert","constant$1","linear","gamma","nogamma","exponential","cosh","sinh","spline","interpolateRgb","rgbGamma","rgb$1","end","rgbBasis","v2","v0","v3","basis","colors","interpolateNumber","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","q","one","zero","interpolateValue","Date","setTime","nb","na","valueOf","interpolateRound","cssNode","cssRoot","cssView","svgNode","degrees","identity$1","skewX","scaleX","scaleY","decompose","e","atan","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","interpolateTransformCss","interpolateTransformSvg","baseVal","consolidate","matrix","cubehelix$1","hue","cubehelixGamma","SQRT2","taskHead","taskTail","cubehelixLong","frame","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","setTimeout","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","Infinity","sleep","nap","poke","clearTimeout","clearInterval","setInterval","timeout$1","elapsed","TypeError","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","schedule","timing","schedules","__transition","self","tween","duration","ease","init","get$1","set$1","tweenValue","_id","interpolate","Selection$1","styleRemove$1","Transition","_name","newId","selection_prototype","inherit","id0","id1","on0","on1","sit","every","onFunction","attrTween","string00","string10","interpolate0","string0","string1","value1","_value","attrInterpolateNS","attrInterpolate","styleTween","styleNull","styleFunction$1","listener0","styleMaybeRemove","styleConstant$1","styleInterpolate","textFunction$1","textConstant$1","tween0","tween1","easeConstant","Promise","resolve","reject","cancel","interrupt","defaultTiming","active","pi$2","tau$1","tauEpsilon","Path","_x0","_y0","_x1","_y1","Map$1","object","Set$1","moveTo","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","x0","y0","x21","y21","x01","y01","l01_2","abs","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","a1","ccw","dx","dy","cw","da","rect","w","has","clear","proto","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","inferColumns","rows","columnSet","row","column","pad","width","formatDate","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","dsvFormat","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","N","eof","eol","replace","preformatBody","formatValue","formatRow","test","convert","customConverter","formatBody","formatRows","xm","ym","xp","yp","_root","leaf","_x","_y","Quad","defaultX","defaultY","Quadtree","leaf_copy","treeProto","addAll","formatDecimal","toExponential","coefficient","exponent","target","cover","xz","yz","visit","extent","radius","x3","y3","quads","d2","retainer","removeAll","visitAfter","prefixExponent","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","comma","precision","formatRounded","formatTypes","%","toFixed","toPrecision","_p","X","toUpperCase","identity$2","locale","formatPrefix","prefixes","formatLocale","grouping","thousands","currency","decimal","numerals","formatNumerals","percent","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","out","formatTrim","padding","adder","Adder","reset","add$1","temp","bv","av","array$1","map$1","slice$1","number$2","unit","identity$3","normalize","clamper","bimap","d0","d1","r0","r1","polymap","continuous","untransform","unknown","piecewise","output","input","clamp","rescale","invert","rangeRound","u","transformer","step0","step1","tickStep","precisionPrefix","precisionRound","precisionFixed","linearish","ceil","nice","linear$1","t0$1","t1$1","newInterval","floori","offseti","field","millisecond","durationMinute","durationWeek","day","getMilliseconds","getSeconds","getMinutes","getHours","setHours","setDate","getDate","getTimezoneOffset","weekday","getDay","sunday","monday","thursday","setMonth","getMonth","getFullYear","setFullYear","setUTCSeconds","setUTCMinutes","utcDay","setUTCHours","setUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcThursday","utcYear","setUTCMonth","setUTCFullYear","localDate","H","M","S","L","utcDate","UTC","newYear","locale$1","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","pad$1","requote","formatRe","formatLookup","parseWeekdayNumberSunday","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","formatYear$1","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","ramp","scheme","ramp$1","constant$3","Linear","curveLinear","x$1","y$1","defined","curve","buffer","defined0","lineStart","lineEnd","point","slope3","h0","h1","s0","s1","slope2","point$1","MonotoneX","ReflectContext","Step","_t","stepBefore","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","Y","utcFormats","parses","parseSpecifier","charAt","newParse","newDate","week","day$1","formatLocale$1","defaultLocale$1","toISOString","areaStart","_line","areaEnd","_point","_t0","RectangularLayout","_Layout","_this10","settings","DEFAULT_SETTINGS","branchLabelAnnotationName","internalNodeLabelAnnotationName","externalNodeLabelAnnotationName","lengthFormat","branchCurve","horizontalScale","_this11","rootToTipLengths","currentY","setYPosition","degree","classes","isSelected","_ref10","_ref11","_ref12","_ref13","leftLabel","rightLabel","labelBelow","edgeMap","_ref14","_ref15","_ref16","_ref17","annotationName","_this12","mean","scales","_this13","branchLine","Direction","UP","DOWN","TransmissionLayout","_RectangularLayout","_this14","_direction","direction","ArcLayout","_Layout2","graph","_this15","edgeWidth","xFunction","_this16","getEdges","getOutgoingEdges","_ref18","_ref19","_ref20","_ref21","dataEdges","_ref22","_ref23","_ref24","_ref25","_this17","points","_sign","startingP","endingP","correctingFactor","controlPoint1","controlPoint2","p0","p1","p2","p3","_x3","_y2","cubicBezier","_sign2","_x2","circleY","Bauble","vertexFilter","CircleBauble","_Bauble","border","RectangularBauble","_Bauble2","height","FigTree","layout","margins","xAxisTickArguments","xAxisTitle","hoverBorder","backgroundBorder","baubles","transitionDuration","_this18","getBoundingClientRect","svgSelection","xScale","horizontalRange","yScale","verticalRange","xAxis","xAxisWidth","axesLayer","_this21","branchesLayer","branchPath","branchPathGenerator","branches","newBranches","_this20","newNodes","bauble","createShapes","updateShapes","_this19","selected","hilightNodes","action","mx","changedTouches","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","clientLeft","clientTop","mouse","onClickNode","tooltip","getElementById","display","pageX","pageY","Graph","_this22","acyclicSelector","outGoingEdgeMap","incomingEdgeMap","edgeList","addNode","metaData","drawEdge","getIncomingEdges","_this23","removeEdge","delete","sourceNodeId","targetNodeId","addEdge","newOutgoing","newIncoming","options","nodesToVisit","outGoingEdges","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","nOutGoingEdges","_context7","visited","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_iterator8","_step8","nextNode","_context6","_context9","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_iterator9","_step9","_context8","_this24","defineProperty","module","Header","react_default","className","href","rel","src","logo","alt","marginTop","marginBottom","fontSize","Case","keyMap","classCallCheck","dataMap","toConsumableArray","DEFAULT_MAP","symptomOnset","sampleDate","resolution","resoultionDate","location","caseId","metadata","resolutionDate","Link","dataSource","dateParse","timeParse","d3Plot","objectSpread","createClass","xScaleType","scaleLinear","yScaleType","yAxisType","axisLeft","xAxisType","addDataLayers","addAxis","horizontalAxisTicks","easeLinear","axisBoxes","stackedHistogramChart","_d3Plot","possibleConstructorReturn","getPrototypeOf","inherits","bins","rects","updateAxis","stackedHistogramLayout","groupingFunction","binnedFunction","timeWeek","keyToXFunction","horizontalTicks","dateBins","nest","groupKeys","currentCount","maxCount","_loop","kEntry","entry","colorKey","caseEntry","StackedHistogram","props","_useState","useState","_useState2","slicedToArray","histogram","setHistogram","el","useCallback","layoutSettings","dateRange","scaleTime","fig","draw","onHover","onClick","alert","rand_id","random","ref","chartGeom","PhyloChart","figtree","setFigtree","dateRangeScale","treeRange","treeDateRange","rootToTipScale","phylogeny","hilightInternalNodes","hilightExternalNodes","hilightBranches","console","Outbreak","cases","addChild","regenerator_default","timePoints","tc","totalDescendents","childrenTimeCourse","timeCourse","timePoint","childrenCourses","childrenCases","tp","firstTimePoints","lastTimePoints","childTP","getTime","fishLayout","Epidemic","backgroundOutbreak","rootOutbreak","gapMap","setGapMap","totalCourse","outbreak","timeGap","childrenSpace","activeChildren","chap","innerSpace","kidGaps","innerSpaceArray","spaceFilled","_loop2","childOutbreak","parentTop","getStartingDistance","total","first0T","first0","lastTP","lastT","smoothingPoint","firstTP","firstT","newFirstTP","totalAtTheTime","easyStart","unshift","setPoints","input_points","currentOutbreak","thereAreGrandparents","gap","areaPlot","curveBasis","areaMaker","area","areas","AreaPlot","plot","setPlot","epidemic","React","forwardRef","ArcTransmission","xfunc","indexCase","edgeConditionFactory","outbreaks","outbreakMap","edgeCondition","setOutbreaks","firstOutbreak","outbreakTraversal","CaseEdge","parentOutbreak","addCase","startAnotherOutbreak","XTimeAxis","axisTop","updateAxisBars","TimeAxis","Setaxis","domRect","mostProbableTransphyloEdgeCondition","incomingEdges","maxTransphyloProb","transphylo","support","ChartContainer","ogLineList","setOgLineList","_useState3","_useState4","ogLinks","setOgLinks","_useState5","_useState6","setScales","_useState7","_useState8","setChartGeom","_useState9","_useState10","setDomRect","_useState11","_useState12","outbreakGraph","setOutbreakGraph","_useState13","_useState14","setPhylogeny","_useState15","_useState16","phyloAttributes","setPhyloAttributes","_useState17","_useState18","setDateRange","_useState19","_useState20","setEpidemic","_useState21","_useState22","setTreeDateRange","useEffect","csv","dataPoint","Location","Outcome","then","all","data1","data2","fetch","response","parseNewick","json","nestLinks","dataSources","links","totalObservations","ds","_dataSources","sources","newCase","startWeek","getSymptomOnset","endWeek","spaceLeft","spaceRight","spaceBottom","spaceTop","weeks","parentBaseDim","outbreakEpidemic","casesRange","treeMaxTipLength","treeMaxTip","treeMaxDate","treeRootDate","timeDay","totalExtent","week0","weekEnd","_React$createElement","measuredRef","handleResize","background","components_TimeAxis","components_StackedHistogram","callbacks","components_AreaPlot","components_ArcTransmission","components_PhyloChart","attributes","App","components_Header","components_ChartContainer","Boolean","hostname","ReactDOM","render","components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e7089d6.chunk.js","sourcesContent":["var _possibleConstructorReturn = require(\"/Users/jtmccrone/Documents/trapper/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/jtmccrone/Documents/trapper/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/jtmccrone/Documents/trapper/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _objectSpread = require(\"/Users/jtmccrone/Documents/trapper/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _slicedToArray = require(\"/Users/jtmccrone/Documents/trapper/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _regeneratorRuntime = require(\"/Users/jtmccrone/Documents/trapper/node_modules/@babel/runtime/regenerator\");\n\nvar _toConsumableArray = require(\"/Users/jtmccrone/Documents/trapper/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/Users/jtmccrone/Documents/trapper/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/jtmccrone/Documents/trapper/node_modules/@babel/runtime/helpers/createClass\");\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global.figtree = {}));\n})(this, function (exports) {\n  'use strict';\n  /** @module tree */\n\n  var Type = {\n    DISCRETE: Symbol(\"DISCRETE\"),\n    BOOLEAN: Symbol(\"BOOLEAN\"),\n    INTEGER: Symbol(\"INTEGER\"),\n    FLOAT: Symbol(\"FLOAT\"),\n    PROBABILITIES: Symbol(\"PROBABILITIES\")\n  };\n  /**\n   * The Tree class\n   */\n\n  var Tree =\n  /*#__PURE__*/\n  function () {\n    /**\n     * The constructor takes an object for the root node. The tree structure is\n     * defined as nested node objects.\n     *\n     * @constructor\n     * @param {object} rootNode - The root node of the tree as an object.\n     */\n    function Tree() {\n      var _this = this;\n\n      var rootNode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _classCallCheck(this, Tree);\n\n      this.root = rootNode;\n      this.annotations = {};\n      this.nodeList = _toConsumableArray(this.preorder());\n      this.nodeList.forEach(function (node, index) {\n        if (node.label && node.label.startsWith(\"#\")) {\n          // an id string has been specified in the newick label.\n          node.id = node.label.substring(1);\n        } else {\n          node.id = \"node_\".concat(index);\n        }\n\n        _this.addAnnotations(node.annotations);\n      });\n      this.nodeMap = new Map(this.nodeList.map(function (node) {\n        return [node.id, node];\n      }));\n      this.tipMap = new Map(this.externalNodes.map(function (tip) {\n        return [tip.name, tip];\n      })); // a callback function that is called whenever the tree is changed\n\n      this.treeUpdateCallback = function () {};\n    }\n\n    _createClass(Tree, [{\n      key: \"getSibling\",\n\n      /**\n       * Returns the sibling of a node (i.e., the first other child of the parent)\n       *\n       * @param node\n       * @returns {*}\n       */\n      value: function getSibling(node) {\n        if (!node.parent) {\n          return null;\n        }\n\n        return node.parent.children.find(function (child) {\n          return child !== node;\n        });\n      }\n      /**\n       * Returns a node from its id stored.\n       *\n       * @param id\n       * @returns {*}\n       */\n\n    }, {\n      key: \"getNode\",\n      value: function getNode(id) {\n        return this.nodeMap.get(id);\n      }\n      /**\n       * Returns an external node (tip) from its name.\n       *\n       * @param name\n       * @returns {*}\n       */\n\n    }, {\n      key: \"getExternalNode\",\n      value: function getExternalNode(name) {\n        return this.tipMap.get(name);\n      }\n      /**\n       * A generator function that returns the nodes in a pre-order traversal.\n       *\n       * @returns {IterableIterator<IterableIterator<*|*>>}\n       */\n\n    }, {\n      key: \"preorder\",\n      value:\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function preorder() {\n        var traverse;\n        return _regeneratorRuntime.wrap(function preorder$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                traverse =\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function traverse(node) {\n                  var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, child;\n\n                  return _regeneratorRuntime.wrap(function traverse$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return node;\n\n                        case 2:\n                          if (!node.children) {\n                            _context.next = 28;\n                            break;\n                          }\n\n                          _iteratorNormalCompletion = true;\n                          _didIteratorError = false;\n                          _iteratorError = undefined;\n                          _context.prev = 6;\n                          _iterator = node.children[Symbol.iterator]();\n\n                        case 8:\n                          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                            _context.next = 14;\n                            break;\n                          }\n\n                          child = _step.value;\n                          return _context.delegateYield(traverse(child), \"t0\", 11);\n\n                        case 11:\n                          _iteratorNormalCompletion = true;\n                          _context.next = 8;\n                          break;\n\n                        case 14:\n                          _context.next = 20;\n                          break;\n\n                        case 16:\n                          _context.prev = 16;\n                          _context.t1 = _context[\"catch\"](6);\n                          _didIteratorError = true;\n                          _iteratorError = _context.t1;\n\n                        case 20:\n                          _context.prev = 20;\n                          _context.prev = 21;\n\n                          if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                          }\n\n                        case 23:\n                          _context.prev = 23;\n\n                          if (!_didIteratorError) {\n                            _context.next = 26;\n                            break;\n                          }\n\n                          throw _iteratorError;\n\n                        case 26:\n                          return _context.finish(23);\n\n                        case 27:\n                          return _context.finish(20);\n\n                        case 28:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, traverse, null, [[6, 16, 20, 28], [21,, 23, 27]]);\n                });\n                return _context2.delegateYield(traverse(this.root), \"t0\", 2);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, preorder, this);\n      })\n      /**\n       * A generator function that returns the nodes in a post-order traversal\n       *\n       * @returns {IterableIterator<IterableIterator<*|*>>}\n       */\n\n    }, {\n      key: \"postorder\",\n      value:\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function postorder() {\n        var traverse;\n        return _regeneratorRuntime.wrap(function postorder$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                traverse =\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function traverse(node) {\n                  var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, child;\n\n                  return _regeneratorRuntime.wrap(function traverse$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          if (!node.children) {\n                            _context3.next = 26;\n                            break;\n                          }\n\n                          _iteratorNormalCompletion2 = true;\n                          _didIteratorError2 = false;\n                          _iteratorError2 = undefined;\n                          _context3.prev = 4;\n                          _iterator2 = node.children[Symbol.iterator]();\n\n                        case 6:\n                          if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                            _context3.next = 12;\n                            break;\n                          }\n\n                          child = _step2.value;\n                          return _context3.delegateYield(traverse(child), \"t0\", 9);\n\n                        case 9:\n                          _iteratorNormalCompletion2 = true;\n                          _context3.next = 6;\n                          break;\n\n                        case 12:\n                          _context3.next = 18;\n                          break;\n\n                        case 14:\n                          _context3.prev = 14;\n                          _context3.t1 = _context3[\"catch\"](4);\n                          _didIteratorError2 = true;\n                          _iteratorError2 = _context3.t1;\n\n                        case 18:\n                          _context3.prev = 18;\n                          _context3.prev = 19;\n\n                          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                            _iterator2.return();\n                          }\n\n                        case 21:\n                          _context3.prev = 21;\n\n                          if (!_didIteratorError2) {\n                            _context3.next = 24;\n                            break;\n                          }\n\n                          throw _iteratorError2;\n\n                        case 24:\n                          return _context3.finish(21);\n\n                        case 25:\n                          return _context3.finish(18);\n\n                        case 26:\n                          _context3.next = 28;\n                          return node;\n\n                        case 28:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, traverse, null, [[4, 14, 18, 26], [19,, 21, 25]]);\n                });\n                return _context4.delegateYield(traverse(this.root), \"t0\", 2);\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, postorder, this);\n      })\n      /**\n       * A generator function that returns the nodes in a path to the root\n       *\n       * @returns {IterableIterator<IterableIterator<*|*>>}\n       */\n\n    }, {\n      key: \"toNewick\",\n\n      /**\n       * An instance method to return a Newick format string for the Tree. Can be called without a parameter to\n       * start at the root node. Providing another node will generate a subtree. Labels and branch lengths are\n       * included if available.\n       *\n       * @param {object} node - The node of the tree to be written (defaults as the rootNode).\n       * @returns {string}\n       */\n      value: function toNewick() {\n        var _this2 = this;\n\n        var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.rootNode;\n        return (node.children ? \"(\".concat(node.children.map(function (child) {\n          return _this2.toNewick(child);\n        }).join(\",\"), \")\").concat(node.label ? node.label : \"\") : node.name) + (node.length ? \":\".concat(node.length) : \"\");\n      }\n    }, {\n      key: \"reroot\",\n\n      /**\n       * Re-roots the tree at the midway point on the branch above the given node.\n       *\n       * @param {object} node - The node to be rooted on.\n       * @param proportion - proportion along the branch to place the root (default 0.5)\n       */\n      value: function reroot(node) {\n        var _this3 = this;\n\n        var proportion = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;\n\n        if (node === this.rootNode) {\n          // the node is the root - nothing to do\n          return;\n        }\n\n        var rootLength = this.rootNode.children[0].length + this.rootNode.children[1].length;\n\n        if (node.parent !== this.rootNode) {\n          (function () {\n            // the node is not a child of the existing root so the root is actually changing\n            var node0 = node;\n            var parent = node.parent; // was the node the first child in the parent's children?\n\n            var nodeAtTop = parent.children[0] === node;\n            var rootChild1 = node;\n            var rootChild2 = parent;\n            var oldLength = parent.length;\n\n            while (parent.parent) {\n              // remove the node that will becoming the parent from the children\n              parent.children = parent.children.filter(function (child) {\n                return child !== node0;\n              });\n\n              if (parent.parent === _this3.rootNode) {\n                var sibling = _this3.getSibling(parent);\n\n                parent.children.push(sibling);\n                sibling.length = rootLength;\n              } else {\n                // swap the parent and parent's parent's length around\n                var _ref = [oldLength, parent.parent.length];\n                parent.parent.length = _ref[0];\n                oldLength = _ref[1];\n                // add the new child\n                parent.children.push(parent.parent);\n              }\n\n              node0 = parent;\n              parent = parent.parent;\n            } // Reuse the root node as root...\n            // Set the order of the children to be the same as for the original parent of the node.\n            // This makes for a more visually consistent rerooting graphically.\n\n\n            _this3.rootNode.children = nodeAtTop ? [rootChild1, rootChild2] : [rootChild2, rootChild1]; // connect all the children to their parents\n\n            _this3.internalNodes.forEach(function (node) {\n              node.children.forEach(function (child) {\n                child.parent = node;\n              });\n            });\n\n            var l = rootChild1.length * proportion;\n            rootChild2.length = l;\n            rootChild1.length = rootChild1.length - l;\n          })();\n        } else {\n          // the root is staying the same, just the position of the root changing\n          var l = node.length * (1.0 - proportion);\n          node.length = l;\n          this.getSibling(node).length = rootLength - l;\n        }\n\n        this.treeUpdateCallback();\n      }\n    }, {\n      key: \"rotate\",\n\n      /**\n       * Reverses the order of the children of the given node. If 'recursive=true' then it will\n       * descend down the subtree reversing all the sub nodes.\n       *\n       * @param node\n       * @param recursive\n       */\n      value: function rotate(node) {\n        var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        if (node.children) {\n          if (recursive) {\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = node.children[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var child = _step3.value;\n                this.rotate(child, recursive);\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                  _iterator3.return();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n          }\n\n          node.children.reverse();\n        }\n\n        this.treeUpdateCallback();\n      }\n    }, {\n      key: \"order\",\n\n      /**\n       * Sorts the child branches of each node in order of increasing or decreasing number\n       * of tips. This operates recursively from the node given.\n       *\n       * @param node - the node to start sorting from\n       * @param {boolean} increasing - sorting in increasing node order or decreasing?\n       * @returns {number} - the number of tips below this node\n       */\n      value: function order() {\n        var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.rootNode;\n        var increasing = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        // orderNodes.call(this, node, increasing, this.treeUpdateCallback);\n        orderNodes.call(this, node, increasing);\n        this.treeUpdateCallback();\n      }\n    }, {\n      key: \"lastCommonAncestor\",\n      value: function lastCommonAncestor(node1, node2) {\n        var path1 = _toConsumableArray(Tree.pathToRoot(node1));\n\n        var path2 = _toConsumableArray(Tree.pathToRoot(node2));\n\n        var sharedAncestors = path1.filter(function (n1) {\n          return path2.map(function (n2) {\n            return n2.id;\n          }).indexOf(n1.id) > -1;\n        });\n        var lastSharedAncestor = sharedAncestors.reduce(function (acc, curr) {\n          return acc = acc.level > curr.level ? acc : curr;\n        });\n        return lastSharedAncestor;\n      }\n    }, {\n      key: \"pathLength\",\n      value: function pathLength(node1, node2) {\n        var sum = 0;\n        var mrca = this.lastCommonAncestor(node1, node2);\n\n        for (var _i = 0, _arr = [node1, node2]; _i < _arr.length; _i++) {\n          var node = _arr[_i];\n\n          while (node != mrca) {\n            sum += node.length;\n            node = node.parent;\n          }\n        }\n\n        return sum;\n      }\n      /**\n       * Gives the distance from the root to a given tip (external node).\n       * @param tip - the external node\n       * @returns {number}\n       */\n\n    }, {\n      key: \"rootToTipLength\",\n      value: function rootToTipLength(tip) {\n        var length = 0.0;\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = Tree.pathToRoot(tip)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var node = _step4.value;\n\n            if (node.length) {\n              length += node.length;\n            }\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        return length;\n      }\n      /**\n       * Returns an array of root-to-tip distances for each tip in the tree.\n       * @returns {*}\n       */\n\n    }, {\n      key: \"rootToTipLengths\",\n      value: function rootToTipLengths() {\n        var _this4 = this;\n\n        return this.externalNodes.map(function (tip) {\n          return _this4.rootToTipLength(tip);\n        });\n      }\n      /**\n       * Splits each branch in multiple segments inserting a new degree 2 nodes. If splitLocations is\n       * null then it splits each in two at the mid-point\n       * @param splits\n       */\n\n    }, {\n      key: \"splitBranches\",\n      value: function splitBranches() {\n        var _this5 = this;\n\n        var splits = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n        // split each branch into sections, with a node of\n        // degree two in the middle. This allows annotation\n        // of part of a branch.\n        _toConsumableArray(this.preorder()).filter(function (node) {\n          return node.parent;\n        }).forEach(function (node) {\n          if (splits !== null) {\n            if (splits[node.id]) {\n              var splitNode = node;\n              splits[node.id].forEach(function (_ref2) {\n                var _ref3 = _slicedToArray(_ref2, 2),\n                    time = _ref3[0],\n                    id = _ref3[1];\n\n                splitNode = _this5.splitBranch(splitNode, time);\n                splitNode.id = id;\n              });\n            }\n          } else {\n            // if no splitLocations are given then split it in the middle.\n            _this5.splitBranch(node, node.length / 2.0);\n          }\n        });\n      }\n      /**\n       * Splits a branch in two inserting a new degree 2 node. The splitLocation should be less than\n       * the orginal branch length.\n       * @param node\n       * @param splitLocation\n       */\n\n    }, {\n      key: \"splitBranch\",\n      value: function splitBranch(node, splitLocation) {\n        var oldLength = node.length;\n        var splitNode = {\n          parent: node.parent,\n          children: [node],\n          length: oldLength - splitLocation,\n          annotations: {\n            midpoint: true\n          }\n        };\n        node.parent.children[node.parent.children.indexOf(node)] = splitNode;\n        node.parent = splitNode;\n        node.length = splitLocation;\n        return splitNode;\n      }\n      /**\n       * Set one or more annotations for the tips.\n       *\n       * See annotateNode for a description of the annotation structure.\n       *\n       * @param annotations a dictionary of annotations keyed by tip label\n       */\n\n    }, {\n      key: \"annotateTips\",\n      value: function annotateTips(annotations) {\n        for (var _i2 = 0, _Object$entries = Object.entries(annotations); _i2 < _Object$entries.length; _i2++) {\n          var _Object$entries$_i = _slicedToArray(_Object$entries[_i2], 2),\n              key = _Object$entries$_i[0],\n              values = _Object$entries$_i[1];\n\n          var tip = this.getExternalNode(key);\n\n          if (!tip) {\n            throw new Error(\"tip with label \".concat(key, \" not found in tree\"));\n          }\n\n          this.annotateNode(tip, values);\n        }\n      }\n      /**\n       * This is similar to annotateTips but the annotation objects are keyed by node\n       * keys (Symbols).\n       *\n       * @param annotations a dictionary of annotations keyed by node key\n       */\n\n    }, {\n      key: \"annotateNodes\",\n      value: function annotateNodes(annotations) {\n        for (var _i3 = 0, _Object$entries2 = Object.entries(annotations); _i3 < _Object$entries2.length; _i3++) {\n          var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i3], 2),\n              key = _Object$entries2$_i[0],\n              values = _Object$entries2$_i[1];\n\n          var node = this.getNode(key);\n\n          if (!node) {\n            throw new Error(\"tip with key \".concat(key, \" not found in tree\"));\n          }\n\n          this.annotateNode(node, values);\n        }\n      }\n      /**\n       * Adds the given annotations to a particular node object.\n       *\n       * The annotations is an object with properties keyed by external node labels each\n       * of which is an object with key value pairs for the annotations. The\n       * key value pairs will be added to a property called 'annotations' in the node.\n       *\n       * Boolean or Numerical traits are given as a single value.\n       * Sets of values with probabilities should be given as an object.\n       * Discrete values should be given as an array (even if containing only one value)\n       * or an object with booleans to give the full set of possible trait values.\n       *\n       * For example:\n       *\n       * {\n       *     'tip_1': {\n       *         'trait_1' : true,\n       *         'trait_4' : 3.141592,\n       *         'trait_2' : [1, 2], // discrete trait\n       *         'trait_3' : [\"London\", \"Paris\", \"New York\"], // discrete trait\n       *         'trait_3' : {\"London\" : true, \"Paris\" : false, \"New York\": false], // discrete trait with full set of values\n       *         'trait_4' : {\"London\" : 0.75, \"Paris\" : 0.20, \"New York\": 0.05} // probability set\n       *     },\n       *     'tip_2': {...}\n       * }\n       *\n       * The annotation labels, type and possible values are also added to the tree in a property called 'annotations'.\n       *\n       * A reconstruction method such as annotateNodesFromTips can then be used to provide reconstructed values\n       * for internal nodes. Or annotateNodes can provide annotations for any node in the tree.\n       *\n       * @param node\n       * @param annotations a dictionary of annotations keyed by the annotation name.\n       */\n\n    }, {\n      key: \"annotateNode\",\n      value: function annotateNode(node, annotations) {\n        this.addAnnotations(annotations); // add the annotations to the existing annotations object for the node object\n\n        node.annotations = _objectSpread({}, node.annotations === undefined ? {} : node.annotations, annotations);\n      }\n      /**\n       * Adds the annotation information to the tree. This stores the type and possible values\n       * for each annotation seen in the nodes of the tree.\n       *\n       * This methods also checks the values are correct and conform to previous annotations\n       * in type.\n       *\n       * @param annotations\n       */\n\n    }, {\n      key: \"addAnnotations\",\n      value: function addAnnotations(annotations) {\n        for (var _i4 = 0, _Object$entries3 = Object.entries(annotations); _i4 < _Object$entries3.length; _i4++) {\n          var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i4], 2),\n              key = _Object$entries3$_i[0],\n              addValues = _Object$entries3$_i[1];\n\n          var annotation = this.annotations[key];\n\n          if (!annotation) {\n            annotation = {};\n            this.annotations[key] = annotation;\n          }\n\n          if (Array.isArray(addValues)) {\n            // is a set of discrete values\n            var type = Type.DISCRETE;\n\n            if (annotation.type && annotation.type !== type) {\n              throw Error(\"existing values of the annotation, \".concat(key, \", in the tree is not of the same type\"));\n            }\n\n            annotation.type = type;\n            annotation.values = [].concat(_toConsumableArray(annotation.values), _toConsumableArray(addValues));\n          } else if (Object.isExtensible(addValues)) {\n            // is a set of properties with values\n            var _type = null;\n            var _sum = 0.0;\n            var keys = [];\n\n            for (var _i5 = 0, _Object$entries4 = Object.entries(addValues); _i5 < _Object$entries4.length; _i5++) {\n              var _Object$entries4$_i = _slicedToArray(_Object$entries4[_i5], 2),\n                  _key = _Object$entries4$_i[0],\n                  value = _Object$entries4$_i[1];\n\n              if (keys.includes(_key)) {\n                throw Error(\"the states of annotation, \".concat(_key, \", should be unique\"));\n              }\n\n              if (typeof value === typeof 1.0) {\n                // This is a vector of probabilities of different states\n                _type = _type === undefined ? Type.PROBABILITIES : _type;\n\n                if (_type === Type.DISCRETE) {\n                  throw Error(\"the values of annotation, \".concat(_key, \", should be all boolean or all floats\"));\n                }\n\n                _sum += value;\n\n                if (_sum > 1.0) {\n                  throw Error(\"the values of annotation, \".concat(_key, \", should be probabilities of states and add to 1.0\"));\n                }\n              } else if (typeof value === typeof true) {\n                _type = _type === undefined ? Type.DISCRETE : _type;\n\n                if (_type === Type.PROBABILITIES) {\n                  throw Error(\"the values of annotation, \".concat(_key, \", should be all boolean or all floats\"));\n                }\n              } else {\n                throw Error(\"the values of annotation, \".concat(_key, \", should be all boolean or all floats\"));\n              }\n\n              keys.append(_key);\n            }\n\n            if (annotation.type && annotation.type !== _type) {\n              throw Error(\"existing values of the annotation, \".concat(key, \", in the tree is not of the same type\"));\n            }\n\n            annotation.type = _type;\n            annotation.values = [].concat(_toConsumableArray(annotation.values), _toConsumableArray(addValues));\n          } else {\n            var _type2 = Type.DISCRETE;\n\n            if (typeof addValues === typeof true) {\n              _type2 = Type.BOOLEAN;\n            } else if (Number(addValues)) {\n              _type2 = addValues % 1 === 0 ? Type.INTEGER : Type.FLOAT;\n            }\n\n            if (annotation.type && annotation.type !== _type2) {\n              if (_type2 === Type.INTEGER && annotation.type === Type.FLOAT || _type2 === Type.FLOAT && annotation.type === Type.INTEGER) {\n                // upgrade to float\n                _type2 = Type.FLOAT;\n              } else {\n                throw Error(\"existing values of the annotation, \".concat(key, \", in the tree is not of the same type\"));\n              }\n            }\n\n            if (_type2 === Type.DISCRETE) {\n              if (!annotation.values) {\n                annotation.values = new Set();\n              }\n\n              annotation.values.add(addValues);\n            }\n\n            annotation.type = _type2;\n          } // overwrite the existing annotation property\n\n\n          this.annotations[key] = annotation;\n        }\n      }\n      /**\n       * Uses parsimony to label internal nodes to reconstruct the internal node states\n       * for the annotation 'name'.\n       *\n       * @param name\n       * @param acctrans Use acctrans reconstruction if true, deltrans otherwise\n       * @param node\n       */\n\n    }, {\n      key: \"annotateNodesFromTips\",\n      value: function annotateNodesFromTips(name) {\n        var acctran = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        fitchParsimony(name, this.rootNode);\n        reconstructInternalStates(name, [], acctran, this.rootNode);\n      }\n      /**\n       * A class method to create a Tree instance from a Newick format string (potentially with node\n       * labels and branch lengths). Taxon labels should be quoted (either \" or ') if they contain whitespace\n       * or any of the tree definitition characters '(),:;' - the quotes (and any whitespace immediately within)\n       * will be removed.\n       * @param newickString - the Newick format tree as a string\n       * @param labelName\n       * @param datePrefix\n       * @returns {Tree} - an instance of the Tree class\n       */\n\n    }, {\n      key: \"rootNode\",\n\n      /**\n       * Gets the root node of the Tree\n       *\n       * @returns {Object|*}\n       */\n      get: function get() {\n        return this.root;\n      }\n    }, {\n      key: \"nodes\",\n\n      /**\n       * Gets an array containing all the node objects\n       *\n       * @returns {*}\n       */\n      get: function get() {\n        return _toConsumableArray(this.nodeList);\n      }\n    }, {\n      key: \"externalNodes\",\n\n      /**\n       * Gets an array containing all the external node objects\n       *\n       * @returns {*}\n       */\n      get: function get() {\n        return this.nodes.filter(function (node) {\n          return !node.children;\n        });\n      }\n    }, {\n      key: \"internalNodes\",\n\n      /**\n       * Gets an array containing all the internal node objects\n       *\n       * @returns {*}\n       */\n      get: function get() {\n        return this.nodes.filter(function (node) {\n          return node.children;\n        });\n      }\n    }], [{\n      key: \"pathToRoot\",\n      value:\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function pathToRoot(node) {\n        return _regeneratorRuntime.wrap(function pathToRoot$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!node) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                _context5.next = 3;\n                return node;\n\n              case 3:\n                node = node.parent;\n                _context5.next = 0;\n                break;\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, pathToRoot);\n      })\n    }, {\n      key: \"parseNewick\",\n      value: function parseNewick(newickString) {\n        var labelName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"label\";\n        var datePrefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n        var tokens = newickString.split(/\\s*('[^']+'|\"[^\"]+\"|;|\\(|\\)|,|:)\\s*/);\n        var level = 0;\n        var currentNode = null;\n        var nodeStack = [];\n        var labelNext = false;\n        var lengthNext = false;\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = tokens.filter(function (token) {\n            return token.length > 0;\n          })[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var token = _step5.value;\n\n            // console.log(`Token ${i}: ${token}, level: ${level}`);\n            if (token === \"(\") {\n              // an internal node\n              if (labelNext) {\n                // if labelNext is set then the last bracket has just closed\n                // so there shouldn't be an open bracket.\n                throw new Error(\"expecting a comma\");\n              }\n\n              var node = {\n                level: level,\n                parent: currentNode,\n                children: [],\n                annotations: {}\n              };\n              level += 1;\n\n              if (currentNode) {\n                nodeStack.push(currentNode);\n              }\n\n              currentNode = node;\n            } else if (token === \",\") {\n              // another branch in an internal node\n              labelNext = false; // labels are optional\n\n              if (lengthNext) {\n                throw new Error(\"branch length missing\");\n              }\n\n              var parent = nodeStack.pop();\n              parent.children.push(currentNode);\n              currentNode = parent;\n            } else if (token === \")\") {\n              // finished an internal node\n              labelNext = false; // labels are optional\n\n              if (lengthNext) {\n                throw new Error(\"branch length missing\");\n              } // the end of an internal node\n\n\n              var _parent = nodeStack.pop();\n\n              _parent.children.push(currentNode);\n\n              level -= 1;\n              currentNode = _parent;\n              labelNext = true;\n            } else if (token === \":\") {\n              labelNext = false; // labels are optional\n\n              lengthNext = true;\n            } else if (token === \";\") {\n              // end of the tree, check that we are back at level 0\n              if (level > 0) {\n                throw new Error(\"unexpected semi-colon in tree\");\n              }\n\n              break;\n            } else {\n              // not any specific token so may be a label, a length, or an external node name\n              if (lengthNext) {\n                currentNode.length = parseFloat(token);\n                lengthNext = false;\n              } else if (labelNext) {\n                currentNode.label = token;\n\n                if (!currentNode.label.startsWith(\"#\")) {\n                  var value = parseFloat(currentNode.label);\n\n                  if (isNaN(value)) {\n                    value = currentNode.label;\n                  }\n\n                  currentNode.annotations[labelName] = value;\n                } else {\n                  currentNode.id = currentNode.label.substring(1);\n                }\n\n                labelNext = false;\n              } else {\n                // an external node\n                if (!currentNode.children) {\n                  currentNode.children = [];\n                }\n\n                var name = token; // remove any quoting and then trim whitespace\n\n                if (name.startsWith(\"\\\"\") || name.startsWith(\"'\")) {\n                  name = name.substr(1);\n                }\n\n                if (name.endsWith(\"\\\"\") || name.endsWith(\"'\")) {\n                  name = name.substr(0, name.length - 1);\n                }\n\n                name = name.trim();\n                var _date = undefined;\n\n                if (datePrefix) {\n                  var parts = name.split(datePrefix);\n\n                  if (parts.length === 0) {\n                    throw new Error(\"the tip, \".concat(name, \", doesn't have a date separated by the prefix, '\").concat(datePrefix, \"'\"));\n                  }\n\n                  _date = parseFloat(parts[parts.length - 1]);\n                }\n\n                var externalNode = {\n                  name: name,\n                  date: _date,\n                  parent: currentNode,\n                  annotations: {}\n                };\n\n                if (currentNode) {\n                  nodeStack.push(currentNode);\n                }\n\n                currentNode = externalNode;\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n              _iterator5.return();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n\n        if (level > 0) {\n          throw new Error(\"the brackets in the newick file are not balanced\");\n        }\n\n        return new Tree(currentNode);\n      }\n    }]);\n\n    return Tree;\n  }();\n  /*\n   * Private methods, called by the class using the <function>.call(this) function.\n   */\n\n  /**\n   * A private recursive function that rotates nodes to give an ordering.\n   * @param node\n   * @param increasing\n   * @param callback an optional callback that is called each rotate\n   * @returns {number}\n   */\n\n\n  function orderNodes(node, increasing) {\n    var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var factor = increasing ? 1 : -1;\n    var count = 0;\n\n    if (node.children) {\n      var counts = new Map();\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = node.children[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var child = _step6.value;\n          var value = orderNodes(child, increasing, callback);\n          counts.set(child, value);\n          count += value;\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      node.children.sort(function (a, b) {\n        return (counts.get(a) - counts.get(b)) * factor;\n      });\n      if (callback) callback();\n    } else {\n      count = 1;\n    }\n\n    return count;\n  }\n  /**\n   * A private recursive function that uses the Fitch algorithm to assign\n   * states to nodes using parsimony. An acctrans or deltrans algorithm can\n   * then be used to reconstruct internal node states.\n   * @param name\n   * @param node\n   * @returns {*}\n   */\n\n\n  function fitchParsimony(name, node) {\n    if (!node.children) {\n      if (!node.annotations[name]) {\n        return []; // annotation not defined so return an empty set\n      }\n\n      return Array.isArray(node.annotations[name]) ? node.annotations[name] : [node.annotations[name]];\n    }\n\n    var I;\n    var U = [];\n    node.children.forEach(function (child) {\n      var childStates = fitchParsimony(name, child);\n      U = [].concat(_toConsumableArray(U), _toConsumableArray(childStates.filter(function (state) {\n        return !U.includes(state);\n      }))); // take the union\n\n      I = I === undefined ? childStates : childStates.filter(function (state) {\n        return I.includes(state);\n      }); // take the intersection\n    });\n    node.annotations = node.annotations === undefined ? {} : node.annotations; // set the node annotation to the intersection if not empty, the union otherwise\n\n    node.annotations[name] = _toConsumableArray(I.length > 0 ? I : U);\n    return node.annotations[name];\n  }\n\n  function reconstructInternalStates(name, parentStates, acctran, node) {\n    var nodeStates = node.annotations[name];\n\n    if (!Array.isArray(nodeStates)) {\n      nodeStates = [nodeStates];\n    }\n\n    if (node.children) {\n      var stateCounts = {};\n      nodeStates.forEach(function (state) {\n        return stateCounts[state] = stateCounts[state] ? stateCounts[state] += 1 : 1;\n      });\n      parentStates.forEach(function (state) {\n        return stateCounts[state] = stateCounts[state] ? stateCounts[state] += 1 : 1;\n      });\n      node.children.forEach(function (child) {\n        reconstructInternalStates(name, nodeStates, acctran, child).forEach(function (state) {\n          return stateCounts[state] = stateCounts[state] ? stateCounts[state] += 1 : 1;\n        });\n      });\n      var _max = Object.entries(stateCounts).reduce(function (prev, current) {\n        return prev[1] > current[1] ? prev : current;\n      })[1];\n      nodeStates = Object.entries(stateCounts).filter(function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 2),\n            state = _ref5[0],\n            count = _ref5[1];\n\n        return count === _max;\n      }).map(function (_ref6) {\n        var _ref7 = _slicedToArray(_ref6, 2),\n            state = _ref7[0],\n            count = _ref7[1];\n\n        return state;\n      });\n      node.annotations[name] = nodeStates.length === 1 ? nodeStates[0] : nodeStates;\n    }\n\n    return nodeStates;\n  }\n  /** @module layout */\n\n  /**\n   * The Layout class\n   *\n   */\n\n\n  var Layout =\n  /*#__PURE__*/\n  function () {\n    /**\n     * The constructor.\n     */\n    function Layout() {\n      _classCallCheck(this, Layout);\n\n      // default ranges - these should be set in layout()\n      this._horizontalRange = [0.0, 1.0];\n      this._verticalRange = [0, 1.0];\n      this._horizontalTicks = [0, 0.5, 1]; // create an empty callback function\n\n      this.updateCallback = function () {};\n    }\n    /**\n     * An abstract base class for a layout class. The aim is to describe the API of the class.\n     *\n     * @param vertices - objects with an x, y coordinates and a reference to the original node\n     * @param edges - objects with v1 (a vertex) and v0 (the parent vertex).\n     */\n\n\n    _createClass(Layout, [{\n      key: \"layout\",\n      value: function layout(vertices, edges) {}\n    }, {\n      key: \"update\",\n\n      /**\n       * Updates the tree when it has changed\n       */\n      value: function update() {\n        this.updateCallback();\n      }\n      /**\n       * A utility function for rotating a node\n       * @returns {rotate}\n       */\n\n    }, {\n      key: \"rotate\",\n      value: function rotate() {\n        var _this6 = this;\n\n        return function (vertex) {\n          _this6.tree.rotate(vertex.node);\n\n          _this6.update();\n        };\n      }\n      /**\n       * A utility function for ordering a subtree with increasing tip density\n       * @returns {orderIncreasing}\n       */\n\n    }, {\n      key: \"orderIncreasing\",\n      value: function orderIncreasing() {\n        var _this7 = this;\n\n        return function (vertex) {\n          _this7.tree.rotate(vertex.node);\n\n          _this7.update();\n        };\n      }\n      /**\n       * A utility function for ordering a subtree with decreasing tip density\n       * @returns {orderIncreasing}\n       */\n\n    }, {\n      key: \"orderDecreasing\",\n      value: function orderDecreasing() {\n        var _this8 = this;\n\n        return function (vertex) {\n          _this8.tree.rotate(vertex.node);\n\n          _this8.update();\n        };\n      }\n      /**\n       * A utility function for rerooting the tree\n       * @returns {reroot}\n       */\n\n    }, {\n      key: \"reroot\",\n      value: function reroot() {\n        var _this9 = this;\n\n        return function (edge, position) {\n          _this9.tree.reroot(edge.v1.node, position);\n\n          _this9.update();\n        };\n      }\n      /**\n       * A utility function that will return a HTML string about the node and its\n       * annotations. Can be used with the addLabels() method.\n       *\n       * @param node\n       * @returns {string}\n       */\n\n    }, {\n      key: \"horizontalRange\",\n      get: function get() {\n        return this._horizontalRange;\n      }\n    }, {\n      key: \"verticalRange\",\n      get: function get() {\n        return this._verticalRange;\n      }\n    }, {\n      key: \"horizontalAxisTicks\",\n      get: function get() {\n        return this._horizontalTicks;\n      }\n    }], [{\n      key: \"nodeInfo\",\n      value: function nodeInfo(node) {\n        var text = \"\".concat(node.name ? node.name : node.id);\n        Object.entries(node.annotations).forEach(function (_ref8) {\n          var _ref9 = _slicedToArray(_ref8, 2),\n              key = _ref9[0],\n              value = _ref9[1];\n\n          text += \"<p>\".concat(key, \": \").concat(value, \"</p>\");\n        });\n        return text;\n      }\n    }]);\n\n    return Layout;\n  }();\n  /*\n   * Private methods, called by the class using the <function>.call(this) function.\n   */\n\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function left(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n        }\n\n        return lo;\n      },\n      right: function right(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n        }\n\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function (d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n\n  function number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50),\n      e5 = Math.sqrt(10),\n      e2 = Math.sqrt(2);\n\n  function ticks(start, stop, count) {\n    var reverse,\n        i = -1,\n        n,\n        ticks,\n        step;\n    stop = +stop, start = +start, count = +count;\n    if (start === stop && count > 0) return [start];\n    if (reverse = stop < start) n = start, start = stop, stop = n;\n    if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n    if (step > 0) {\n      start = Math.ceil(start / step);\n      stop = Math.floor(stop / step);\n      ticks = new Array(n = Math.ceil(stop - start + 1));\n\n      while (++i < n) {\n        ticks[i] = (start + i) * step;\n      }\n    } else {\n      start = Math.floor(start * step);\n      stop = Math.ceil(stop * step);\n      ticks = new Array(n = Math.ceil(start - stop + 1));\n\n      while (++i < n) {\n        ticks[i] = (start - i) / step;\n      }\n    }\n\n    if (reverse) ticks.reverse();\n    return ticks;\n  }\n\n  function tickIncrement(start, stop, count) {\n    var step = (stop - start) / Math.max(0, count),\n        power = Math.floor(Math.log(step) / Math.LN10),\n        error = step / Math.pow(10, power);\n    return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function max(values, valueof) {\n    var n = values.length,\n        i = -1,\n        value,\n        max;\n\n    if (valueof == null) {\n      while (++i < n) {\n        // Find the first comparable value.\n        if ((value = values[i]) != null && value >= value) {\n          max = value;\n\n          while (++i < n) {\n            // Compare the remaining values.\n            if ((value = values[i]) != null && value > max) {\n              max = value;\n            }\n          }\n        }\n      }\n    } else {\n      while (++i < n) {\n        // Find the first comparable value.\n        if ((value = valueof(values[i], i, values)) != null && value >= value) {\n          max = value;\n\n          while (++i < n) {\n            // Compare the remaining values.\n            if ((value = valueof(values[i], i, values)) != null && value > max) {\n              max = value;\n            }\n          }\n        }\n      }\n    }\n\n    return max;\n  }\n\n  function mean(values, valueof) {\n    var n = values.length,\n        m = n,\n        i = -1,\n        value,\n        sum = 0;\n\n    if (valueof == null) {\n      while (++i < n) {\n        if (!isNaN(value = number(values[i]))) sum += value;else --m;\n      }\n    } else {\n      while (++i < n) {\n        if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;else --m;\n      }\n    }\n\n    if (m) return sum / m;\n  }\n\n  var slice = Array.prototype.slice;\n\n  function identity(x) {\n    return x;\n  }\n\n  var top = 1,\n      right = 2,\n      bottom = 3,\n      left = 4,\n      epsilon = 1e-6;\n\n  function translateX(x) {\n    return \"translate(\" + (x + 0.5) + \",0)\";\n  }\n\n  function translateY(y) {\n    return \"translate(0,\" + (y + 0.5) + \")\";\n  }\n\n  function number$1(scale) {\n    return function (d) {\n      return +scale(d);\n    };\n  }\n\n  function center(scale) {\n    var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n\n    if (scale.round()) offset = Math.round(offset);\n    return function (d) {\n      return +scale(d) + offset;\n    };\n  }\n\n  function entering() {\n    return !this.__axis;\n  }\n\n  function axis(orient, scale) {\n    var tickArguments = [],\n        tickValues = null,\n        tickFormat = null,\n        tickSizeInner = 6,\n        tickSizeOuter = 6,\n        tickPadding = 3,\n        k = orient === top || orient === left ? -1 : 1,\n        x = orient === left || orient === right ? \"x\" : \"y\",\n        transform = orient === top || orient === bottom ? translateX : translateY;\n\n    function axis(context) {\n      var values = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues,\n          format = tickFormat == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity : tickFormat,\n          spacing = Math.max(tickSizeInner, 0) + tickPadding,\n          range = scale.range(),\n          range0 = +range[0] + 0.5,\n          range1 = +range[range.length - 1] + 0.5,\n          position = (scale.bandwidth ? center : number$1)(scale.copy()),\n          selection = context.selection ? context.selection() : context,\n          path = selection.selectAll(\".domain\").data([null]),\n          tick = selection.selectAll(\".tick\").data(values, scale).order(),\n          tickExit = tick.exit(),\n          tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n          line = tick.select(\"line\"),\n          text = tick.select(\"text\");\n      path = path.merge(path.enter().insert(\"path\", \".tick\").attr(\"class\", \"domain\").attr(\"stroke\", \"currentColor\"));\n      tick = tick.merge(tickEnter);\n      line = line.merge(tickEnter.append(\"line\").attr(\"stroke\", \"currentColor\").attr(x + \"2\", k * tickSizeInner));\n      text = text.merge(tickEnter.append(\"text\").attr(\"fill\", \"currentColor\").attr(x, k * spacing).attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n      if (context !== selection) {\n        path = path.transition(context);\n        tick = tick.transition(context);\n        line = line.transition(context);\n        text = text.transition(context);\n        tickExit = tickExit.transition(context).attr(\"opacity\", epsilon).attr(\"transform\", function (d) {\n          return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\");\n        });\n        tickEnter.attr(\"opacity\", epsilon).attr(\"transform\", function (d) {\n          var p = this.parentNode.__axis;\n          return transform(p && isFinite(p = p(d)) ? p : position(d));\n        });\n      }\n\n      tickExit.remove();\n      path.attr(\"d\", orient === left || orient == right ? tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter : \"M0.5,\" + range0 + \"V\" + range1 : tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",0.5H\" + range1);\n      tick.attr(\"opacity\", 1).attr(\"transform\", function (d) {\n        return transform(position(d));\n      });\n      line.attr(x + \"2\", k * tickSizeInner);\n      text.attr(x, k * spacing).text(format);\n      selection.filter(entering).attr(\"fill\", \"none\").attr(\"font-size\", 10).attr(\"font-family\", \"sans-serif\").attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n      selection.each(function () {\n        this.__axis = position;\n      });\n    }\n\n    axis.scale = function (_) {\n      return arguments.length ? (scale = _, axis) : scale;\n    };\n\n    axis.ticks = function () {\n      return tickArguments = slice.call(arguments), axis;\n    };\n\n    axis.tickArguments = function (_) {\n      return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n    };\n\n    axis.tickValues = function (_) {\n      return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n    };\n\n    axis.tickFormat = function (_) {\n      return arguments.length ? (tickFormat = _, axis) : tickFormat;\n    };\n\n    axis.tickSize = function (_) {\n      return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n    };\n\n    axis.tickSizeInner = function (_) {\n      return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n    };\n\n    axis.tickSizeOuter = function (_) {\n      return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n    };\n\n    axis.tickPadding = function (_) {\n      return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n    };\n\n    return axis;\n  }\n\n  function axisBottom(scale) {\n    return axis(bottom, scale);\n  }\n\n  var noop = {\n    value: function value() {}\n  };\n\n  function dispatch() {\n    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n      if (!(t = arguments[i] + \"\") || t in _) throw new Error(\"illegal type: \" + t);\n      _[t] = [];\n    }\n\n    return new Dispatch(_);\n  }\n\n  function Dispatch(_) {\n    this._ = _;\n  }\n\n  function parseTypenames(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function (t) {\n      var name = \"\",\n          i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n      return {\n        type: t,\n        name: name\n      };\n    });\n  }\n\n  Dispatch.prototype = dispatch.prototype = {\n    constructor: Dispatch,\n    on: function on(typename, callback) {\n      var _ = this._,\n          T = parseTypenames(typename + \"\", _),\n          t,\n          i = -1,\n          n = T.length; // If no callback was specified, return the callback of the given type and name.\n\n      if (arguments.length < 2) {\n        while (++i < n) {\n          if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n        }\n\n        return;\n      } // If a type was specified, set the callback for the given type and name.\n      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\n\n      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\n      while (++i < n) {\n        if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) {\n          _[t] = set(_[t], typename.name, null);\n        }\n      }\n\n      return this;\n    },\n    copy: function copy() {\n      var copy = {},\n          _ = this._;\n\n      for (var t in _) {\n        copy[t] = _[t].slice();\n      }\n\n      return new Dispatch(copy);\n    },\n    call: function call(type, that) {\n      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) {\n        args[i] = arguments[i + 2];\n      }\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n      for (t = this._[type], i = 0, n = t.length; i < n; ++i) {\n        t[i].value.apply(that, args);\n      }\n    },\n    apply: function apply(type, that, args) {\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) {\n        t[i].value.apply(that, args);\n      }\n    }\n  };\n\n  function get(type, name) {\n    for (var i = 0, n = type.length, c; i < n; ++i) {\n      if ((c = type[i]).name === name) {\n        return c.value;\n      }\n    }\n  }\n\n  function set(type, name, callback) {\n    for (var i = 0, n = type.length; i < n; ++i) {\n      if (type[i].name === name) {\n        type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n      }\n    }\n\n    if (callback != null) type.push({\n      name: name,\n      value: callback\n    });\n    return type;\n  }\n\n  var xhtml = \"http://www.w3.org/1999/xhtml\";\n  var namespaces = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: xhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n\n  function namespace(name) {\n    var prefix = name += \"\",\n        i = prefix.indexOf(\":\");\n    if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n    return namespaces.hasOwnProperty(prefix) ? {\n      space: namespaces[prefix],\n      local: name\n    } : name;\n  }\n\n  function creatorInherit(name) {\n    return function () {\n      var document = this.ownerDocument,\n          uri = this.namespaceURI;\n      return uri === xhtml && document.documentElement.namespaceURI === xhtml ? document.createElement(name) : document.createElementNS(uri, name);\n    };\n  }\n\n  function creatorFixed(fullname) {\n    return function () {\n      return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n    };\n  }\n\n  function creator(name) {\n    var fullname = namespace(name);\n    return (fullname.local ? creatorFixed : creatorInherit)(fullname);\n  }\n\n  function none() {}\n\n  function selector(selector) {\n    return selector == null ? none : function () {\n      return this.querySelector(selector);\n    };\n  }\n\n  function selection_select(select) {\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function empty() {\n    return [];\n  }\n\n  function selectorAll(selector) {\n    return selector == null ? empty : function () {\n      return this.querySelectorAll(selector);\n    };\n  }\n\n  function selection_selectAll(select) {\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          subgroups.push(select.call(node, node.__data__, i, group));\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, parents);\n  }\n\n  function matcher(selector) {\n    return function () {\n      return this.matches(selector);\n    };\n  }\n\n  function selection_filter(match) {\n    if (typeof match !== \"function\") match = matcher(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function sparse(update) {\n    return new Array(update.length);\n  }\n\n  function selection_enter() {\n    return new Selection(this._enter || this._groups.map(sparse), this._parents);\n  }\n\n  function EnterNode(parent, datum) {\n    this.ownerDocument = parent.ownerDocument;\n    this.namespaceURI = parent.namespaceURI;\n    this._next = null;\n    this._parent = parent;\n    this.__data__ = datum;\n  }\n\n  EnterNode.prototype = {\n    constructor: EnterNode,\n    appendChild: function appendChild(child) {\n      return this._parent.insertBefore(child, this._next);\n    },\n    insertBefore: function insertBefore(child, next) {\n      return this._parent.insertBefore(child, next);\n    },\n    querySelector: function querySelector(selector) {\n      return this._parent.querySelector(selector);\n    },\n    querySelectorAll: function querySelectorAll(selector) {\n      return this._parent.querySelectorAll(selector);\n    }\n  };\n\n  function constant(x) {\n    return function () {\n      return x;\n    };\n  }\n\n  var keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\n  function bindIndex(parent, group, enter, update, exit, data) {\n    var i = 0,\n        node,\n        groupLength = group.length,\n        dataLength = data.length; // Put any non-null nodes that fit into update.\n    // Put any null nodes into enter.\n    // Put any remaining data into enter.\n\n    for (; i < dataLength; ++i) {\n      if (node = group[i]) {\n        node.__data__ = data[i];\n        update[i] = node;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    } // Put any non-null nodes that don’t fit into exit.\n\n\n    for (; i < groupLength; ++i) {\n      if (node = group[i]) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function bindKey(parent, group, enter, update, exit, data, key) {\n    var i,\n        node,\n        nodeByKeyValue = {},\n        groupLength = group.length,\n        dataLength = data.length,\n        keyValues = new Array(groupLength),\n        keyValue; // Compute the key for each node.\n    // If multiple nodes have the same key, the duplicates are added to exit.\n\n    for (i = 0; i < groupLength; ++i) {\n      if (node = group[i]) {\n        keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\n        if (keyValue in nodeByKeyValue) {\n          exit[i] = node;\n        } else {\n          nodeByKeyValue[keyValue] = node;\n        }\n      }\n    } // Compute the key for each datum.\n    // If there a node associated with this key, join and add it to update.\n    // If there is not (or the key is a duplicate), add it to enter.\n\n\n    for (i = 0; i < dataLength; ++i) {\n      keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\n      if (node = nodeByKeyValue[keyValue]) {\n        update[i] = node;\n        node.__data__ = data[i];\n        nodeByKeyValue[keyValue] = null;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    } // Add any remaining nodes that were not bound to data to exit.\n\n\n    for (i = 0; i < groupLength; ++i) {\n      if ((node = group[i]) && nodeByKeyValue[keyValues[i]] === node) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function selection_data(value, key) {\n    if (!value) {\n      data = new Array(this.size()), j = -1;\n      this.each(function (d) {\n        data[++j] = d;\n      });\n      return data;\n    }\n\n    var bind = key ? bindKey : bindIndex,\n        parents = this._parents,\n        groups = this._groups;\n    if (typeof value !== \"function\") value = constant(value);\n\n    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n      var parent = parents[j],\n          group = groups[j],\n          groupLength = group.length,\n          data = value.call(parent, parent && parent.__data__, j, parents),\n          dataLength = data.length,\n          enterGroup = enter[j] = new Array(dataLength),\n          updateGroup = update[j] = new Array(dataLength),\n          exitGroup = exit[j] = new Array(groupLength);\n      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that\n      // appendChild can insert the materialized enter node before this node,\n      // rather than at the end of the parent node.\n\n      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n        if (previous = enterGroup[i0]) {\n          if (i0 >= i1) i1 = i0 + 1;\n\n          while (!(next = updateGroup[i1]) && ++i1 < dataLength) {\n            ;\n          }\n\n          previous._next = next || null;\n        }\n      }\n    }\n\n    update = new Selection(update, parents);\n    update._enter = enter;\n    update._exit = exit;\n    return update;\n  }\n\n  function selection_exit() {\n    return new Selection(this._exit || this._groups.map(sparse), this._parents);\n  }\n\n  function selection_join(onenter, onupdate, onexit) {\n    var enter = this.enter(),\n        update = this,\n        exit = this.exit();\n    enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n    if (onupdate != null) update = onupdate(update);\n    if (onexit == null) exit.remove();else onexit(exit);\n    return enter && update ? enter.merge(update).order() : update;\n  }\n\n  function selection_merge(selection) {\n    for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Selection(merges, this._parents);\n  }\n\n  function selection_order() {\n    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function selection_sort(compare) {\n    if (!compare) compare = ascending$1;\n\n    function compareNode(a, b) {\n      return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n    }\n\n    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          sortgroup[i] = node;\n        }\n      }\n\n      sortgroup.sort(compareNode);\n    }\n\n    return new Selection(sortgroups, this._parents).order();\n  }\n\n  function ascending$1(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function selection_call() {\n    var callback = arguments[0];\n    arguments[0] = this;\n    callback.apply(null, arguments);\n    return this;\n  }\n\n  function selection_nodes() {\n    var nodes = new Array(this.size()),\n        i = -1;\n    this.each(function () {\n      nodes[++i] = this;\n    });\n    return nodes;\n  }\n\n  function selection_node() {\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  }\n\n  function selection_size() {\n    var size = 0;\n    this.each(function () {\n      ++size;\n    });\n    return size;\n  }\n\n  function selection_empty() {\n    return !this.node();\n  }\n\n  function selection_each(callback) {\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n        if (node = group[i]) callback.call(node, node.__data__, i, group);\n      }\n    }\n\n    return this;\n  }\n\n  function attrRemove(name) {\n    return function () {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS(fullname) {\n    return function () {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant(name, value) {\n    return function () {\n      this.setAttribute(name, value);\n    };\n  }\n\n  function attrConstantNS(fullname, value) {\n    return function () {\n      this.setAttributeNS(fullname.space, fullname.local, value);\n    };\n  }\n\n  function attrFunction(name, value) {\n    return function () {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);\n    };\n  }\n\n  function attrFunctionNS(fullname, value) {\n    return function () {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);\n    };\n  }\n\n  function selection_attr(name, value) {\n    var fullname = namespace(name);\n\n    if (arguments.length < 2) {\n      var node = this.node();\n      return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);\n    }\n\n    return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === \"function\" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));\n  }\n\n  function defaultView(node) {\n    return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node\n    node.document && node // node is a Window\n    || node.defaultView; // node is a Document\n  }\n\n  function styleRemove(name) {\n    return function () {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant(name, value, priority) {\n    return function () {\n      this.style.setProperty(name, value, priority);\n    };\n  }\n\n  function styleFunction(name, value, priority) {\n    return function () {\n      var v = value.apply(this, arguments);\n      if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);\n    };\n  }\n\n  function selection_style(name, value, priority) {\n    return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === \"function\" ? styleFunction : styleConstant)(name, value, priority == null ? \"\" : priority)) : styleValue(this.node(), name);\n  }\n\n  function styleValue(node, name) {\n    return node.style.getPropertyValue(name) || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n  }\n\n  function propertyRemove(name) {\n    return function () {\n      delete this[name];\n    };\n  }\n\n  function propertyConstant(name, value) {\n    return function () {\n      this[name] = value;\n    };\n  }\n\n  function propertyFunction(name, value) {\n    return function () {\n      var v = value.apply(this, arguments);\n      if (v == null) delete this[name];else this[name] = v;\n    };\n  }\n\n  function selection_property(name, value) {\n    return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === \"function\" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];\n  }\n\n  function classArray(string) {\n    return string.trim().split(/^|\\s+/);\n  }\n\n  function classList(node) {\n    return node.classList || new ClassList(node);\n  }\n\n  function ClassList(node) {\n    this._node = node;\n    this._names = classArray(node.getAttribute(\"class\") || \"\");\n  }\n\n  ClassList.prototype = {\n    add: function add(name) {\n      var i = this._names.indexOf(name);\n\n      if (i < 0) {\n        this._names.push(name);\n\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    remove: function remove(name) {\n      var i = this._names.indexOf(name);\n\n      if (i >= 0) {\n        this._names.splice(i, 1);\n\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    contains: function contains(name) {\n      return this._names.indexOf(name) >= 0;\n    }\n  };\n\n  function classedAdd(node, names) {\n    var list = classList(node),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      list.add(names[i]);\n    }\n  }\n\n  function classedRemove(node, names) {\n    var list = classList(node),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      list.remove(names[i]);\n    }\n  }\n\n  function classedTrue(names) {\n    return function () {\n      classedAdd(this, names);\n    };\n  }\n\n  function classedFalse(names) {\n    return function () {\n      classedRemove(this, names);\n    };\n  }\n\n  function classedFunction(names, value) {\n    return function () {\n      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n    };\n  }\n\n  function selection_classed(name, value) {\n    var names = classArray(name + \"\");\n\n    if (arguments.length < 2) {\n      var list = classList(this.node()),\n          i = -1,\n          n = names.length;\n\n      while (++i < n) {\n        if (!list.contains(names[i])) return false;\n      }\n\n      return true;\n    }\n\n    return this.each((typeof value === \"function\" ? classedFunction : value ? classedTrue : classedFalse)(names, value));\n  }\n\n  function textRemove() {\n    this.textContent = \"\";\n  }\n\n  function textConstant(value) {\n    return function () {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction(value) {\n    return function () {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_text(value) {\n    return arguments.length ? this.each(value == null ? textRemove : (typeof value === \"function\" ? textFunction : textConstant)(value)) : this.node().textContent;\n  }\n\n  function htmlRemove() {\n    this.innerHTML = \"\";\n  }\n\n  function htmlConstant(value) {\n    return function () {\n      this.innerHTML = value;\n    };\n  }\n\n  function htmlFunction(value) {\n    return function () {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_html(value) {\n    return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === \"function\" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;\n  }\n\n  function raise() {\n    if (this.nextSibling) this.parentNode.appendChild(this);\n  }\n\n  function selection_raise() {\n    return this.each(raise);\n  }\n\n  function lower() {\n    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n  }\n\n  function selection_lower() {\n    return this.each(lower);\n  }\n\n  function selection_append(name) {\n    var create = typeof name === \"function\" ? name : creator(name);\n    return this.select(function () {\n      return this.appendChild(create.apply(this, arguments));\n    });\n  }\n\n  function constantNull() {\n    return null;\n  }\n\n  function selection_insert(name, before) {\n    var create = typeof name === \"function\" ? name : creator(name),\n        select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n    return this.select(function () {\n      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n    });\n  }\n\n  function remove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  function selection_remove() {\n    return this.each(remove);\n  }\n\n  function selection_cloneShallow() {\n    return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n  }\n\n  function selection_cloneDeep() {\n    return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n  }\n\n  function selection_clone(deep) {\n    return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n  }\n\n  function selection_datum(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.node().__data__;\n  }\n\n  var filterEvents = {};\n  var event = null;\n\n  if (typeof document !== \"undefined\") {\n    var element = document.documentElement;\n\n    if (!(\"onmouseenter\" in element)) {\n      filterEvents = {\n        mouseenter: \"mouseover\",\n        mouseleave: \"mouseout\"\n      };\n    }\n  }\n\n  function filterContextListener(listener, index, group) {\n    listener = contextListener(listener, index, group);\n    return function (event) {\n      var related = event.relatedTarget;\n\n      if (!related || related !== this && !(related.compareDocumentPosition(this) & 8)) {\n        listener.call(this, event);\n      }\n    };\n  }\n\n  function contextListener(listener, index, group) {\n    return function (event1) {\n      var event0 = event; // Events can be reentrant (e.g., focus).\n\n      event = event1;\n\n      try {\n        listener.call(this, this.__data__, index, group);\n      } finally {\n        event = event0;\n      }\n    };\n  }\n\n  function parseTypenames$1(typenames) {\n    return typenames.trim().split(/^|\\s+/).map(function (t) {\n      var name = \"\",\n          i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      return {\n        type: t,\n        name: name\n      };\n    });\n  }\n\n  function onRemove(typename) {\n    return function () {\n      var on = this.__on;\n      if (!on) return;\n\n      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n        } else {\n          on[++i] = o;\n        }\n      }\n\n      if (++i) on.length = i;else delete this.__on;\n    };\n  }\n\n  function onAdd(typename, value, capture) {\n    var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n    return function (d, i, group) {\n      var on = this.__on,\n          o,\n          listener = wrap(value, i, group);\n      if (on) for (var j = 0, m = on.length; j < m; ++j) {\n        if ((o = on[j]).type === typename.type && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n          this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n          o.value = value;\n          return;\n        }\n      }\n      this.addEventListener(typename.type, listener, capture);\n      o = {\n        type: typename.type,\n        name: typename.name,\n        value: value,\n        listener: listener,\n        capture: capture\n      };\n      if (!on) this.__on = [o];else on.push(o);\n    };\n  }\n\n  function selection_on(typename, value, capture) {\n    var typenames = parseTypenames$1(typename + \"\"),\n        i,\n        n = typenames.length,\n        t;\n\n    if (arguments.length < 2) {\n      var on = this.node().__on;\n\n      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n        for (i = 0, o = on[j]; i < n; ++i) {\n          if ((t = typenames[i]).type === o.type && t.name === o.name) {\n            return o.value;\n          }\n        }\n      }\n      return;\n    }\n\n    on = value ? onAdd : onRemove;\n    if (capture == null) capture = false;\n\n    for (i = 0; i < n; ++i) {\n      this.each(on(typenames[i], value, capture));\n    }\n\n    return this;\n  }\n\n  function dispatchEvent(node, type, params) {\n    var window = defaultView(node),\n        event = window.CustomEvent;\n\n    if (typeof event === \"function\") {\n      event = new event(type, params);\n    } else {\n      event = window.document.createEvent(\"Event\");\n      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);\n    }\n\n    node.dispatchEvent(event);\n  }\n\n  function dispatchConstant(type, params) {\n    return function () {\n      return dispatchEvent(this, type, params);\n    };\n  }\n\n  function dispatchFunction(type, params) {\n    return function () {\n      return dispatchEvent(this, type, params.apply(this, arguments));\n    };\n  }\n\n  function selection_dispatch(type, params) {\n    return this.each((typeof params === \"function\" ? dispatchFunction : dispatchConstant)(type, params));\n  }\n\n  var root = [null];\n\n  function Selection(groups, parents) {\n    this._groups = groups;\n    this._parents = parents;\n  }\n\n  function selection() {\n    return new Selection([[document.documentElement]], root);\n  }\n\n  Selection.prototype = selection.prototype = {\n    constructor: Selection,\n    select: selection_select,\n    selectAll: selection_selectAll,\n    filter: selection_filter,\n    data: selection_data,\n    enter: selection_enter,\n    exit: selection_exit,\n    join: selection_join,\n    merge: selection_merge,\n    order: selection_order,\n    sort: selection_sort,\n    call: selection_call,\n    nodes: selection_nodes,\n    node: selection_node,\n    size: selection_size,\n    empty: selection_empty,\n    each: selection_each,\n    attr: selection_attr,\n    style: selection_style,\n    property: selection_property,\n    classed: selection_classed,\n    text: selection_text,\n    html: selection_html,\n    raise: selection_raise,\n    lower: selection_lower,\n    append: selection_append,\n    insert: selection_insert,\n    remove: selection_remove,\n    clone: selection_clone,\n    datum: selection_datum,\n    on: selection_on,\n    dispatch: selection_dispatch\n  };\n\n  function select(selector) {\n    return typeof selector === \"string\" ? new Selection([[document.querySelector(selector)]], [document.documentElement]) : new Selection([[selector]], root);\n  }\n\n  function sourceEvent() {\n    var current = event,\n        source;\n\n    while (source = current.sourceEvent) {\n      current = source;\n    }\n\n    return current;\n  }\n\n  function point(node, event) {\n    var svg = node.ownerSVGElement || node;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = node.getBoundingClientRect();\n    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n  }\n\n  function mouse(node) {\n    var event = sourceEvent();\n    if (event.changedTouches) event = event.changedTouches[0];\n    return point(node, event);\n  }\n\n  function define(constructor, factory, prototype) {\n    constructor.prototype = factory.prototype = prototype;\n    prototype.constructor = constructor;\n  }\n\n  function extend(parent, definition) {\n    var prototype = Object.create(parent.prototype);\n\n    for (var key in definition) {\n      prototype[key] = definition[key];\n    }\n\n    return prototype;\n  }\n\n  function Color() {}\n\n  var _darker = 0.7;\n\n  var _brighter = 1 / _darker;\n\n  var reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n      reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n      reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n      reHex3 = /^#([0-9a-f]{3})$/,\n      reHex6 = /^#([0-9a-f]{6})$/,\n      reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n      reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n      reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n      reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n      reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n      reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n  var named = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n  };\n  define(Color, color, {\n    displayable: function displayable() {\n      return this.rgb().displayable();\n    },\n    hex: function hex() {\n      return this.rgb().hex();\n    },\n    toString: function toString() {\n      return this.rgb() + \"\";\n    }\n  });\n\n  function color(format) {\n    var m;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb(m >> 8 & 0xf | m >> 4 & 0x0f0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00\n    ) : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n    : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n    : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n    : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n    : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n    : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n    : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n    : named.hasOwnProperty(format) ? rgbn(named[format]) : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0) : null;\n  }\n\n  function rgbn(n) {\n    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n  }\n\n  function rgba(r, g, b, a) {\n    if (a <= 0) r = g = b = NaN;\n    return new Rgb(r, g, b, a);\n  }\n\n  function rgbConvert(o) {\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Rgb();\n    o = o.rgb();\n    return new Rgb(o.r, o.g, o.b, o.opacity);\n  }\n\n  function rgb(r, g, b, opacity) {\n    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n  }\n\n  function Rgb(r, g, b, opacity) {\n    this.r = +r;\n    this.g = +g;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Rgb, rgb, extend(Color, {\n    brighter: function brighter(k) {\n      k = k == null ? _brighter : Math.pow(_brighter, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    darker: function darker(k) {\n      k = k == null ? _darker : Math.pow(_darker, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    rgb: function rgb() {\n      return this;\n    },\n    displayable: function displayable() {\n      return 0 <= this.r && this.r <= 255 && 0 <= this.g && this.g <= 255 && 0 <= this.b && this.b <= 255 && 0 <= this.opacity && this.opacity <= 1;\n    },\n    hex: function hex() {\n      return \"#\" + _hex(this.r) + _hex(this.g) + _hex(this.b);\n    },\n    toString: function toString() {\n      var a = this.opacity;\n      a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n      return (a === 1 ? \"rgb(\" : \"rgba(\") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \" + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \" + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? \")\" : \", \" + a + \")\");\n    }\n  }));\n\n  function _hex(value) {\n    value = Math.max(0, Math.min(255, Math.round(value) || 0));\n    return (value < 16 ? \"0\" : \"\") + value.toString(16);\n  }\n\n  function hsla(h, s, l, a) {\n    if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;\n    return new Hsl(h, s, l, a);\n  }\n\n  function hslConvert(o) {\n    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Hsl();\n    if (o instanceof Hsl) return o;\n    o = o.rgb();\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        h = NaN,\n        s = max - min,\n        l = (max + min) / 2;\n\n    if (s) {\n      if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;\n      s /= l < 0.5 ? max + min : 2 - max - min;\n      h *= 60;\n    } else {\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n\n    return new Hsl(h, s, l, o.opacity);\n  }\n\n  function hsl(h, s, l, opacity) {\n    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hsl(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hsl, hsl, extend(Color, {\n    brighter: function brighter(k) {\n      k = k == null ? _brighter : Math.pow(_brighter, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function darker(k) {\n      k = k == null ? _darker : Math.pow(_darker, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function rgb() {\n      var h = this.h % 360 + (this.h < 0) * 360,\n          s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n          l = this.l,\n          m2 = l + (l < 0.5 ? l : 1 - l) * s,\n          m1 = 2 * l - m2;\n      return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);\n    },\n    displayable: function displayable() {\n      return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;\n    }\n  }));\n  /* From FvD 13.37, CSS Color Module Level 3 */\n\n  function hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;\n  }\n\n  var deg2rad = Math.PI / 180;\n  var rad2deg = 180 / Math.PI; // https://beta.observablehq.com/@mbostock/lab-and-rgb\n\n  var K = 18,\n      Xn = 0.96422,\n      Yn = 1,\n      Zn = 0.82521,\n      t0 = 4 / 29,\n      t1 = 6 / 29,\n      t2 = 3 * t1 * t1,\n      t3 = t1 * t1 * t1;\n\n  function labConvert(o) {\n    if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\n    if (o instanceof Hcl) {\n      if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n      var h = o.h * deg2rad;\n      return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n    }\n\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var r = rgb2lrgb(o.r),\n        g = rgb2lrgb(o.g),\n        b = rgb2lrgb(o.b),\n        y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn),\n        x,\n        z;\n    if (r === g && g === b) x = z = y;else {\n      x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n      z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n    }\n    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n  }\n\n  function lab(l, a, b, opacity) {\n    return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n  }\n\n  function Lab(l, a, b, opacity) {\n    this.l = +l;\n    this.a = +a;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Lab, lab, extend(Color, {\n    brighter: function brighter(k) {\n      return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    darker: function darker(k) {\n      return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    rgb: function rgb() {\n      var y = (this.l + 16) / 116,\n          x = isNaN(this.a) ? y : y + this.a / 500,\n          z = isNaN(this.b) ? y : y - this.b / 200;\n      x = Xn * lab2xyz(x);\n      y = Yn * lab2xyz(y);\n      z = Zn * lab2xyz(z);\n      return new Rgb(lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);\n    }\n  }));\n\n  function xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n  }\n\n  function lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n  }\n\n  function lrgb2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n  }\n\n  function rgb2lrgb(x) {\n    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  }\n\n  function hclConvert(o) {\n    if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n    if (!(o instanceof Lab)) o = labConvert(o);\n    if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n    var h = Math.atan2(o.b, o.a) * rad2deg;\n    return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n  }\n\n  function hcl(h, c, l, opacity) {\n    return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hcl(h, c, l, opacity) {\n    this.h = +h;\n    this.c = +c;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hcl, hcl, extend(Color, {\n    brighter: function brighter(k) {\n      return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n    },\n    darker: function darker(k) {\n      return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n    },\n    rgb: function rgb() {\n      return labConvert(this).rgb();\n    }\n  }));\n  var A = -0.14861,\n      B = +1.78277,\n      C = -0.29227,\n      D = -0.90649,\n      E = +1.97294,\n      ED = E * D,\n      EB = E * B,\n      BC_DA = B * C - D * A;\n\n  function cubehelixConvert(o) {\n    if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n        bl = b - l,\n        k = (E * (g - l) - C * bl) / D,\n        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),\n        // NaN if l=0 or l=1\n    h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n    return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n  }\n\n  function cubehelix(h, s, l, opacity) {\n    return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Cubehelix(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Cubehelix, cubehelix, extend(Color, {\n    brighter: function brighter(k) {\n      k = k == null ? _brighter : Math.pow(_brighter, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function darker(k) {\n      k = k == null ? _darker : Math.pow(_darker, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function rgb() {\n      var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n          l = +this.l,\n          a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n          cosh = Math.cos(h),\n          sinh = Math.sin(h);\n      return new Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);\n    }\n  }));\n\n  function basis(t1, v0, v1, v2, v3) {\n    var t2 = t1 * t1,\n        t3 = t2 * t1;\n    return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;\n  }\n\n  function basis$1(values) {\n    var n = values.length - 1;\n    return function (t) {\n      var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n          v1 = values[i],\n          v2 = values[i + 1],\n          v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n          v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n      return basis((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  function constant$1(x) {\n    return function () {\n      return x;\n    };\n  }\n\n  function linear(a, d) {\n    return function (t) {\n      return a + t * d;\n    };\n  }\n\n  function exponential(a, b, y) {\n    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {\n      return Math.pow(a + t * b, y);\n    };\n  }\n\n  function hue(a, b) {\n    var d = b - a;\n    return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$1(isNaN(a) ? b : a);\n  }\n\n  function gamma(y) {\n    return (y = +y) === 1 ? nogamma : function (a, b) {\n      return b - a ? exponential(a, b, y) : constant$1(isNaN(a) ? b : a);\n    };\n  }\n\n  function nogamma(a, b) {\n    var d = b - a;\n    return d ? linear(a, d) : constant$1(isNaN(a) ? b : a);\n  }\n\n  var interpolateRgb = function rgbGamma(y) {\n    var color = gamma(y);\n\n    function rgb$1(start, end) {\n      var r = color((start = rgb(start)).r, (end = rgb(end)).r),\n          g = color(start.g, end.g),\n          b = color(start.b, end.b),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function (t) {\n        start.r = r(t);\n        start.g = g(t);\n        start.b = b(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    rgb$1.gamma = rgbGamma;\n    return rgb$1;\n  }(1);\n\n  function rgbSpline(spline) {\n    return function (colors) {\n      var n = colors.length,\n          r = new Array(n),\n          g = new Array(n),\n          b = new Array(n),\n          i,\n          color;\n\n      for (i = 0; i < n; ++i) {\n        color = rgb(colors[i]);\n        r[i] = color.r || 0;\n        g[i] = color.g || 0;\n        b[i] = color.b || 0;\n      }\n\n      r = spline(r);\n      g = spline(g);\n      b = spline(b);\n      color.opacity = 1;\n      return function (t) {\n        color.r = r(t);\n        color.g = g(t);\n        color.b = b(t);\n        return color + \"\";\n      };\n    };\n  }\n\n  var rgbBasis = rgbSpline(basis$1);\n\n  function array(a, b) {\n    var nb = b ? b.length : 0,\n        na = a ? Math.min(nb, a.length) : 0,\n        x = new Array(na),\n        c = new Array(nb),\n        i;\n\n    for (i = 0; i < na; ++i) {\n      x[i] = interpolateValue(a[i], b[i]);\n    }\n\n    for (; i < nb; ++i) {\n      c[i] = b[i];\n    }\n\n    return function (t) {\n      for (i = 0; i < na; ++i) {\n        c[i] = x[i](t);\n      }\n\n      return c;\n    };\n  }\n\n  function date(a, b) {\n    var d = new Date();\n    return a = +a, b -= a, function (t) {\n      return d.setTime(a + b * t), d;\n    };\n  }\n\n  function interpolateNumber(a, b) {\n    return a = +a, b -= a, function (t) {\n      return a + b * t;\n    };\n  }\n\n  function object(a, b) {\n    var i = {},\n        c = {},\n        k;\n    if (a === null || typeof a !== \"object\") a = {};\n    if (b === null || typeof b !== \"object\") b = {};\n\n    for (k in b) {\n      if (k in a) {\n        i[k] = interpolateValue(a[k], b[k]);\n      } else {\n        c[k] = b[k];\n      }\n    }\n\n    return function (t) {\n      for (k in i) {\n        c[k] = i[k](t);\n      }\n\n      return c;\n    };\n  }\n\n  var reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n      reB = new RegExp(reA.source, \"g\");\n\n  function zero(b) {\n    return function () {\n      return b;\n    };\n  }\n\n  function one(b) {\n    return function (t) {\n      return b(t) + \"\";\n    };\n  }\n\n  function interpolateString(a, b) {\n    var bi = reA.lastIndex = reB.lastIndex = 0,\n        // scan index for next number in b\n    am,\n        // current match in a\n    bm,\n        // current match in b\n    bs,\n        // string preceding current number in b, if any\n    i = -1,\n        // index in s\n    s = [],\n        // string constants and placeholders\n    q = []; // number interpolators\n    // Coerce inputs to strings.\n\n    a = a + \"\", b = b + \"\"; // Interpolate pairs of numbers in a & b.\n\n    while ((am = reA.exec(a)) && (bm = reB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        // a string precedes the next number in b\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; // coalesce with previous string\n        else s[++i] = bs;\n      }\n\n      if ((am = am[0]) === (bm = bm[0])) {\n        // numbers in a & b match\n        if (s[i]) s[i] += bm; // coalesce with previous string\n        else s[++i] = bm;\n      } else {\n        // interpolate non-matching numbers\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: interpolateNumber(am, bm)\n        });\n      }\n\n      bi = reB.lastIndex;\n    } // Add remains of b.\n\n\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    } // Special optimization for only a single match.\n    // Otherwise, interpolate each of the numbers and rejoin the string.\n\n\n    return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {\n      for (var i = 0, o; i < b; ++i) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    });\n  }\n\n  function interpolateValue(a, b) {\n    var t = typeof b,\n        c;\n    return b == null || t === \"boolean\" ? constant$1(b) : (t === \"number\" ? interpolateNumber : t === \"string\" ? (c = color(b)) ? (b = c, interpolateRgb) : interpolateString : b instanceof color ? interpolateRgb : b instanceof Date ? date : Array.isArray(b) ? array : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object : interpolateNumber)(a, b);\n  }\n\n  function interpolateRound(a, b) {\n    return a = +a, b -= a, function (t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  var degrees = 180 / Math.PI;\n  var identity$1 = {\n    translateX: 0,\n    translateY: 0,\n    rotate: 0,\n    skewX: 0,\n    scaleX: 1,\n    scaleY: 1\n  };\n\n  function decompose(a, b, c, d, e, f) {\n    var scaleX, scaleY, skewX;\n    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n    return {\n      translateX: e,\n      translateY: f,\n      rotate: Math.atan2(b, a) * degrees,\n      skewX: Math.atan(skewX) * degrees,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var cssNode, cssRoot, cssView, svgNode;\n\n  function parseCss(value) {\n    if (value === \"none\") return identity$1;\n    if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n    cssNode.style.transform = value;\n    value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n    cssRoot.removeChild(cssNode);\n    value = value.slice(7, -1).split(\",\");\n    return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n  }\n\n  function parseSvg(value) {\n    if (value == null) return identity$1;\n    if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    svgNode.setAttribute(\"transform\", value);\n    if (!(value = svgNode.transform.baseVal.consolidate())) return identity$1;\n    value = value.matrix;\n    return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n  }\n\n  function interpolateTransform(parse, pxComma, pxParen, degParen) {\n    function pop(s) {\n      return s.length ? s.pop() + \" \" : \"\";\n    }\n\n    function translate(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n        q.push({\n          i: i - 4,\n          x: interpolateNumber(xa, xb)\n        }, {\n          i: i - 2,\n          x: interpolateNumber(ya, yb)\n        });\n      } else if (xb || yb) {\n        s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n      }\n    }\n\n    function rotate(a, b, s, q) {\n      if (a !== b) {\n        if (a - b > 180) b += 360;else if (b - a > 180) a += 360; // shortest path\n\n        q.push({\n          i: s.push(pop(s) + \"rotate(\", null, degParen) - 2,\n          x: interpolateNumber(a, b)\n        });\n      } else if (b) {\n        s.push(pop(s) + \"rotate(\" + b + degParen);\n      }\n    }\n\n    function skewX(a, b, s, q) {\n      if (a !== b) {\n        q.push({\n          i: s.push(pop(s) + \"skewX(\", null, degParen) - 2,\n          x: interpolateNumber(a, b)\n        });\n      } else if (b) {\n        s.push(pop(s) + \"skewX(\" + b + degParen);\n      }\n    }\n\n    function scale(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n        q.push({\n          i: i - 4,\n          x: interpolateNumber(xa, xb)\n        }, {\n          i: i - 2,\n          x: interpolateNumber(ya, yb)\n        });\n      } else if (xb !== 1 || yb !== 1) {\n        s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n      }\n    }\n\n    return function (a, b) {\n      var s = [],\n          // string constants and placeholders\n      q = []; // number interpolators\n\n      a = parse(a), b = parse(b);\n      translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n      rotate(a.rotate, b.rotate, s, q);\n      skewX(a.skewX, b.skewX, s, q);\n      scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n      a = b = null; // gc\n\n      return function (t) {\n        var i = -1,\n            n = q.length,\n            o;\n\n        while (++i < n) {\n          s[(o = q[i]).i] = o.x(t);\n        }\n\n        return s.join(\"\");\n      };\n    };\n  }\n\n  var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n  var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n  var rho = Math.SQRT2;\n\n  function cubehelix$1(hue) {\n    return function cubehelixGamma(y) {\n      y = +y;\n\n      function cubehelix$1(start, end) {\n        var h = hue((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n            s = nogamma(start.s, end.s),\n            l = nogamma(start.l, end.l),\n            opacity = nogamma(start.opacity, end.opacity);\n        return function (t) {\n          start.h = h(t);\n          start.s = s(t);\n          start.l = l(Math.pow(t, y));\n          start.opacity = opacity(t);\n          return start + \"\";\n        };\n      }\n\n      cubehelix$1.gamma = cubehelixGamma;\n      return cubehelix$1;\n    }(1);\n  }\n\n  cubehelix$1(hue);\n  var cubehelixLong = cubehelix$1(nogamma);\n  var frame = 0,\n      // is an animation frame pending?\n  timeout = 0,\n      // is a timeout pending?\n  interval = 0,\n      // are any timers active?\n  pokeDelay = 1000,\n      // how frequently we check for clock skew\n  taskHead,\n      taskTail,\n      clockLast = 0,\n      clockNow = 0,\n      clockSkew = 0,\n      clock = typeof performance === \"object\" && performance.now ? performance : Date,\n      setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {\n    setTimeout(f, 17);\n  };\n\n  function now() {\n    return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n  }\n\n  function clearNow() {\n    clockNow = 0;\n  }\n\n  function Timer() {\n    this._call = this._time = this._next = null;\n  }\n\n  Timer.prototype = timer.prototype = {\n    constructor: Timer,\n    restart: function restart(callback, delay, time) {\n      if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n      time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\n      if (!this._next && taskTail !== this) {\n        if (taskTail) taskTail._next = this;else taskHead = this;\n        taskTail = this;\n      }\n\n      this._call = callback;\n      this._time = time;\n      sleep();\n    },\n    stop: function stop() {\n      if (this._call) {\n        this._call = null;\n        this._time = Infinity;\n        sleep();\n      }\n    }\n  };\n\n  function timer(callback, delay, time) {\n    var t = new Timer();\n    t.restart(callback, delay, time);\n    return t;\n  }\n\n  function timerFlush() {\n    now(); // Get the current time, if not already set.\n\n    ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\n    var t = taskHead,\n        e;\n\n    while (t) {\n      if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n      t = t._next;\n    }\n\n    --frame;\n  }\n\n  function wake() {\n    clockNow = (clockLast = clock.now()) + clockSkew;\n    frame = timeout = 0;\n\n    try {\n      timerFlush();\n    } finally {\n      frame = 0;\n      nap();\n      clockNow = 0;\n    }\n  }\n\n  function poke() {\n    var now = clock.now(),\n        delay = now - clockLast;\n    if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n  }\n\n  function nap() {\n    var t0,\n        t1 = taskHead,\n        t2,\n        time = Infinity;\n\n    while (t1) {\n      if (t1._call) {\n        if (time > t1._time) time = t1._time;\n        t0 = t1, t1 = t1._next;\n      } else {\n        t2 = t1._next, t1._next = null;\n        t1 = t0 ? t0._next = t2 : taskHead = t2;\n      }\n    }\n\n    taskTail = t0;\n    sleep(time);\n  }\n\n  function sleep(time) {\n    if (frame) return; // Soonest alarm already set, or will be.\n\n    if (timeout) timeout = clearTimeout(timeout);\n    var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\n    if (delay > 24) {\n      if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n      if (interval) interval = clearInterval(interval);\n    } else {\n      if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n      frame = 1, setFrame(wake);\n    }\n  }\n\n  function timeout$1(callback, delay, time) {\n    var t = new Timer();\n    delay = delay == null ? 0 : +delay;\n    t.restart(function (elapsed) {\n      t.stop();\n      callback(elapsed + delay);\n    }, delay, time);\n    return t;\n  }\n\n  var emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\n  var emptyTween = [];\n  var CREATED = 0;\n  var SCHEDULED = 1;\n  var STARTING = 2;\n  var STARTED = 3;\n  var RUNNING = 4;\n  var ENDING = 5;\n  var ENDED = 6;\n\n  function schedule(node, name, id, index, group, timing) {\n    var schedules = node.__transition;\n    if (!schedules) node.__transition = {};else if (id in schedules) return;\n    create(node, id, {\n      name: name,\n      index: index,\n      // For context during callback.\n      group: group,\n      // For context during callback.\n      on: emptyOn,\n      tween: emptyTween,\n      time: timing.time,\n      delay: timing.delay,\n      duration: timing.duration,\n      ease: timing.ease,\n      timer: null,\n      state: CREATED\n    });\n  }\n\n  function init(node, id) {\n    var schedule = get$1(node, id);\n    if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n    return schedule;\n  }\n\n  function set$1(node, id) {\n    var schedule = get$1(node, id);\n    if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n    return schedule;\n  }\n\n  function get$1(node, id) {\n    var schedule = node.__transition;\n    if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n    return schedule;\n  }\n\n  function create(node, id, self) {\n    var schedules = node.__transition,\n        tween; // Initialize the self timer when the transition is created.\n    // Note the actual delay is not known until the first callback!\n\n    schedules[id] = self;\n    self.timer = timer(schedule, 0, self.time);\n\n    function schedule(elapsed) {\n      self.state = SCHEDULED;\n      self.timer.restart(start, self.delay, self.time); // If the elapsed delay is less than our first sleep, start immediately.\n\n      if (self.delay <= elapsed) start(elapsed - self.delay);\n    }\n\n    function start(elapsed) {\n      var i, j, n, o; // If the state is not SCHEDULED, then we previously errored on start.\n\n      if (self.state !== SCHEDULED) return stop();\n\n      for (i in schedules) {\n        o = schedules[i];\n        if (o.name !== self.name) continue; // While this element already has a starting transition during this frame,\n        // defer starting an interrupting transition until that transition has a\n        // chance to tick (and possibly end); see d3/d3-transition#54!\n\n        if (o.state === STARTED) return timeout$1(start); // Interrupt the active transition, if any.\n\n        if (o.state === RUNNING) {\n          o.state = ENDED;\n          o.timer.stop();\n          o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n          delete schedules[i];\n        } // Cancel any pre-empted transitions.\n        else if (+i < id) {\n            o.state = ENDED;\n            o.timer.stop();\n            o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n            delete schedules[i];\n          }\n      } // Defer the first tick to end of the current frame; see d3/d3#1576.\n      // Note the transition may be canceled after start and before the first tick!\n      // Note this must be scheduled before the start event; see d3/d3-transition#16!\n      // Assuming this is successful, subsequent callbacks go straight to tick.\n\n\n      timeout$1(function () {\n        if (self.state === STARTED) {\n          self.state = RUNNING;\n          self.timer.restart(tick, self.delay, self.time);\n          tick(elapsed);\n        }\n      }); // Dispatch the start event.\n      // Note this must be done before the tween are initialized.\n\n      self.state = STARTING;\n      self.on.call(\"start\", node, node.__data__, self.index, self.group);\n      if (self.state !== STARTING) return; // interrupted\n\n      self.state = STARTED; // Initialize the tween, deleting null tween.\n\n      tween = new Array(n = self.tween.length);\n\n      for (i = 0, j = -1; i < n; ++i) {\n        if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n          tween[++j] = o;\n        }\n      }\n\n      tween.length = j + 1;\n    }\n\n    function tick(elapsed) {\n      var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n          i = -1,\n          n = tween.length;\n\n      while (++i < n) {\n        tween[i].call(node, t);\n      } // Dispatch the end event.\n\n\n      if (self.state === ENDING) {\n        self.on.call(\"end\", node, node.__data__, self.index, self.group);\n        stop();\n      }\n    }\n\n    function stop() {\n      self.state = ENDED;\n      self.timer.stop();\n      delete schedules[id];\n\n      for (var i in schedules) {\n        return;\n      } // eslint-disable-line no-unused-vars\n\n\n      delete node.__transition;\n    }\n  }\n\n  function interrupt(node, name) {\n    var schedules = node.__transition,\n        schedule,\n        active,\n        empty = true,\n        i;\n    if (!schedules) return;\n    name = name == null ? null : name + \"\";\n\n    for (i in schedules) {\n      if ((schedule = schedules[i]).name !== name) {\n        empty = false;\n        continue;\n      }\n\n      active = schedule.state > STARTING && schedule.state < ENDING;\n      schedule.state = ENDED;\n      schedule.timer.stop();\n      schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n      delete schedules[i];\n    }\n\n    if (empty) delete node.__transition;\n  }\n\n  function selection_interrupt(name) {\n    return this.each(function () {\n      interrupt(this, name);\n    });\n  }\n\n  function tweenRemove(id, name) {\n    var tween0, tween1;\n    return function () {\n      var schedule = set$1(this, id),\n          tween = schedule.tween; // If this node shared tween with the previous node,\n      // just assign the updated shared tween and we’re done!\n      // Otherwise, copy-on-write.\n\n      if (tween !== tween0) {\n        tween1 = tween0 = tween;\n\n        for (var i = 0, n = tween1.length; i < n; ++i) {\n          if (tween1[i].name === name) {\n            tween1 = tween1.slice();\n            tween1.splice(i, 1);\n            break;\n          }\n        }\n      }\n\n      schedule.tween = tween1;\n    };\n  }\n\n  function tweenFunction(id, name, value) {\n    var tween0, tween1;\n    if (typeof value !== \"function\") throw new Error();\n    return function () {\n      var schedule = set$1(this, id),\n          tween = schedule.tween; // If this node shared tween with the previous node,\n      // just assign the updated shared tween and we’re done!\n      // Otherwise, copy-on-write.\n\n      if (tween !== tween0) {\n        tween1 = (tween0 = tween).slice();\n\n        for (var t = {\n          name: name,\n          value: value\n        }, i = 0, n = tween1.length; i < n; ++i) {\n          if (tween1[i].name === name) {\n            tween1[i] = t;\n            break;\n          }\n        }\n\n        if (i === n) tween1.push(t);\n      }\n\n      schedule.tween = tween1;\n    };\n  }\n\n  function transition_tween(name, value) {\n    var id = this._id;\n    name += \"\";\n\n    if (arguments.length < 2) {\n      var tween = get$1(this.node(), id).tween;\n\n      for (var i = 0, n = tween.length, t; i < n; ++i) {\n        if ((t = tween[i]).name === name) {\n          return t.value;\n        }\n      }\n\n      return null;\n    }\n\n    return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n  }\n\n  function tweenValue(transition, name, value) {\n    var id = transition._id;\n    transition.each(function () {\n      var schedule = set$1(this, id);\n      (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n    });\n    return function (node) {\n      return get$1(node, id).value[name];\n    };\n  }\n\n  function interpolate(a, b) {\n    var c;\n    return (typeof b === \"number\" ? interpolateNumber : b instanceof color ? interpolateRgb : (c = color(b)) ? (b = c, interpolateRgb) : interpolateString)(a, b);\n  }\n\n  function attrRemove$1(name) {\n    return function () {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS$1(fullname) {\n    return function () {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant$1(name, interpolate, value1) {\n    var string00,\n        string1 = value1 + \"\",\n        interpolate0;\n    return function () {\n      var string0 = this.getAttribute(name);\n      return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);\n    };\n  }\n\n  function attrConstantNS$1(fullname, interpolate, value1) {\n    var string00,\n        string1 = value1 + \"\",\n        interpolate0;\n    return function () {\n      var string0 = this.getAttributeNS(fullname.space, fullname.local);\n      return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);\n    };\n  }\n\n  function attrFunction$1(name, interpolate, value) {\n    var string00, string10, interpolate0;\n    return function () {\n      var string0,\n          value1 = value(this),\n          string1;\n      if (value1 == null) return void this.removeAttribute(name);\n      string0 = this.getAttribute(name);\n      string1 = value1 + \"\";\n      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n    };\n  }\n\n  function attrFunctionNS$1(fullname, interpolate, value) {\n    var string00, string10, interpolate0;\n    return function () {\n      var string0,\n          value1 = value(this),\n          string1;\n      if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n      string0 = this.getAttributeNS(fullname.space, fullname.local);\n      string1 = value1 + \"\";\n      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n    };\n  }\n\n  function transition_attr(name, value) {\n    var fullname = namespace(name),\n        i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n    return this.attrTween(name, typeof value === \"function\" ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value)) : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname) : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n  }\n\n  function attrInterpolate(name, i) {\n    return function (t) {\n      this.setAttribute(name, i(t));\n    };\n  }\n\n  function attrInterpolateNS(fullname, i) {\n    return function (t) {\n      this.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n\n  function attrTweenNS(fullname, value) {\n    var t0, i0;\n\n    function tween() {\n      var i = value.apply(this, arguments);\n      if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n      return t0;\n    }\n\n    tween._value = value;\n    return tween;\n  }\n\n  function attrTween(name, value) {\n    var t0, i0;\n\n    function tween() {\n      var i = value.apply(this, arguments);\n      if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n      return t0;\n    }\n\n    tween._value = value;\n    return tween;\n  }\n\n  function transition_attrTween(name, value) {\n    var key = \"attr.\" + name;\n    if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n    if (value == null) return this.tween(key, null);\n    if (typeof value !== \"function\") throw new Error();\n    var fullname = namespace(name);\n    return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n  }\n\n  function delayFunction(id, value) {\n    return function () {\n      init(this, id).delay = +value.apply(this, arguments);\n    };\n  }\n\n  function delayConstant(id, value) {\n    return value = +value, function () {\n      init(this, id).delay = value;\n    };\n  }\n\n  function transition_delay(value) {\n    var id = this._id;\n    return arguments.length ? this.each((typeof value === \"function\" ? delayFunction : delayConstant)(id, value)) : get$1(this.node(), id).delay;\n  }\n\n  function durationFunction(id, value) {\n    return function () {\n      set$1(this, id).duration = +value.apply(this, arguments);\n    };\n  }\n\n  function durationConstant(id, value) {\n    return value = +value, function () {\n      set$1(this, id).duration = value;\n    };\n  }\n\n  function transition_duration(value) {\n    var id = this._id;\n    return arguments.length ? this.each((typeof value === \"function\" ? durationFunction : durationConstant)(id, value)) : get$1(this.node(), id).duration;\n  }\n\n  function easeConstant(id, value) {\n    if (typeof value !== \"function\") throw new Error();\n    return function () {\n      set$1(this, id).ease = value;\n    };\n  }\n\n  function transition_ease(value) {\n    var id = this._id;\n    return arguments.length ? this.each(easeConstant(id, value)) : get$1(this.node(), id).ease;\n  }\n\n  function transition_filter(match) {\n    if (typeof match !== \"function\") match = matcher(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Transition(subgroups, this._parents, this._name, this._id);\n  }\n\n  function transition_merge(transition) {\n    if (transition._id !== this._id) throw new Error();\n\n    for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Transition(merges, this._parents, this._name, this._id);\n  }\n\n  function start(name) {\n    return (name + \"\").trim().split(/^|\\s+/).every(function (t) {\n      var i = t.indexOf(\".\");\n      if (i >= 0) t = t.slice(0, i);\n      return !t || t === \"start\";\n    });\n  }\n\n  function onFunction(id, name, listener) {\n    var on0,\n        on1,\n        sit = start(name) ? init : set$1;\n    return function () {\n      var schedule = sit(this, id),\n          on = schedule.on; // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n\n      if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n      schedule.on = on1;\n    };\n  }\n\n  function transition_on(name, listener) {\n    var id = this._id;\n    return arguments.length < 2 ? get$1(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));\n  }\n\n  function removeFunction(id) {\n    return function () {\n      var parent = this.parentNode;\n\n      for (var i in this.__transition) {\n        if (+i !== id) return;\n      }\n\n      if (parent) parent.removeChild(this);\n    };\n  }\n\n  function transition_remove() {\n    return this.on(\"end.remove\", removeFunction(this._id));\n  }\n\n  function transition_select(select) {\n    var name = this._name,\n        id = this._id;\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n          schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n        }\n      }\n    }\n\n    return new Transition(subgroups, this._parents, name, id);\n  }\n\n  function transition_selectAll(select) {\n    var name = this._name,\n        id = this._id;\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n            if (child = children[k]) {\n              schedule(child, name, id, k, children, inherit);\n            }\n          }\n\n          subgroups.push(children);\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Transition(subgroups, parents, name, id);\n  }\n\n  var Selection$1 = selection.prototype.constructor;\n\n  function transition_selection() {\n    return new Selection$1(this._groups, this._parents);\n  }\n\n  function styleNull(name, interpolate) {\n    var string00, string10, interpolate0;\n    return function () {\n      var string0 = styleValue(this, name),\n          string1 = (this.style.removeProperty(name), styleValue(this, name));\n      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);\n    };\n  }\n\n  function styleRemove$1(name) {\n    return function () {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant$1(name, interpolate, value1) {\n    var string00,\n        string1 = value1 + \"\",\n        interpolate0;\n    return function () {\n      var string0 = styleValue(this, name);\n      return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);\n    };\n  }\n\n  function styleFunction$1(name, interpolate, value) {\n    var string00, string10, interpolate0;\n    return function () {\n      var string0 = styleValue(this, name),\n          value1 = value(this),\n          string1 = value1 + \"\";\n      if (value1 == null) string1 = value1 = (this.style.removeProperty(name), styleValue(this, name));\n      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n    };\n  }\n\n  function styleMaybeRemove(id, name) {\n    var on0,\n        on1,\n        listener0,\n        key = \"style.\" + name,\n        event = \"end.\" + key,\n        remove;\n    return function () {\n      var schedule = set$1(this, id),\n          on = schedule.on,\n          listener = schedule.value[key] == null ? remove || (remove = styleRemove$1(name)) : undefined; // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n\n      if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n      schedule.on = on1;\n    };\n  }\n\n  function transition_style(name, value, priority) {\n    var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n    return value == null ? this.styleTween(name, styleNull(name, i)).on(\"end.style.\" + name, styleRemove$1(name)) : typeof value === \"function\" ? this.styleTween(name, styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, styleConstant$1(name, i, value), priority).on(\"end.style.\" + name, null);\n  }\n\n  function styleInterpolate(name, i, priority) {\n    return function (t) {\n      this.style.setProperty(name, i(t), priority);\n    };\n  }\n\n  function styleTween(name, value, priority) {\n    var t, i0;\n\n    function tween() {\n      var i = value.apply(this, arguments);\n      if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n      return t;\n    }\n\n    tween._value = value;\n    return tween;\n  }\n\n  function transition_styleTween(name, value, priority) {\n    var key = \"style.\" + (name += \"\");\n    if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n    if (value == null) return this.tween(key, null);\n    if (typeof value !== \"function\") throw new Error();\n    return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n  }\n\n  function textConstant$1(value) {\n    return function () {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction$1(value) {\n    return function () {\n      var value1 = value(this);\n      this.textContent = value1 == null ? \"\" : value1;\n    };\n  }\n\n  function transition_text(value) {\n    return this.tween(\"text\", typeof value === \"function\" ? textFunction$1(tweenValue(this, \"text\", value)) : textConstant$1(value == null ? \"\" : value + \"\"));\n  }\n\n  function transition_transition() {\n    var name = this._name,\n        id0 = this._id,\n        id1 = newId();\n\n    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          var inherit = get$1(node, id0);\n          schedule(node, name, id1, i, group, {\n            time: inherit.time + inherit.delay + inherit.duration,\n            delay: 0,\n            duration: inherit.duration,\n            ease: inherit.ease\n          });\n        }\n      }\n    }\n\n    return new Transition(groups, this._parents, name, id1);\n  }\n\n  function transition_end() {\n    var on0,\n        on1,\n        that = this,\n        id = that._id,\n        size = that.size();\n    return new Promise(function (resolve, reject) {\n      var cancel = {\n        value: reject\n      },\n          end = {\n        value: function value() {\n          if (--size === 0) resolve();\n        }\n      };\n      that.each(function () {\n        var schedule = set$1(this, id),\n            on = schedule.on; // If this node shared a dispatch with the previous node,\n        // just assign the updated shared dispatch and we’re done!\n        // Otherwise, copy-on-write.\n\n        if (on !== on0) {\n          on1 = (on0 = on).copy();\n\n          on1._.cancel.push(cancel);\n\n          on1._.interrupt.push(cancel);\n\n          on1._.end.push(end);\n        }\n\n        schedule.on = on1;\n      });\n    });\n  }\n\n  var id = 0;\n\n  function Transition(groups, parents, name, id) {\n    this._groups = groups;\n    this._parents = parents;\n    this._name = name;\n    this._id = id;\n  }\n\n  function transition(name) {\n    return selection().transition(name);\n  }\n\n  function newId() {\n    return ++id;\n  }\n\n  var selection_prototype = selection.prototype;\n  Transition.prototype = transition.prototype = {\n    constructor: Transition,\n    select: transition_select,\n    selectAll: transition_selectAll,\n    filter: transition_filter,\n    merge: transition_merge,\n    selection: transition_selection,\n    transition: transition_transition,\n    call: selection_prototype.call,\n    nodes: selection_prototype.nodes,\n    node: selection_prototype.node,\n    size: selection_prototype.size,\n    empty: selection_prototype.empty,\n    each: selection_prototype.each,\n    on: transition_on,\n    attr: transition_attr,\n    attrTween: transition_attrTween,\n    style: transition_style,\n    styleTween: transition_styleTween,\n    text: transition_text,\n    remove: transition_remove,\n    tween: transition_tween,\n    delay: transition_delay,\n    duration: transition_duration,\n    ease: transition_ease,\n    end: transition_end\n  };\n\n  function cubicInOut(t) {\n    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n  }\n\n  var pi = Math.PI;\n  var tau = 2 * Math.PI;\n  var defaultTiming = {\n    time: null,\n    // Set on use.\n    delay: 0,\n    duration: 250,\n    ease: cubicInOut\n  };\n\n  function inherit(node, id) {\n    var timing;\n\n    while (!(timing = node.__transition) || !(timing = timing[id])) {\n      if (!(node = node.parentNode)) {\n        return defaultTiming.time = now(), defaultTiming;\n      }\n    }\n\n    return timing;\n  }\n\n  function selection_transition(name) {\n    var id, timing;\n\n    if (name instanceof Transition) {\n      id = name._id, name = name._name;\n    } else {\n      id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n    }\n\n    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          schedule(node, name, id, i, group, timing || inherit(node, id));\n        }\n      }\n    }\n\n    return new Transition(groups, this._parents, name, id);\n  }\n\n  selection.prototype.interrupt = selection_interrupt;\n  selection.prototype.transition = selection_transition;\n  var pi$1 = Math.PI;\n  var pi$2 = Math.PI,\n      tau$1 = 2 * pi$2,\n      epsilon$1 = 1e-6,\n      tauEpsilon = tau$1 - epsilon$1;\n\n  function Path() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n\n    this._ = \"\";\n  }\n\n  function path() {\n    return new Path();\n  }\n\n  Path.prototype = path.prototype = {\n    constructor: Path,\n    moveTo: function moveTo(x, y) {\n      this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n    },\n    closePath: function closePath() {\n      if (this._x1 !== null) {\n        this._x1 = this._x0, this._y1 = this._y0;\n        this._ += \"Z\";\n      }\n    },\n    lineTo: function lineTo(x, y) {\n      this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n    },\n    quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n      this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n    },\n    bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n    },\n    arcTo: function arcTo(x1, y1, x2, y2, r) {\n      x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n      var x0 = this._x1,\n          y0 = this._y1,\n          x21 = x2 - x1,\n          y21 = y2 - y1,\n          x01 = x0 - x1,\n          y01 = y0 - y1,\n          l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n      if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n      if (this._x1 === null) {\n        this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n      } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n      else if (!(l01_2 > epsilon$1)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n        // Equivalently, is (x1,y1) coincident with (x2,y2)?\n        // Or, is the radius zero? Line to (x1,y1).\n        else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n            this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n          } // Otherwise, draw an arc!\n          else {\n              var x20 = x2 - x0,\n                  y20 = y2 - y0,\n                  l21_2 = x21 * x21 + y21 * y21,\n                  l20_2 = x20 * x20 + y20 * y20,\n                  l21 = Math.sqrt(l21_2),\n                  l01 = Math.sqrt(l01_2),\n                  l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n                  t01 = l / l01,\n                  t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n              if (Math.abs(t01 - 1) > epsilon$1) {\n                this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n              }\n\n              this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n            }\n    },\n    arc: function arc(x, y, r, a0, a1, ccw) {\n      x = +x, y = +y, r = +r;\n      var dx = r * Math.cos(a0),\n          dy = r * Math.sin(a0),\n          x0 = x + dx,\n          y0 = y + dy,\n          cw = 1 ^ ccw,\n          da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n      if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n      if (this._x1 === null) {\n        this._ += \"M\" + x0 + \",\" + y0;\n      } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n      else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n          this._ += \"L\" + x0 + \",\" + y0;\n        } // Is this arc empty? We’re done.\n\n\n      if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n      if (da < 0) da = da % tau$1 + tau$1; // Is this a complete circle? Draw two arcs to complete the circle.\n\n      if (da > tauEpsilon) {\n        this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n      } // Is this arc non-empty? Draw an arc!\n      else if (da > epsilon$1) {\n          this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi$2) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n        }\n    },\n    rect: function rect(x, y, w, h) {\n      this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n    },\n    toString: function toString() {\n      return this._;\n    }\n  };\n  var prefix = \"$\";\n\n  function Map$1() {}\n\n  Map$1.prototype = map.prototype = {\n    constructor: Map$1,\n    has: function has(key) {\n      return prefix + key in this;\n    },\n    get: function get(key) {\n      return this[prefix + key];\n    },\n    set: function set(key, value) {\n      this[prefix + key] = value;\n      return this;\n    },\n    remove: function remove(key) {\n      var property = prefix + key;\n      return property in this && delete this[property];\n    },\n    clear: function clear() {\n      for (var property in this) {\n        if (property[0] === prefix) delete this[property];\n      }\n    },\n    keys: function keys() {\n      var keys = [];\n\n      for (var property in this) {\n        if (property[0] === prefix) keys.push(property.slice(1));\n      }\n\n      return keys;\n    },\n    values: function values() {\n      var values = [];\n\n      for (var property in this) {\n        if (property[0] === prefix) values.push(this[property]);\n      }\n\n      return values;\n    },\n    entries: function entries() {\n      var entries = [];\n\n      for (var property in this) {\n        if (property[0] === prefix) entries.push({\n          key: property.slice(1),\n          value: this[property]\n        });\n      }\n\n      return entries;\n    },\n    size: function size() {\n      var size = 0;\n\n      for (var property in this) {\n        if (property[0] === prefix) ++size;\n      }\n\n      return size;\n    },\n    empty: function empty() {\n      for (var property in this) {\n        if (property[0] === prefix) return false;\n      }\n\n      return true;\n    },\n    each: function each(f) {\n      for (var property in this) {\n        if (property[0] === prefix) f(this[property], property.slice(1), this);\n      }\n    }\n  };\n\n  function map(object, f) {\n    var map = new Map$1(); // Copy constructor.\n\n    if (object instanceof Map$1) object.each(function (value, key) {\n      map.set(key, value);\n    }); // Index array by numeric index or specified key function.\n    else if (Array.isArray(object)) {\n        var i = -1,\n            n = object.length,\n            o;\n        if (f == null) while (++i < n) {\n          map.set(i, object[i]);\n        } else while (++i < n) {\n          map.set(f(o = object[i], i, object), o);\n        }\n      } // Convert object to map.\n      else if (object) for (var key in object) {\n          map.set(key, object[key]);\n        }\n    return map;\n  }\n\n  function Set$1() {}\n\n  var proto = map.prototype;\n  Set$1.prototype = set$2.prototype = {\n    constructor: Set$1,\n    has: proto.has,\n    add: function add(value) {\n      value += \"\";\n      this[prefix + value] = value;\n      return this;\n    },\n    remove: proto.remove,\n    clear: proto.clear,\n    values: proto.keys,\n    size: proto.size,\n    empty: proto.empty,\n    each: proto.each\n  };\n\n  function set$2(object, f) {\n    var set = new Set$1(); // Copy constructor.\n\n    if (object instanceof Set$1) object.each(function (value) {\n      set.add(value);\n    }); // Otherwise, assume it’s an array.\n    else if (object) {\n        var i = -1,\n            n = object.length;\n        if (f == null) while (++i < n) {\n          set.add(object[i]);\n        } else while (++i < n) {\n          set.add(f(object[i], i, object));\n        }\n      }\n    return set;\n  } // TODO Optimize edge cases.\n\n\n  var EOL = {},\n      EOF = {},\n      QUOTE = 34,\n      NEWLINE = 10,\n      RETURN = 13;\n\n  function objectConverter(columns) {\n    return new Function(\"d\", \"return {\" + columns.map(function (name, i) {\n      return JSON.stringify(name) + \": d[\" + i + \"]\";\n    }).join(\",\") + \"}\");\n  }\n\n  function customConverter(columns, f) {\n    var object = objectConverter(columns);\n    return function (row, i) {\n      return f(object(row), i, columns);\n    };\n  } // Compute unique columns in order of discovery.\n\n\n  function inferColumns(rows) {\n    var columnSet = Object.create(null),\n        columns = [];\n    rows.forEach(function (row) {\n      for (var column in row) {\n        if (!(column in columnSet)) {\n          columns.push(columnSet[column] = column);\n        }\n      }\n    });\n    return columns;\n  }\n\n  function pad(value, width) {\n    var s = value + \"\",\n        length = s.length;\n    return length < width ? new Array(width - length + 1).join(0) + s : s;\n  }\n\n  function formatYear(year) {\n    return year < 0 ? \"-\" + pad(-year, 6) : year > 9999 ? \"+\" + pad(year, 6) : pad(year, 4);\n  }\n\n  function formatDate(date) {\n    var hours = date.getUTCHours(),\n        minutes = date.getUTCMinutes(),\n        seconds = date.getUTCSeconds(),\n        milliseconds = date.getUTCMilliseconds();\n    return isNaN(date) ? \"Invalid Date\" : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2) + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\" : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\" : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\" : \"\");\n  }\n\n  function dsvFormat(delimiter) {\n    var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n        DELIMITER = delimiter.charCodeAt(0);\n\n    function parse(text, f) {\n      var convert,\n          columns,\n          rows = parseRows(text, function (row, i) {\n        if (convert) return convert(row, i - 1);\n        columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n      });\n      rows.columns = columns || [];\n      return rows;\n    }\n\n    function parseRows(text, f) {\n      var rows = [],\n          // output rows\n      N = text.length,\n          I = 0,\n          // current character index\n      n = 0,\n          // current line number\n      t,\n          // current token\n      eof = N <= 0,\n          // current token followed by EOF?\n      eol = false; // current token followed by EOL?\n      // Strip the trailing newline.\n\n      if (text.charCodeAt(N - 1) === NEWLINE) --N;\n      if (text.charCodeAt(N - 1) === RETURN) --N;\n\n      function token() {\n        if (eof) return EOF;\n        if (eol) return eol = false, EOL; // Unescape quotes.\n\n        var i,\n            j = I,\n            c;\n\n        if (text.charCodeAt(j) === QUOTE) {\n          while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE) {\n            ;\n          }\n\n          if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n            eol = true;\n            if (text.charCodeAt(I) === NEWLINE) ++I;\n          }\n          return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n        } // Find next delimiter or newline.\n\n\n        while (I < N) {\n          if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n            eol = true;\n            if (text.charCodeAt(I) === NEWLINE) ++I;\n          } else if (c !== DELIMITER) continue;\n          return text.slice(j, i);\n        } // Return last token before EOF.\n\n\n        return eof = true, text.slice(j, N);\n      }\n\n      while ((t = token()) !== EOF) {\n        var row = [];\n\n        while (t !== EOL && t !== EOF) {\n          row.push(t), t = token();\n        }\n\n        if (f && (row = f(row, n++)) == null) continue;\n        rows.push(row);\n      }\n\n      return rows;\n    }\n\n    function preformatBody(rows, columns) {\n      return rows.map(function (row) {\n        return columns.map(function (column) {\n          return formatValue(row[column]);\n        }).join(delimiter);\n      });\n    }\n\n    function format(rows, columns) {\n      if (columns == null) columns = inferColumns(rows);\n      return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n    }\n\n    function formatBody(rows, columns) {\n      if (columns == null) columns = inferColumns(rows);\n      return preformatBody(rows, columns).join(\"\\n\");\n    }\n\n    function formatRows(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    }\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(value) {\n      return value == null ? \"\" : value instanceof Date ? formatDate(value) : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\" : value;\n    }\n\n    return {\n      parse: parse,\n      parseRows: parseRows,\n      format: format,\n      formatBody: formatBody,\n      formatRows: formatRows\n    };\n  }\n\n  var csv = dsvFormat(\",\");\n  var tsv = dsvFormat(\"\\t\");\n\n  function tree_add(d) {\n    var x = +this._x.call(null, d),\n        y = +this._y.call(null, d);\n    return add(this.cover(x, y), x, y, d);\n  }\n\n  function add(tree, x, y, d) {\n    if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n    var parent,\n        node = tree._root,\n        leaf = {\n      data: d\n    },\n        x0 = tree._x0,\n        y0 = tree._y0,\n        x1 = tree._x1,\n        y1 = tree._y1,\n        xm,\n        ym,\n        xp,\n        yp,\n        right,\n        bottom,\n        i,\n        j; // If the tree is empty, initialize the root as a leaf.\n\n    if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.\n\n    while (node.length) {\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n      if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n    } // Is the new point is exactly coincident with the existing point?\n\n\n    xp = +tree._x.call(null, node.data);\n    yp = +tree._y.call(null, node.data);\n    if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.\n\n    do {\n      parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));\n\n    return parent[j] = node, parent[i] = leaf, tree;\n  }\n\n  function addAll(data) {\n    var d,\n        i,\n        n = data.length,\n        x,\n        y,\n        xz = new Array(n),\n        yz = new Array(n),\n        x0 = Infinity,\n        y0 = Infinity,\n        x1 = -Infinity,\n        y1 = -Infinity; // Compute the points and their extent.\n\n    for (i = 0; i < n; ++i) {\n      if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n      xz[i] = x;\n      yz[i] = y;\n      if (x < x0) x0 = x;\n      if (x > x1) x1 = x;\n      if (y < y0) y0 = y;\n      if (y > y1) y1 = y;\n    } // If there were no (valid) points, abort.\n\n\n    if (x0 > x1 || y0 > y1) return this; // Expand the tree to cover the new points.\n\n    this.cover(x0, y0).cover(x1, y1); // Add the new points.\n\n    for (i = 0; i < n; ++i) {\n      add(this, xz[i], yz[i], data[i]);\n    }\n\n    return this;\n  }\n\n  function tree_cover(x, y) {\n    if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n    var x0 = this._x0,\n        y0 = this._y0,\n        x1 = this._x1,\n        y1 = this._y1; // If the quadtree has no extent, initialize them.\n    // Integer extent are necessary so that if we later double the extent,\n    // the existing quadrant boundaries don’t change due to floating point error!\n\n    if (isNaN(x0)) {\n      x1 = (x0 = Math.floor(x)) + 1;\n      y1 = (y0 = Math.floor(y)) + 1;\n    } // Otherwise, double repeatedly to cover.\n    else {\n        var z = x1 - x0,\n            node = this._root,\n            parent,\n            i;\n\n        while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n          i = (y < y0) << 1 | x < x0;\n          parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n\n          switch (i) {\n            case 0:\n              x1 = x0 + z, y1 = y0 + z;\n              break;\n\n            case 1:\n              x0 = x1 - z, y1 = y0 + z;\n              break;\n\n            case 2:\n              x1 = x0 + z, y0 = y1 - z;\n              break;\n\n            case 3:\n              x0 = x1 - z, y0 = y1 - z;\n              break;\n          }\n        }\n\n        if (this._root && this._root.length) this._root = node;\n      }\n\n    this._x0 = x0;\n    this._y0 = y0;\n    this._x1 = x1;\n    this._y1 = y1;\n    return this;\n  }\n\n  function tree_data() {\n    var data = [];\n    this.visit(function (node) {\n      if (!node.length) do {\n        data.push(node.data);\n      } while (node = node.next);\n    });\n    return data;\n  }\n\n  function tree_extent(_) {\n    return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n  }\n\n  function Quad(node, x0, y0, x1, y1) {\n    this.node = node;\n    this.x0 = x0;\n    this.y0 = y0;\n    this.x1 = x1;\n    this.y1 = y1;\n  }\n\n  function tree_find(x, y, radius) {\n    var data,\n        x0 = this._x0,\n        y0 = this._y0,\n        x1,\n        y1,\n        x2,\n        y2,\n        x3 = this._x1,\n        y3 = this._y1,\n        quads = [],\n        node = this._root,\n        q,\n        i;\n    if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n    if (radius == null) radius = Infinity;else {\n      x0 = x - radius, y0 = y - radius;\n      x3 = x + radius, y3 = y + radius;\n      radius *= radius;\n    }\n\n    while (q = quads.pop()) {\n      // Stop searching if this quadrant can’t contain a closer node.\n      if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.\n\n      if (node.length) {\n        var xm = (x1 + x2) / 2,\n            ym = (y1 + y2) / 2;\n        quads.push(new Quad(node[3], xm, ym, x2, y2), new Quad(node[2], x1, ym, xm, y2), new Quad(node[1], xm, y1, x2, ym), new Quad(node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.\n\n        if (i = (y >= ym) << 1 | x >= xm) {\n          q = quads[quads.length - 1];\n          quads[quads.length - 1] = quads[quads.length - 1 - i];\n          quads[quads.length - 1 - i] = q;\n        }\n      } // Visit this point. (Visiting coincident points isn’t necessary!)\n      else {\n          var dx = x - +this._x.call(null, node.data),\n              dy = y - +this._y.call(null, node.data),\n              d2 = dx * dx + dy * dy;\n\n          if (d2 < radius) {\n            var d = Math.sqrt(radius = d2);\n            x0 = x - d, y0 = y - d;\n            x3 = x + d, y3 = y + d;\n            data = node.data;\n          }\n        }\n    }\n\n    return data;\n  }\n\n  function tree_remove(d) {\n    if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n    var parent,\n        node = this._root,\n        retainer,\n        previous,\n        next,\n        x0 = this._x0,\n        y0 = this._y0,\n        x1 = this._x1,\n        y1 = this._y1,\n        x,\n        y,\n        xm,\n        ym,\n        right,\n        bottom,\n        i,\n        j; // If the tree is empty, initialize the root as a leaf.\n\n    if (!node) return this; // Find the leaf node for the point.\n    // While descending, also retain the deepest parent with a non-removed sibling.\n\n    if (node.length) while (true) {\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n      if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n      if (!node.length) break;\n      if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;\n    } // Find the point to remove.\n\n    while (node.data !== d) {\n      if (!(previous = node, node = node.next)) return this;\n    }\n\n    if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.\n\n    if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.\n\n    if (!parent) return this._root = next, this; // Remove this leaf.\n\n    next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.\n\n    if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {\n      if (retainer) retainer[j] = node;else this._root = node;\n    }\n\n    return this;\n  }\n\n  function removeAll(data) {\n    for (var i = 0, n = data.length; i < n; ++i) {\n      this.remove(data[i]);\n    }\n\n    return this;\n  }\n\n  function tree_root() {\n    return this._root;\n  }\n\n  function tree_size() {\n    var size = 0;\n    this.visit(function (node) {\n      if (!node.length) do {\n        ++size;\n      } while (node = node.next);\n    });\n    return size;\n  }\n\n  function tree_visit(callback) {\n    var quads = [],\n        q,\n        node = this._root,\n        child,\n        x0,\n        y0,\n        x1,\n        y1;\n    if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\n    while (q = quads.pop()) {\n      if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n        var xm = (x0 + x1) / 2,\n            ym = (y0 + y1) / 2;\n        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      }\n    }\n\n    return this;\n  }\n\n  function tree_visitAfter(callback) {\n    var quads = [],\n        next = [],\n        q;\n    if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\n    while (q = quads.pop()) {\n      var node = q.node;\n\n      if (node.length) {\n        var child,\n            x0 = q.x0,\n            y0 = q.y0,\n            x1 = q.x1,\n            y1 = q.y1,\n            xm = (x0 + x1) / 2,\n            ym = (y0 + y1) / 2;\n        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      }\n\n      next.push(q);\n    }\n\n    while (q = next.pop()) {\n      callback(q.node, q.x0, q.y0, q.x1, q.y1);\n    }\n\n    return this;\n  }\n\n  function defaultX(d) {\n    return d[0];\n  }\n\n  function tree_x(_) {\n    return arguments.length ? (this._x = _, this) : this._x;\n  }\n\n  function defaultY(d) {\n    return d[1];\n  }\n\n  function tree_y(_) {\n    return arguments.length ? (this._y = _, this) : this._y;\n  }\n\n  function quadtree(nodes, x, y) {\n    var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n    return nodes == null ? tree : tree.addAll(nodes);\n  }\n\n  function Quadtree(x, y, x0, y0, x1, y1) {\n    this._x = x;\n    this._y = y;\n    this._x0 = x0;\n    this._y0 = y0;\n    this._x1 = x1;\n    this._y1 = y1;\n    this._root = undefined;\n  }\n\n  function leaf_copy(leaf) {\n    var copy = {\n      data: leaf.data\n    },\n        next = copy;\n\n    while (leaf = leaf.next) {\n      next = next.next = {\n        data: leaf.data\n      };\n    }\n\n    return copy;\n  }\n\n  var treeProto = quadtree.prototype = Quadtree.prototype;\n\n  treeProto.copy = function () {\n    var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n        node = this._root,\n        nodes,\n        child;\n    if (!node) return copy;\n    if (!node.length) return copy._root = leaf_copy(node), copy;\n    nodes = [{\n      source: node,\n      target: copy._root = new Array(4)\n    }];\n\n    while (node = nodes.pop()) {\n      for (var i = 0; i < 4; ++i) {\n        if (child = node.source[i]) {\n          if (child.length) nodes.push({\n            source: child,\n            target: node.target[i] = new Array(4)\n          });else node.target[i] = leaf_copy(child);\n        }\n      }\n    }\n\n    return copy;\n  };\n\n  treeProto.add = tree_add;\n  treeProto.addAll = addAll;\n  treeProto.cover = tree_cover;\n  treeProto.data = tree_data;\n  treeProto.extent = tree_extent;\n  treeProto.find = tree_find;\n  treeProto.remove = tree_remove;\n  treeProto.removeAll = removeAll;\n  treeProto.root = tree_root;\n  treeProto.size = tree_size;\n  treeProto.visit = tree_visit;\n  treeProto.visitAfter = tree_visitAfter;\n  treeProto.x = tree_x;\n  treeProto.y = tree_y;\n  var initialAngle = Math.PI * (3 - Math.sqrt(5)); // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\n    var i,\n        coefficient = x.slice(0, i); // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\n    return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];\n  }\n\n  function exponent(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  }\n\n  function formatGroup(grouping, thousands) {\n    return function (value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  }\n\n  function formatNumerals(numerals) {\n    return function (value) {\n      return value.replace(/[0-9]/g, function (i) {\n        return numerals[+i];\n      });\n    };\n  } // [[fill]align][sign][symbol][0][width][,][.precision][~][type]\n\n\n  var re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  }\n\n  formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n    var match;\n    this.fill = match[1] || \" \";\n    this.align = match[2] || \">\";\n    this.sign = match[3] || \"-\";\n    this.symbol = match[4] || \"\";\n    this.zero = !!match[5];\n    this.width = match[6] && +match[6];\n    this.comma = !!match[7];\n    this.precision = match[8] && +match[8].slice(1);\n    this.trim = !!match[9];\n    this.type = match[10] || \"\";\n  }\n\n  FormatSpecifier.prototype.toString = function () {\n    return this.fill + this.align + this.sign + this.symbol + (this.zero ? \"0\" : \"\") + (this.width == null ? \"\" : Math.max(1, this.width | 0)) + (this.comma ? \",\" : \"\") + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0)) + (this.trim ? \"~\" : \"\") + this.type;\n  }; // Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\n\n\n  function formatTrim(s) {\n    out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (s[i]) {\n        case \".\":\n          i0 = i1 = i;\n          break;\n\n        case \"0\":\n          if (i0 === 0) i0 = i;\n          i1 = i;\n          break;\n\n        default:\n          if (i0 > 0) {\n            if (!+s[i]) break out;\n            i0 = 0;\n          }\n\n          break;\n      }\n    }\n\n    return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n  }\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join(\"0\") : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i) : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  }\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  }\n\n  var formatTypes = {\n    \"%\": function _(x, p) {\n      return (x * 100).toFixed(p);\n    },\n    \"b\": function b(x) {\n      return Math.round(x).toString(2);\n    },\n    \"c\": function c(x) {\n      return x + \"\";\n    },\n    \"d\": function d(x) {\n      return Math.round(x).toString(10);\n    },\n    \"e\": function e(x, p) {\n      return x.toExponential(p);\n    },\n    \"f\": function f(x, p) {\n      return x.toFixed(p);\n    },\n    \"g\": function g(x, p) {\n      return x.toPrecision(p);\n    },\n    \"o\": function o(x) {\n      return Math.round(x).toString(8);\n    },\n    \"p\": function p(x, _p) {\n      return formatRounded(x * 100, _p);\n    },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function X(x) {\n      return Math.round(x).toString(16).toUpperCase();\n    },\n    \"x\": function x(_x) {\n      return Math.round(_x).toString(16);\n    }\n  };\n\n  function identity$2(x) {\n    return x;\n  }\n\n  var prefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"];\n\n  function formatLocale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$2,\n        currency = locale.currency,\n        decimal = locale.decimal,\n        numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$2,\n        percent = locale.percent || \"%\";\n\n    function newFormat(specifier) {\n      specifier = formatSpecifier(specifier);\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          trim = specifier.trim,\n          type = specifier.type; // The \"n\" type is an alias for \",g\".\n\n      if (type === \"n\") comma = true, type = \"g\"; // The \"\" type, and any invalid type, is an alias for \".12~g\".\n      else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\"; // If zero fill is specified, padding goes after sign and before digits.\n\n      if (zero || fill === \"0\" && align === \"=\") zero = true, fill = \"0\", align = \"=\"; // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\"; // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n\n      var formatType = formatTypes[type],\n          maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n\n      precision = precision == null ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));\n\n      function format(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix,\n            i,\n            n,\n            c;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value; // Perform the initial formatting.\n\n          var valueNegative = value < 0;\n          value = formatType(Math.abs(value), precision); // Trim insignificant zeros.\n\n          if (trim) value = formatTrim(value); // If a negative value rounds to zero during formatting, treat as positive.\n\n          if (valueNegative && +value === 0) valueNegative = false; // Compute the prefix and suffix.\n\n          valuePrefix = (valueNegative ? sign === \"(\" ? sign : \"-\" : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\"); // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n\n          if (maybeSuffix) {\n            i = -1, n = value.length;\n\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        } // If the fill character is not \"0\", grouping is applied before padding.\n\n\n        if (comma && !zero) value = group(value, Infinity); // Compute the padding.\n\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\"; // If the fill character is \"0\", grouping is applied after padding.\n\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\"; // Reconstruct the final output based on the desired alignment.\n\n        switch (align) {\n          case \"<\":\n            value = valuePrefix + value + valueSuffix + padding;\n            break;\n\n          case \"=\":\n            value = valuePrefix + padding + value + valueSuffix;\n            break;\n\n          case \"^\":\n            value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n            break;\n\n          default:\n            value = padding + valuePrefix + value + valueSuffix;\n            break;\n        }\n\n        return numerals(value);\n      }\n\n      format.toString = function () {\n        return specifier + \"\";\n      };\n\n      return format;\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function (value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: newFormat,\n      formatPrefix: formatPrefix\n    };\n  }\n\n  var locale;\n  var format;\n  var formatPrefix;\n  defaultLocale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  function defaultLocale(definition) {\n    locale = formatLocale(definition);\n    format = locale.format;\n    formatPrefix = locale.formatPrefix;\n    return locale;\n  }\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent(Math.abs(step)));\n  }\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n  }\n\n  function precisionRound(step, max) {\n    step = Math.abs(step), max = Math.abs(max) - step;\n    return Math.max(0, exponent(max) - exponent(step)) + 1;\n  } // Adds floating point numbers with twice the normal precision.\n  // Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n  // Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n  // 305–363 (1997).\n  // Code adapted from GeographicLib by Charles F. F. Karney,\n  // http://geographiclib.sourceforge.net/\n\n\n  function adder() {\n    return new Adder();\n  }\n\n  function Adder() {\n    this.reset();\n  }\n\n  Adder.prototype = {\n    constructor: Adder,\n    reset: function reset() {\n      this.s = // rounded value\n      this.t = 0; // exact error\n    },\n    add: function add(y) {\n      add$1(temp, y, this.t);\n      add$1(this, temp.s, this.s);\n      if (this.s) this.t += temp.t;else this.s = temp.t;\n    },\n    valueOf: function valueOf() {\n      return this.s;\n    }\n  };\n  var temp = new Adder();\n\n  function add$1(adder, a, b) {\n    var x = adder.s = a + b,\n        bv = x - a,\n        av = x - bv;\n    adder.t = a - av + (b - bv);\n  }\n\n  var pi$3 = Math.PI;\n  var areaRingSum = adder();\n  var areaSum = adder();\n  var deltaSum = adder();\n  var sum = adder();\n  var lengthSum = adder();\n  var areaSum$1 = adder(),\n      areaRingSum$1 = adder();\n  var lengthSum$1 = adder(); // Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\n  function initRange(domain, range) {\n    switch (arguments.length) {\n      case 0:\n        break;\n\n      case 1:\n        this.range(domain);\n        break;\n\n      default:\n        this.range(range).domain(domain);\n        break;\n    }\n\n    return this;\n  }\n\n  var array$1 = Array.prototype;\n  var map$1 = array$1.map;\n  var slice$1 = array$1.slice;\n\n  function constant$2(x) {\n    return function () {\n      return x;\n    };\n  }\n\n  function number$2(x) {\n    return +x;\n  }\n\n  var unit = [0, 1];\n\n  function identity$3(x) {\n    return x;\n  }\n\n  function normalize(a, b) {\n    return (b -= a = +a) ? function (x) {\n      return (x - a) / b;\n    } : constant$2(isNaN(b) ? NaN : 0.5);\n  }\n\n  function clamper(domain) {\n    var a = domain[0],\n        b = domain[domain.length - 1],\n        t;\n    if (a > b) t = a, a = b, b = t;\n    return function (x) {\n      return Math.max(a, Math.min(b, x));\n    };\n  } // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n  // interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\n\n\n  function bimap(domain, range, interpolate) {\n    var d0 = domain[0],\n        d1 = domain[1],\n        r0 = range[0],\n        r1 = range[1];\n    if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n    return function (x) {\n      return r0(d0(x));\n    };\n  }\n\n  function polymap(domain, range, interpolate) {\n    var j = Math.min(domain.length, range.length) - 1,\n        d = new Array(j),\n        r = new Array(j),\n        i = -1; // Reverse descending domains.\n\n    if (domain[j] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++i < j) {\n      d[i] = normalize(domain[i], domain[i + 1]);\n      r[i] = interpolate(range[i], range[i + 1]);\n    }\n\n    return function (x) {\n      var i = bisectRight(domain, x, 1, j) - 1;\n      return r[i](d[i](x));\n    };\n  }\n\n  function copy(source, target) {\n    return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());\n  }\n\n  function transformer() {\n    var domain = unit,\n        range = unit,\n        interpolate = interpolateValue,\n        transform,\n        untransform,\n        unknown,\n        clamp = identity$3,\n        piecewise,\n        output,\n        input;\n\n    function rescale() {\n      piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n      output = input = null;\n      return scale;\n    }\n\n    function scale(x) {\n      return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n    }\n\n    scale.invert = function (y) {\n      return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n    };\n\n    scale.domain = function (_) {\n      return arguments.length ? (domain = map$1.call(_, number$2), clamp === identity$3 || (clamp = clamper(domain)), rescale()) : domain.slice();\n    };\n\n    scale.range = function (_) {\n      return arguments.length ? (range = slice$1.call(_), rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function (_) {\n      return range = slice$1.call(_), interpolate = interpolateRound, rescale();\n    };\n\n    scale.clamp = function (_) {\n      return arguments.length ? (clamp = _ ? clamper(domain) : identity$3, scale) : clamp !== identity$3;\n    };\n\n    scale.interpolate = function (_) {\n      return arguments.length ? (interpolate = _, rescale()) : interpolate;\n    };\n\n    scale.unknown = function (_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    return function (t, u) {\n      transform = t, untransform = u;\n      return rescale();\n    };\n  }\n\n  function continuous(transform, untransform) {\n    return transformer()(transform, untransform);\n  }\n\n  function tickFormat(start, stop, count, specifier) {\n    var step = tickStep(start, stop, count),\n        precision;\n    specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\n    switch (specifier.type) {\n      case \"s\":\n        {\n          var value = Math.max(Math.abs(start), Math.abs(stop));\n          if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n          return formatPrefix(specifier, value);\n        }\n\n      case \"\":\n      case \"e\":\n      case \"g\":\n      case \"p\":\n      case \"r\":\n        {\n          if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n          break;\n        }\n\n      case \"f\":\n      case \"%\":\n        {\n          if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n          break;\n        }\n    }\n\n    return format(specifier);\n  }\n\n  function linearish(scale) {\n    var domain = scale.domain;\n\n    scale.ticks = function (count) {\n      var d = domain();\n      return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n    };\n\n    scale.tickFormat = function (count, specifier) {\n      var d = domain();\n      return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n    };\n\n    scale.nice = function (count) {\n      if (count == null) count = 10;\n      var d = domain(),\n          i0 = 0,\n          i1 = d.length - 1,\n          start = d[i0],\n          stop = d[i1],\n          step;\n\n      if (stop < start) {\n        step = start, start = stop, stop = step;\n        step = i0, i0 = i1, i1 = step;\n      }\n\n      step = tickIncrement(start, stop, count);\n\n      if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n        step = tickIncrement(start, stop, count);\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n        step = tickIncrement(start, stop, count);\n      }\n\n      if (step > 0) {\n        d[i0] = Math.floor(start / step) * step;\n        d[i1] = Math.ceil(stop / step) * step;\n        domain(d);\n      } else if (step < 0) {\n        d[i0] = Math.ceil(start * step) / step;\n        d[i1] = Math.floor(stop * step) / step;\n        domain(d);\n      }\n\n      return scale;\n    };\n\n    return scale;\n  }\n\n  function linear$1() {\n    var scale = continuous(identity$3, identity$3);\n\n    scale.copy = function () {\n      return copy(scale, linear$1());\n    };\n\n    initRange.apply(scale, arguments);\n    return linearish(scale);\n  }\n\n  var t0$1 = new Date(),\n      t1$1 = new Date();\n\n  function newInterval(floori, offseti, count, field) {\n    function interval(date) {\n      return floori(date = new Date(+date)), date;\n    }\n\n    interval.floor = interval;\n\n    interval.ceil = function (date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n    };\n\n    interval.round = function (date) {\n      var d0 = interval(date),\n          d1 = interval.ceil(date);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.offset = function (date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function (start, stop, step) {\n      var range = [],\n          previous;\n      start = interval.ceil(start);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n      do {\n        range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n      } while (previous < start && start < stop);\n\n      return range;\n    };\n\n    interval.filter = function (test) {\n      return newInterval(function (date) {\n        if (date >= date) while (floori(date), !test(date)) {\n          date.setTime(date - 1);\n        }\n      }, function (date, step) {\n        if (date >= date) {\n          if (step < 0) while (++step <= 0) {\n            while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n          } else while (--step >= 0) {\n            while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n          }\n        }\n      });\n    };\n\n    if (count) {\n      interval.count = function (start, end) {\n        t0$1.setTime(+start), t1$1.setTime(+end);\n        floori(t0$1), floori(t1$1);\n        return Math.floor(count(t0$1, t1$1));\n      };\n\n      interval.every = function (step) {\n        step = Math.floor(step);\n        return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n          return field(d) % step === 0;\n        } : function (d) {\n          return interval.count(0, d) % step === 0;\n        });\n      };\n    }\n\n    return interval;\n  }\n\n  var millisecond = newInterval(function () {// noop\n  }, function (date, step) {\n    date.setTime(+date + step);\n  }, function (start, end) {\n    return end - start;\n  }); // An optimized implementation for this simple case.\n\n  millisecond.every = function (k) {\n    k = Math.floor(k);\n    if (!isFinite(k) || !(k > 0)) return null;\n    if (!(k > 1)) return millisecond;\n    return newInterval(function (date) {\n      date.setTime(Math.floor(date / k) * k);\n    }, function (date, step) {\n      date.setTime(+date + step * k);\n    }, function (start, end) {\n      return (end - start) / k;\n    });\n  };\n\n  var durationSecond = 1e3;\n  var durationMinute = 6e4;\n  var durationHour = 36e5;\n  var durationDay = 864e5;\n  var durationWeek = 6048e5;\n  var second = newInterval(function (date) {\n    date.setTime(date - date.getMilliseconds());\n  }, function (date, step) {\n    date.setTime(+date + step * durationSecond);\n  }, function (start, end) {\n    return (end - start) / durationSecond;\n  }, function (date) {\n    return date.getUTCSeconds();\n  });\n  var minute = newInterval(function (date) {\n    date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n  }, function (date, step) {\n    date.setTime(+date + step * durationMinute);\n  }, function (start, end) {\n    return (end - start) / durationMinute;\n  }, function (date) {\n    return date.getMinutes();\n  });\n  var hour = newInterval(function (date) {\n    date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n  }, function (date, step) {\n    date.setTime(+date + step * durationHour);\n  }, function (start, end) {\n    return (end - start) / durationHour;\n  }, function (date) {\n    return date.getHours();\n  });\n  var day = newInterval(function (date) {\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setDate(date.getDate() + step);\n  }, function (start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n  }, function (date) {\n    return date.getDate() - 1;\n  });\n\n  function weekday(i) {\n    return newInterval(function (date) {\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n      date.setHours(0, 0, 0, 0);\n    }, function (date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function (start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n    });\n  }\n\n  var sunday = weekday(0);\n  var monday = weekday(1);\n  var tuesday = weekday(2);\n  var wednesday = weekday(3);\n  var thursday = weekday(4);\n  var friday = weekday(5);\n  var saturday = weekday(6);\n  var month = newInterval(function (date) {\n    date.setDate(1);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setMonth(date.getMonth() + step);\n  }, function (start, end) {\n    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n  }, function (date) {\n    return date.getMonth();\n  });\n  var year = newInterval(function (date) {\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function (start, end) {\n    return end.getFullYear() - start.getFullYear();\n  }, function (date) {\n    return date.getFullYear();\n  }); // An optimized implementation for this simple case.\n\n  year.every = function (k) {\n    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function (date) {\n      date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n      date.setMonth(0, 1);\n      date.setHours(0, 0, 0, 0);\n    }, function (date, step) {\n      date.setFullYear(date.getFullYear() + step * k);\n    });\n  };\n\n  var utcMinute = newInterval(function (date) {\n    date.setUTCSeconds(0, 0);\n  }, function (date, step) {\n    date.setTime(+date + step * durationMinute);\n  }, function (start, end) {\n    return (end - start) / durationMinute;\n  }, function (date) {\n    return date.getUTCMinutes();\n  });\n  var utcHour = newInterval(function (date) {\n    date.setUTCMinutes(0, 0, 0);\n  }, function (date, step) {\n    date.setTime(+date + step * durationHour);\n  }, function (start, end) {\n    return (end - start) / durationHour;\n  }, function (date) {\n    return date.getUTCHours();\n  });\n  var utcDay = newInterval(function (date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function (start, end) {\n    return (end - start) / durationDay;\n  }, function (date) {\n    return date.getUTCDate() - 1;\n  });\n\n  function utcWeekday(i) {\n    return newInterval(function (date) {\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n      date.setUTCHours(0, 0, 0, 0);\n    }, function (date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function (start, end) {\n      return (end - start) / durationWeek;\n    });\n  }\n\n  var utcSunday = utcWeekday(0);\n  var utcMonday = utcWeekday(1);\n  var utcTuesday = utcWeekday(2);\n  var utcWednesday = utcWeekday(3);\n  var utcThursday = utcWeekday(4);\n  var utcFriday = utcWeekday(5);\n  var utcSaturday = utcWeekday(6);\n  var utcMonth = newInterval(function (date) {\n    date.setUTCDate(1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCMonth(date.getUTCMonth() + step);\n  }, function (start, end) {\n    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n  }, function (date) {\n    return date.getUTCMonth();\n  });\n  var utcYear = newInterval(function (date) {\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function (start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  }, function (date) {\n    return date.getUTCFullYear();\n  }); // An optimized implementation for this simple case.\n\n  utcYear.every = function (k) {\n    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function (date) {\n      date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n      date.setUTCMonth(0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n    }, function (date, step) {\n      date.setUTCFullYear(date.getUTCFullYear() + step * k);\n    });\n  };\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newYear(y) {\n    return {\n      y: y,\n      m: 0,\n      d: 1,\n      H: 0,\n      M: 0,\n      S: 0,\n      L: 0\n    };\n  }\n\n  function formatLocale$1(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n    var periodRe = formatRe(locale_periods),\n        periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"f\": formatMicroseconds,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"Q\": formatUnixTimestamp,\n      \"s\": formatUnixTimestampSeconds,\n      \"S\": formatSeconds,\n      \"u\": formatWeekdayNumberMonday,\n      \"U\": formatWeekNumberSunday,\n      \"V\": formatWeekNumberISO,\n      \"w\": formatWeekdayNumberSunday,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear$1,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"f\": formatUTCMicroseconds,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"Q\": formatUnixTimestamp,\n      \"s\": formatUnixTimestampSeconds,\n      \"S\": formatUTCSeconds,\n      \"u\": formatUTCWeekdayNumberMonday,\n      \"U\": formatUTCWeekNumberSunday,\n      \"V\": formatUTCWeekNumberISO,\n      \"w\": formatUTCWeekdayNumberSunday,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"f\": parseMicroseconds,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"Q\": parseUnixTimestamp,\n      \"s\": parseUnixTimestampSeconds,\n      \"S\": parseSeconds,\n      \"u\": parseWeekdayNumberMonday,\n      \"U\": parseWeekNumberSunday,\n      \"V\": parseWeekNumberISO,\n      \"w\": parseWeekdayNumberSunday,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    }; // These recursive directive definitions must be deferred.\n\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function (date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n        if (!(date instanceof Date)) date = new Date(+date);\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);else pad = c === \"e\" ? \" \" : \"0\";\n            if (format = formats[c]) c = format(date, pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, newDate) {\n      return function (string) {\n        var d = newYear(1900),\n            i = parseSpecifier(d, specifier, string += \"\", 0),\n            week,\n            day$1;\n        if (i != string.length) return null; // If a UNIX timestamp is specified, return it.\n\n        if (\"Q\" in d) return new Date(d.Q); // The am-pm flag is 0 for AM, and 1 for PM.\n\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12; // Convert day-of-week and week-of-year to day-of-year.\n\n        if (\"V\" in d) {\n          if (d.V < 1 || d.V > 53) return null;\n          if (!(\"w\" in d)) d.w = 1;\n\n          if (\"Z\" in d) {\n            week = utcDate(newYear(d.y)), day$1 = week.getUTCDay();\n            week = day$1 > 4 || day$1 === 0 ? utcMonday.ceil(week) : utcMonday(week);\n            week = utcDay.offset(week, (d.V - 1) * 7);\n            d.y = week.getUTCFullYear();\n            d.m = week.getUTCMonth();\n            d.d = week.getUTCDate() + (d.w + 6) % 7;\n          } else {\n            week = newDate(newYear(d.y)), day$1 = week.getDay();\n            week = day$1 > 4 || day$1 === 0 ? monday.ceil(week) : monday(week);\n            week = day.offset(week, (d.V - 1) * 7);\n            d.y = week.getFullYear();\n            d.m = week.getMonth();\n            d.d = week.getDate() + (d.w + 6) % 7;\n          }\n        } else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n          day$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n          d.m = 0;\n          d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$1 + 5) % 7 : d.w + d.U * 7 - (day$1 + 6) % 7;\n        } // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n\n\n        if (\"Z\" in d) {\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        } // Otherwise, all fields are in local time.\n\n\n        return newDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || (j = parse(d, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodRe.exec(string.slice(i));\n      return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    return {\n      format: function format(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n\n        f.toString = function () {\n          return specifier;\n        };\n\n        return f;\n      },\n      parse: function parse(specifier) {\n        var p = newParse(specifier += \"\", localDate);\n\n        p.toString = function () {\n          return specifier;\n        };\n\n        return p;\n      },\n      utcFormat: function utcFormat(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n\n        f.toString = function () {\n          return specifier;\n        };\n\n        return f;\n      },\n      utcParse: function utcParse(specifier) {\n        var p = newParse(specifier, utcDate);\n\n        p.toString = function () {\n          return specifier;\n        };\n\n        return p;\n      }\n    };\n  }\n\n  var pads = {\n    \"-\": \"\",\n    \"_\": \" \",\n    \"0\": \"0\"\n  },\n      numberRe = /^\\s*\\d+/,\n      // note: ignores next directive\n  percentRe = /^%/,\n      requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\n  function pad$1(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    var map = {},\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      map[names[i].toLowerCase()] = i;\n    }\n\n    return map;\n  }\n\n  function parseWeekdayNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekdayNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.u = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberISO(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.V = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMicroseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 6));\n    return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function parseUnixTimestamp(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.Q = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseUnixTimestampSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.Q = +n[0] * 1000, i + n[0].length) : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad$1(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad$1(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad$1(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad$1(1 + day.count(year(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad$1(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMicroseconds(d, p) {\n    return formatMilliseconds(d, p) + \"000\";\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad$1(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad$1(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad$1(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekdayNumberMonday(d) {\n    var day = d.getDay();\n    return day === 0 ? 7 : day;\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad$1(sunday.count(year(d), d), p, 2);\n  }\n\n  function formatWeekNumberISO(d, p) {\n    var day = d.getDay();\n    d = day >= 4 || day === 0 ? thursday(d) : thursday.ceil(d);\n    return pad$1(thursday.count(year(d), d) + (year(d).getDay() === 4), p, 2);\n  }\n\n  function formatWeekdayNumberSunday(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad$1(monday.count(year(d), d), p, 2);\n  }\n\n  function formatYear$1(d, p) {\n    return pad$1(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad$1(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\")) + pad$1(z / 60 | 0, \"0\", 2) + pad$1(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad$1(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad$1(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad$1(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad$1(1 + utcDay.count(utcYear(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad$1(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMicroseconds(d, p) {\n    return formatUTCMilliseconds(d, p) + \"000\";\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad$1(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad$1(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad$1(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekdayNumberMonday(d) {\n    var dow = d.getUTCDay();\n    return dow === 0 ? 7 : dow;\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad$1(utcSunday.count(utcYear(d), d), p, 2);\n  }\n\n  function formatUTCWeekNumberISO(d, p) {\n    var day = d.getUTCDay();\n    d = day >= 4 || day === 0 ? utcThursday(d) : utcThursday.ceil(d);\n    return pad$1(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n  }\n\n  function formatUTCWeekdayNumberSunday(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad$1(utcMonday.count(utcYear(d), d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad$1(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad$1(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  function formatUnixTimestamp(d) {\n    return +d;\n  }\n\n  function formatUnixTimestampSeconds(d) {\n    return Math.floor(+d / 1000);\n  }\n\n  var locale$1;\n  var timeFormat;\n  var timeParse;\n  var utcFormat;\n  var utcParse;\n  defaultLocale$1({\n    dateTime: \"%x, %X\",\n    date: \"%-m/%-d/%Y\",\n    time: \"%-I:%M:%S %p\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  function defaultLocale$1(definition) {\n    locale$1 = formatLocale$1(definition);\n    timeFormat = locale$1.format;\n    timeParse = locale$1.parse;\n    utcFormat = locale$1.utcFormat;\n    utcParse = locale$1.utcParse;\n    return locale$1;\n  }\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  var formatIso = Date.prototype.toISOString ? formatIsoNative : utcFormat(isoSpecifier);\n\n  function parseIsoNative(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  }\n\n  var parseIso = +new Date(\"2000-01-01T00:00:00.000Z\") ? parseIsoNative : utcParse(isoSpecifier);\n\n  function colors(specifier) {\n    var n = specifier.length / 6 | 0,\n        colors = new Array(n),\n        i = 0;\n\n    while (i < n) {\n      colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n    }\n\n    return colors;\n  }\n\n  colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n  colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n  colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n  colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n  colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n  colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n  colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n  colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n  colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n\n  function ramp(scheme) {\n    return rgbBasis(scheme[scheme.length - 1]);\n  }\n\n  var scheme = new Array(3).concat(\"d8b365f5f5f55ab4ac\", \"a6611adfc27d80cdc1018571\", \"a6611adfc27df5f5f580cdc1018571\", \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\", \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\", \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\", \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\", \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\", \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\").map(colors);\n  ramp(scheme);\n  var scheme$1 = new Array(3).concat(\"af8dc3f7f7f77fbf7b\", \"7b3294c2a5cfa6dba0008837\", \"7b3294c2a5cff7f7f7a6dba0008837\", \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\", \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\", \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\", \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\", \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\", \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\").map(colors);\n  ramp(scheme$1);\n  var scheme$2 = new Array(3).concat(\"e9a3c9f7f7f7a1d76a\", \"d01c8bf1b6dab8e1864dac26\", \"d01c8bf1b6daf7f7f7b8e1864dac26\", \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\", \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\", \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\", \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\", \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\", \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\").map(colors);\n  ramp(scheme$2);\n  var scheme$3 = new Array(3).concat(\"998ec3f7f7f7f1a340\", \"5e3c99b2abd2fdb863e66101\", \"5e3c99b2abd2f7f7f7fdb863e66101\", \"542788998ec3d8daebfee0b6f1a340b35806\", \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\", \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\", \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\", \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\", \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\").map(colors);\n  ramp(scheme$3);\n  var scheme$4 = new Array(3).concat(\"ef8a62f7f7f767a9cf\", \"ca0020f4a58292c5de0571b0\", \"ca0020f4a582f7f7f792c5de0571b0\", \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\", \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\", \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\", \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\", \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\", \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\").map(colors);\n  ramp(scheme$4);\n  var scheme$5 = new Array(3).concat(\"ef8a62ffffff999999\", \"ca0020f4a582bababa404040\", \"ca0020f4a582ffffffbababa404040\", \"b2182bef8a62fddbc7e0e0e09999994d4d4d\", \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\", \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\", \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\", \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\", \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\").map(colors);\n  ramp(scheme$5);\n  var scheme$6 = new Array(3).concat(\"fc8d59ffffbf91bfdb\", \"d7191cfdae61abd9e92c7bb6\", \"d7191cfdae61ffffbfabd9e92c7bb6\", \"d73027fc8d59fee090e0f3f891bfdb4575b4\", \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\", \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\", \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\", \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\", \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\").map(colors);\n  ramp(scheme$6);\n  var scheme$7 = new Array(3).concat(\"fc8d59ffffbf91cf60\", \"d7191cfdae61a6d96a1a9641\", \"d7191cfdae61ffffbfa6d96a1a9641\", \"d73027fc8d59fee08bd9ef8b91cf601a9850\", \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\", \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\", \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\", \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\", \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\").map(colors);\n  ramp(scheme$7);\n  var scheme$8 = new Array(3).concat(\"fc8d59ffffbf99d594\", \"d7191cfdae61abdda42b83ba\", \"d7191cfdae61ffffbfabdda42b83ba\", \"d53e4ffc8d59fee08be6f59899d5943288bd\", \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\", \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\", \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\", \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\", \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\").map(colors);\n  ramp(scheme$8);\n  var scheme$9 = new Array(3).concat(\"e5f5f999d8c92ca25f\", \"edf8fbb2e2e266c2a4238b45\", \"edf8fbb2e2e266c2a42ca25f006d2c\", \"edf8fbccece699d8c966c2a42ca25f006d2c\", \"edf8fbccece699d8c966c2a441ae76238b45005824\", \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\", \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\").map(colors);\n  ramp(scheme$9);\n  var scheme$a = new Array(3).concat(\"e0ecf49ebcda8856a7\", \"edf8fbb3cde38c96c688419d\", \"edf8fbb3cde38c96c68856a7810f7c\", \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\", \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\", \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\", \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\").map(colors);\n  ramp(scheme$a);\n  var scheme$b = new Array(3).concat(\"e0f3dba8ddb543a2ca\", \"f0f9e8bae4bc7bccc42b8cbe\", \"f0f9e8bae4bc7bccc443a2ca0868ac\", \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\", \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\", \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\", \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\").map(colors);\n  ramp(scheme$b);\n  var scheme$c = new Array(3).concat(\"fee8c8fdbb84e34a33\", \"fef0d9fdcc8afc8d59d7301f\", \"fef0d9fdcc8afc8d59e34a33b30000\", \"fef0d9fdd49efdbb84fc8d59e34a33b30000\", \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\", \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\", \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\").map(colors);\n  ramp(scheme$c);\n  var scheme$d = new Array(3).concat(\"ece2f0a6bddb1c9099\", \"f6eff7bdc9e167a9cf02818a\", \"f6eff7bdc9e167a9cf1c9099016c59\", \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\", \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\", \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\", \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\").map(colors);\n  ramp(scheme$d);\n  var scheme$e = new Array(3).concat(\"ece7f2a6bddb2b8cbe\", \"f1eef6bdc9e174a9cf0570b0\", \"f1eef6bdc9e174a9cf2b8cbe045a8d\", \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\", \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\", \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\", \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\").map(colors);\n  ramp(scheme$e);\n  var scheme$f = new Array(3).concat(\"e7e1efc994c7dd1c77\", \"f1eef6d7b5d8df65b0ce1256\", \"f1eef6d7b5d8df65b0dd1c77980043\", \"f1eef6d4b9dac994c7df65b0dd1c77980043\", \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\", \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\", \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\").map(colors);\n  ramp(scheme$f);\n  var scheme$g = new Array(3).concat(\"fde0ddfa9fb5c51b8a\", \"feebe2fbb4b9f768a1ae017e\", \"feebe2fbb4b9f768a1c51b8a7a0177\", \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\", \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\", \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\", \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\").map(colors);\n  ramp(scheme$g);\n  var scheme$h = new Array(3).concat(\"edf8b17fcdbb2c7fb8\", \"ffffcca1dab441b6c4225ea8\", \"ffffcca1dab441b6c42c7fb8253494\", \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\", \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\", \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\", \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\").map(colors);\n  ramp(scheme$h);\n  var scheme$i = new Array(3).concat(\"f7fcb9addd8e31a354\", \"ffffccc2e69978c679238443\", \"ffffccc2e69978c67931a354006837\", \"ffffccd9f0a3addd8e78c67931a354006837\", \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\", \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\", \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\").map(colors);\n  ramp(scheme$i);\n  var scheme$j = new Array(3).concat(\"fff7bcfec44fd95f0e\", \"ffffd4fed98efe9929cc4c02\", \"ffffd4fed98efe9929d95f0e993404\", \"ffffd4fee391fec44ffe9929d95f0e993404\", \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\", \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\", \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\").map(colors);\n  ramp(scheme$j);\n  var scheme$k = new Array(3).concat(\"ffeda0feb24cf03b20\", \"ffffb2fecc5cfd8d3ce31a1c\", \"ffffb2fecc5cfd8d3cf03b20bd0026\", \"ffffb2fed976feb24cfd8d3cf03b20bd0026\", \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\", \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\", \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\").map(colors);\n  ramp(scheme$k);\n  var scheme$l = new Array(3).concat(\"deebf79ecae13182bd\", \"eff3ffbdd7e76baed62171b5\", \"eff3ffbdd7e76baed63182bd08519c\", \"eff3ffc6dbef9ecae16baed63182bd08519c\", \"eff3ffc6dbef9ecae16baed64292c62171b5084594\", \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\", \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\").map(colors);\n  ramp(scheme$l);\n  var scheme$m = new Array(3).concat(\"e5f5e0a1d99b31a354\", \"edf8e9bae4b374c476238b45\", \"edf8e9bae4b374c47631a354006d2c\", \"edf8e9c7e9c0a1d99b74c47631a354006d2c\", \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\", \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\", \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\").map(colors);\n  ramp(scheme$m);\n  var scheme$n = new Array(3).concat(\"f0f0f0bdbdbd636363\", \"f7f7f7cccccc969696525252\", \"f7f7f7cccccc969696636363252525\", \"f7f7f7d9d9d9bdbdbd969696636363252525\", \"f7f7f7d9d9d9bdbdbd969696737373525252252525\", \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\", \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\").map(colors);\n  ramp(scheme$n);\n  var scheme$o = new Array(3).concat(\"efedf5bcbddc756bb1\", \"f2f0f7cbc9e29e9ac86a51a3\", \"f2f0f7cbc9e29e9ac8756bb154278f\", \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\", \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\", \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\", \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\").map(colors);\n  ramp(scheme$o);\n  var scheme$p = new Array(3).concat(\"fee0d2fc9272de2d26\", \"fee5d9fcae91fb6a4acb181d\", \"fee5d9fcae91fb6a4ade2d26a50f15\", \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\", \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\", \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\", \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\").map(colors);\n  ramp(scheme$p);\n  var scheme$q = new Array(3).concat(\"fee6cefdae6be6550d\", \"feeddefdbe85fd8d3cd94701\", \"feeddefdbe85fd8d3ce6550da63603\", \"feeddefdd0a2fdae6bfd8d3ce6550da63603\", \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\", \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\", \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\").map(colors);\n  ramp(scheme$q);\n  cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n  var warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n  var cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n  var c = cubehelix();\n  var c$1 = rgb(),\n      pi_1_3 = Math.PI / 3,\n      pi_2_3 = Math.PI * 2 / 3;\n\n  function ramp$1(range) {\n    var n = range.length;\n    return function (t) {\n      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n    };\n  }\n\n  ramp$1(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n  var magma = ramp$1(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n  var inferno = ramp$1(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n  var plasma = ramp$1(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\n  function constant$3(x) {\n    return function constant() {\n      return x;\n    };\n  }\n\n  var pi$4 = Math.PI;\n\n  function Linear(context) {\n    this._context = context;\n  }\n\n  Linear.prototype = {\n    areaStart: function areaStart() {\n      this._line = 0;\n    },\n    areaEnd: function areaEnd() {\n      this._line = NaN;\n    },\n    lineStart: function lineStart() {\n      this._point = 0;\n    },\n    lineEnd: function lineEnd() {\n      if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function point(x, y) {\n      x = +x, y = +y;\n\n      switch (this._point) {\n        case 0:\n          this._point = 1;\n          this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n          break;\n\n        case 1:\n          this._point = 2;\n        // proceed\n\n        default:\n          this._context.lineTo(x, y);\n\n          break;\n      }\n    }\n  };\n\n  function curveLinear(context) {\n    return new Linear(context);\n  }\n\n  function x(p) {\n    return p[0];\n  }\n\n  function y(p) {\n    return p[1];\n  }\n\n  function line() {\n    var x$1 = x,\n        y$1 = y,\n        defined = constant$3(true),\n        context = null,\n        curve = curveLinear,\n        output = null;\n\n    function line(data) {\n      var i,\n          n = data.length,\n          d,\n          defined0 = false,\n          buffer;\n      if (context == null) output = curve(buffer = path());\n\n      for (i = 0; i <= n; ++i) {\n        if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n          if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n        }\n\n        if (defined0) output.point(+x$1(d, i, data), +y$1(d, i, data));\n      }\n\n      if (buffer) return output = null, buffer + \"\" || null;\n    }\n\n    line.x = function (_) {\n      return arguments.length ? (x$1 = typeof _ === \"function\" ? _ : constant$3(+_), line) : x$1;\n    };\n\n    line.y = function (_) {\n      return arguments.length ? (y$1 = typeof _ === \"function\" ? _ : constant$3(+_), line) : y$1;\n    };\n\n    line.defined = function (_) {\n      return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$3(!!_), line) : defined;\n    };\n\n    line.curve = function (_) {\n      return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n    };\n\n    line.context = function (_) {\n      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n    };\n\n    return line;\n  }\n\n  function sign(x) {\n    return x < 0 ? -1 : 1;\n  } // Calculate the slopes of the tangents (Hermite-type interpolation) based on\n  // the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n  // Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n  // NOV(II), P. 443, 1990.\n\n\n  function slope3(that, x2, y2) {\n    var h0 = that._x1 - that._x0,\n        h1 = x2 - that._x1,\n        s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n        s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n        p = (s0 * h1 + s1 * h0) / (h0 + h1);\n    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n  } // Calculate a one-sided slope.\n\n\n  function slope2(that, t) {\n    var h = that._x1 - that._x0;\n    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n  } // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n  // \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n  // with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\n\n  function point$1(that, t0, t1) {\n    var x0 = that._x0,\n        y0 = that._y0,\n        x1 = that._x1,\n        y1 = that._y1,\n        dx = (x1 - x0) / 3;\n\n    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n  }\n\n  function MonotoneX(context) {\n    this._context = context;\n  }\n\n  MonotoneX.prototype = {\n    areaStart: function areaStart() {\n      this._line = 0;\n    },\n    areaEnd: function areaEnd() {\n      this._line = NaN;\n    },\n    lineStart: function lineStart() {\n      this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function lineEnd() {\n      switch (this._point) {\n        case 2:\n          this._context.lineTo(this._x1, this._y1);\n\n          break;\n\n        case 3:\n          point$1(this, this._t0, slope2(this, this._t0));\n          break;\n      }\n\n      if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function point(x, y) {\n      var t1 = NaN;\n      x = +x, y = +y;\n      if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\n      switch (this._point) {\n        case 0:\n          this._point = 1;\n          this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n          break;\n\n        case 1:\n          this._point = 2;\n          break;\n\n        case 2:\n          this._point = 3;\n          point$1(this, slope2(this, t1 = slope3(this, x, y)), t1);\n          break;\n\n        default:\n          point$1(this, this._t0, t1 = slope3(this, x, y));\n          break;\n      }\n\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n      this._t0 = t1;\n    }\n  };\n\n  function MonotoneY(context) {\n    this._context = new ReflectContext(context);\n  }\n\n  (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function (x, y) {\n    MonotoneX.prototype.point.call(this, y, x);\n  };\n\n  function ReflectContext(context) {\n    this._context = context;\n  }\n\n  ReflectContext.prototype = {\n    moveTo: function moveTo(x, y) {\n      this._context.moveTo(y, x);\n    },\n    closePath: function closePath() {\n      this._context.closePath();\n    },\n    lineTo: function lineTo(x, y) {\n      this._context.lineTo(y, x);\n    },\n    bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      this._context.bezierCurveTo(y1, x1, y2, x2, y, x);\n    }\n  };\n\n  function Step(context, t) {\n    this._context = context;\n    this._t = t;\n  }\n\n  Step.prototype = {\n    areaStart: function areaStart() {\n      this._line = 0;\n    },\n    areaEnd: function areaEnd() {\n      this._line = NaN;\n    },\n    lineStart: function lineStart() {\n      this._x = this._y = NaN;\n      this._point = 0;\n    },\n    lineEnd: function lineEnd() {\n      if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n      if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n      if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n    },\n    point: function point(x, y) {\n      x = +x, y = +y;\n\n      switch (this._point) {\n        case 0:\n          this._point = 1;\n          this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n          break;\n\n        case 1:\n          this._point = 2;\n        // proceed\n\n        default:\n          {\n            if (this._t <= 0) {\n              this._context.lineTo(this._x, y);\n\n              this._context.lineTo(x, y);\n            } else {\n              var x1 = this._x * (1 - this._t) + x * this._t;\n\n              this._context.lineTo(x1, this._y);\n\n              this._context.lineTo(x1, y);\n            }\n\n            break;\n          }\n      }\n\n      this._x = x, this._y = y;\n    }\n  };\n\n  function stepBefore(context) {\n    return new Step(context, 0);\n  } // const d3 = require(\"d3\");\n\n  /**\n   * The Layout class\n   *\n   */\n\n\n  var RectangularLayout =\n  /*#__PURE__*/\n  function (_Layout) {\n    _inherits(RectangularLayout, _Layout);\n\n    _createClass(RectangularLayout, null, [{\n      key: \"DEFAULT_SETTINGS\",\n      value: function DEFAULT_SETTINGS() {\n        return {\n          lengthFormat: format(\".2f\"),\n          branchCurve: stepBefore,\n          horizontalScale: null // a scale that converts root to tip distance to 0,1 domain. default is 0 = root 1 = highest tip\n\n        };\n      }\n      /**\n       * The constructor.\n       * @param tree\n       * @param settings\n       */\n\n    }]);\n\n    function RectangularLayout(tree) {\n      var _this10;\n\n      var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, RectangularLayout);\n\n      _this10 = _possibleConstructorReturn(this, _getPrototypeOf(RectangularLayout).call(this));\n      _this10.tree = tree; // merge the default settings with the supplied settings\n\n      _this10.settings = _objectSpread({}, RectangularLayout.DEFAULT_SETTINGS(), settings);\n      _this10.branchLabelAnnotationName = null;\n      _this10.internalNodeLabelAnnotationName = null;\n      _this10.externalNodeLabelAnnotationName = null; // called whenever the tree changes...\n\n      _this10.tree.treeUpdateCallback = function () {\n        _this10.update();\n      };\n\n      return _this10;\n    }\n    /**\n     * Lays out the tree in a standard rectangular format.\n     *\n     * This function is called by the FigTree class and is used to layout the nodes of the tree. It\n     * populates the vertices array with vertex objects that wrap the nodes and have coordinates and\n     * populates the edges array with edge objects that have two vertices.\n     *\n     * It encapsulates the tree object to keep it abstract\n     *\n     * @param vertices - objects with an x, y coordinates and a reference to the original node\n     * @param edges - objects with v1 (a vertex) and v0 (the parent vertex).\n     */\n\n\n    _createClass(RectangularLayout, [{\n      key: \"layout\",\n      value: function layout(vertices, edges) {\n        var _this11 = this;\n\n        this._horizontalRange = [0, 1]; //[0.0, max([...this.tree.rootToTipLengths()])];\n\n        this._verticalRange = [0, this.tree.externalNodes.length - 1];\n\n        if (!this.settings.horizontalScale) {\n          this.horizontalScale = linear$1().domain([0, max(_toConsumableArray(this.tree.rootToTipLengths()))]).range(this._horizontalRange);\n        } else {\n          this.horizontalScale = this.settings.horizontalScale;\n        } // get the nodes in post-order\n\n\n        var nodes = _toConsumableArray(this.tree.postorder());\n\n        var currentY = -1;\n\n        if (vertices.length === 0) {\n          this.nodeMap = new Map(); // create the vertices (only done if the array is empty)\n\n          nodes.forEach(function (n, i) {\n            var vertex = {\n              node: n,\n              key: n.id // key: Symbol(n.id).toString()\n\n            };\n            vertices.push(vertex);\n\n            _this11.nodeMap.set(n, vertex);\n          });\n        } // update the node locations (vertices)\n\n\n        nodes.forEach(function (n) {\n          var v = _this11.nodeMap.get(n);\n\n          v.x = _this11.horizontalScale(_this11.tree.rootToTipLength(v.node));\n          currentY = _this11.setYPosition(v, currentY);\n          v.degree = v.node.children ? v.node.children.length + 1 : 1; // the number of edges (including stem)\n\n          v.id = n.id;\n          v.classes = [!v.node.children ? \"external-node\" : \"internal-node\", v.node.isSelected ? \"selected\" : \"unselected\"];\n\n          if (v.node.annotations) {\n            v.classes = [].concat(_toConsumableArray(v.classes), _toConsumableArray(Object.entries(v.node.annotations).filter(function (_ref10) {\n              var _ref11 = _slicedToArray(_ref10, 1),\n                  key = _ref11[0];\n\n              return _this11.tree.annotations[key] && (_this11.tree.annotations[key].type === Type.DISCRETE || _this11.tree.annotations[key].type === Type.BOOLEAN || _this11.tree.annotations[key].type === Type.INTEGER);\n            }).map(function (_ref12) {\n              var _ref13 = _slicedToArray(_ref12, 2),\n                  key = _ref13[0],\n                  value = _ref13[1];\n\n              return \"\".concat(key, \"-\").concat(value);\n            })));\n          } // either the tip name or the internal node label\n\n\n          if (v.node.children) {\n            v.leftLabel = _this11.internalNodeLabelAnnotationName ? v.node.annotations[_this11.internalNodeLabelAnnotationName] : \"\";\n            v.rightLabel = \"\"; // should the left node label be above or below the node?\n\n            v.labelBelow = !v.node.parent || v.node.parent.children[0] !== v.node;\n          } else {\n            v.leftLabel = \"\";\n            v.rightLabel = _this11.externalNodeLabelAnnotationName ? v.node.annotations[_this11.externalNodeLabelAnnotationName] : v.node.name;\n          }\n\n          _this11.nodeMap.set(v.node, v);\n        });\n\n        if (edges.length === 0) {\n          this.edgeMap = new Map(); // create the edges (only done if the array is empty)\n\n          nodes.filter(function (n) {\n            return n.parent;\n          }) // exclude the root\n          .forEach(function (n, i) {\n            var edge = {\n              v0: _this11.nodeMap.get(n.parent),\n              v1: _this11.nodeMap.get(n),\n              key: n.id // key: Symbol(n.id).toString()\n\n            };\n            edges.push(edge);\n\n            _this11.edgeMap.set(edge, edge.v1);\n          });\n        } // update the edges\n\n\n        edges.forEach(function (e) {\n          e.v1 = _this11.edgeMap.get(e);\n          e.v0 = _this11.nodeMap.get(e.v1.node.parent), e.classes = [];\n\n          if (e.v1.node.annotations) {\n            e.classes = [].concat(_toConsumableArray(e.classes), _toConsumableArray(Object.entries(e.v1.node.annotations).filter(function (_ref14) {\n              var _ref15 = _slicedToArray(_ref14, 1),\n                  key = _ref15[0];\n\n              return _this11.tree.annotations[key] && (_this11.tree.annotations[key].type === Type.DISCRETE || _this11.tree.annotations[key].type === Type.BOOLEAN || _this11.tree.annotations[key].type === Type.INTEGER);\n            }).map(function (_ref16) {\n              var _ref17 = _slicedToArray(_ref16, 2),\n                  key = _ref17[0],\n                  value = _ref17[1];\n\n              return \"\".concat(key, \"-\").concat(value);\n            })));\n          }\n\n          var length = e.v1.x - e.v0.x;\n          e.length = length;\n          e.label = _this11.branchLabelAnnotationName ? _this11.branchLabelAnnotationName === 'length' ? _this11.settings.lengthFormat(length) : e.v1.node.annotations[_this11.branchLabelAnnotationName] : null;\n          e.labelBelow = e.v1.node.parent.children[0] !== e.v1.node;\n        });\n      }\n    }, {\n      key: \"setInternalNodeLabels\",\n\n      /**\n       * Sets the annotation to use as the node labels.\n       *\n       * @param annotationName\n       */\n      value: function setInternalNodeLabels(annotationName) {\n        this.internalNodeLabelAnnotationName = annotationName;\n        this.update();\n      }\n      /**\n       * Sets the annotation to use as the node labels.\n       *\n       * @param annotationName\n       */\n\n    }, {\n      key: \"setExternalNodeLabels\",\n      value: function setExternalNodeLabels(annotationName) {\n        this.externalNodeLabelAnnotationName = annotationName;\n        this.update();\n      }\n      /**\n       * Sets the annotation to use as the node labels.\n       *\n       * @param annotationName\n       */\n\n    }, {\n      key: \"setBranchLabels\",\n      value: function setBranchLabels(annotationName) {\n        this.branchLabelAnnotationName = annotationName;\n        this.update();\n      }\n      /**\n       * Updates the tree when it has changed\n       */\n\n    }, {\n      key: \"update\",\n      value: function update() {\n        this.updateCallback();\n      }\n    }, {\n      key: \"setYPosition\",\n      value: function setYPosition(vertex, currentY) {\n        var _this12 = this;\n\n        vertex.y = vertex.node.children ? mean(vertex.node.children, function (child) {\n          return _this12.nodeMap.get(child).y;\n        }) : currentY += 1;\n        return currentY;\n      }\n    }, {\n      key: \"branchPathGenerator\",\n      value: function branchPathGenerator(scales) {\n        var _this13 = this;\n\n        var branchPath = function branchPath(e, i) {\n          var branchLine = line().x(function (v) {\n            return v.x;\n          }).y(function (v) {\n            return v.y;\n          }).curve(_this13.branchCurve);\n          return branchLine([{\n            x: 0,\n            y: scales.y(e.v0.y) - scales.y(e.v1.y)\n          }, {\n            x: scales.x(e.v1.x) - scales.x(e.v0.x),\n            y: 0\n          }]);\n        };\n\n        return branchPath;\n      }\n    }, {\n      key: \"branchCurve\",\n      set: function set(curve) {\n        this.settings.branchCurve = curve;\n        this.update();\n      },\n      get: function get() {\n        return this.settings.branchCurve;\n      }\n    }]);\n\n    return RectangularLayout;\n  }(Layout);\n  /*\n   * Private methods, called by the class using the <function>.call(this) function.\n   */\n\n\n  var Direction = {\n    UP: Symbol(\"UP\"),\n    DOWN: Symbol(\"DOWN\")\n  };\n  /**\n   * The TransmissionLayout class\n   *\n   */\n\n  var TransmissionLayout =\n  /*#__PURE__*/\n  function (_RectangularLayout) {\n    _inherits(TransmissionLayout, _RectangularLayout);\n\n    /**\n     * The constructor.\n     * @param tree\n     * @param settings\n     */\n    function TransmissionLayout(tree) {\n      var _this14;\n\n      var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, TransmissionLayout);\n\n      _this14 = _possibleConstructorReturn(this, _getPrototypeOf(TransmissionLayout).call(this, tree, settings));\n      _this14._direction = Direction.DOWN;\n      return _this14;\n    }\n    /**\n     * Set the direction to draw transmission (up or down).\n     * @param direction\n     */\n\n\n    _createClass(TransmissionLayout, [{\n      key: \"setYPosition\",\n\n      /**\n       * Inherited method overwritten to set the y-position of an internal node to the same as its\n       * first child which gives a visual directionality to the tree.\n       * @param vertex\n       * @param currentY\n       * @returns {*}\n       */\n      value: function setYPosition(vertex, currentY) {\n        if (this._direction === Direction.UP) {\n          throw new Error(\"Up direction drawing not implemented yet\");\n        }\n\n        vertex.y = vertex.node.children ? this.nodeMap.get(vertex.node.children[0]).y : currentY += 1;\n        return currentY;\n      }\n    }, {\n      key: \"direction\",\n      set: function set(direction) {\n        this._direction = direction;\n        this.update();\n      }\n    }]);\n\n    return TransmissionLayout;\n  }(RectangularLayout);\n  /*\n   * Private methods, called by the class using the <function>.call(this) function.\n   */\n\n  /**\n   * The ArcLayout class\n   * note the function in the settings that placed the nodes on the xaxis a 0,1 range. The horizontal range is always 0->1. it is this funciton's job\n   * To map the nodes to that space. the default is the \n   * node's index in the node list.\n   */\n\n\n  var ArcLayout =\n  /*#__PURE__*/\n  function (_Layout2) {\n    _inherits(ArcLayout, _Layout2);\n\n    _createClass(ArcLayout, null, [{\n      key: \"DEFAULT_SETTINGS\",\n      value: function DEFAULT_SETTINGS() {\n        return {\n          lengthFormat: format(\".2f\"),\n          edgeWidth: 2,\n          xFunction: function xFunction(n, i, t) {\n            return i / t.length;\n          },\n          branchCurve: curveLinear,\n          curve: 'arc'\n        };\n      }\n      /**\n       * The constructor.\n       * @param graph\n       * @param settings\n       */\n\n    }]);\n\n    function ArcLayout(graph) {\n      var _this15;\n\n      var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, ArcLayout);\n\n      _this15 = _possibleConstructorReturn(this, _getPrototypeOf(ArcLayout).call(this));\n      _this15.graph = graph; // merge the default settings with the supplied settings\n\n      _this15.settings = _objectSpread({}, ArcLayout.DEFAULT_SETTINGS(), settings);\n      _this15.branchLabelAnnotationName = null;\n      _this15.internalNodeLabelAnnotationName = null;\n      _this15.externalNodeLabelAnnotationName = null; // called whenever the tree changes...\n      // this.tree.treeUpdateCallback = () => {\n      //     this.update();\n      // };\n\n      return _this15;\n    }\n    /**\n     * Lays out the tree in a standard rectangular format.\n     *\n     * This function is called by the FigTree class and is used to layout the nodes of the tree. It\n     * populates the vertices array with vertex objects that wrap the nodes and have coordinates and\n     * populates the edges array with edge objects that have two vertices.\n     *\n     * It encapsulates the tree object to keep it abstract\n     *\n     * @param vertices - objects with an x, y coordinates and a reference to the original node\n     * @param edges - objects with v1 (a vertex) and v0 (the parent vertex).\n     */\n\n\n    _createClass(ArcLayout, [{\n      key: \"layout\",\n      value: function layout(vertices, edges) {\n        var _this16 = this;\n\n        this._horizontalRange = [0, 1];\n        this._verticalRange = [-this.graph.nodes.length, this.graph.nodes.length]; // get the nodes in pre-order (starting at first node)\n        // const nodes = [...this.graph.preorder(this.graph.nodes[0])];\n\n        var nodes = _toConsumableArray(this.graph.nodes);\n\n        if (vertices.length === 0) {\n          this.nodeMap = new Map(); // create the vertices (only done if the array is empty)\n\n          nodes.forEach(function (n, i) {\n            var vertex = {\n              node: n,\n              key: n.id // key: Symbol(n.id).toString()\n\n            };\n            vertices.push(vertex);\n\n            _this16.nodeMap.set(n, vertex);\n          });\n        } // update the node locations (vertices)\n        //\n\n\n        nodes.forEach(function (n, i) {\n          var v = _this16.nodeMap.get(n);\n\n          v.x = _this16.settings.xFunction(n, i);\n          v.y = 0;\n          v.degree = _this16.graph.getEdges(v.node).length; // the number of edges \n          // console.log(v.x)\n\n          v.classes = [!_this16.graph.getOutgoingEdges(v.node).length > 0 ? \"external-node\" : \"internal-node\", v.node.isSelected ? \"selected\" : \"unselected\"];\n\n          if (v.node.annotations) {\n            v.classes = [].concat(_toConsumableArray(v.classes), _toConsumableArray(Object.entries(v.node.annotations).filter(function (_ref18) {\n              var _ref19 = _slicedToArray(_ref18, 1),\n                  key = _ref19[0];\n\n              return _this16.graph.annotations[key].type === Type.DISCRETE || _this16.graph.annotations[key].type === Type.BOOLEAN || _this16.graph.annotations[key].type === Type.INTEGER;\n            }).map(function (_ref20) {\n              var _ref21 = _slicedToArray(_ref20, 2),\n                  key = _ref21[0],\n                  value = _ref21[1];\n\n              return \"\".concat(key, \"-\").concat(value);\n            })));\n          } // either the tip name or the internal node label\n\n\n          if (v.node.children) {\n            v.leftLabel = _this16.internalNodeLabelAnnotationName ? v.node.annotations[_this16.internalNodeLabelAnnotationName] : \"\";\n            v.rightLabel = \"\"; // should the left node label be above or below the node?\n\n            v.labelBelow = !v.node.parent || v.node.parent.children[0] !== v.node;\n          } else {\n            v.leftLabel = \"\";\n            v.rightLabel = _this16.externalNodeLabelAnnotationName ? v.node.annotations[_this16.externalNodeLabelAnnotationName] : v.node.name;\n          }\n\n          _this16.nodeMap.set(v.node, v);\n        });\n\n        if (edges.length === 0) {\n          this.edgeMap = new Map(); // create the edges (only done if the array is empty)\n\n          var dataEdges = this.graph.edges;\n          dataEdges.forEach(function (e, i) {\n            var edge = {\n              // The source and targets here are nodes in the graph;\n              v0: _this16.nodeMap.get(e.source),\n              v1: _this16.nodeMap.get(e.target),\n              key: e.id // key: Symbol(n.id).toString()\n\n            };\n            edges.push(edge);\n\n            _this16.edgeMap.set(edge, edge.v1);\n          });\n        } // update the edges\n\n\n        edges.forEach(function (e) {\n          e.v1 = _this16.edgeMap.get(e);\n          e.v0 = _this16.nodeMap.get(e.v0.node), e.classes = [];\n\n          if (e.v1.node.annotations) {\n            e.classes = [].concat(_toConsumableArray(e.classes), _toConsumableArray(Object.entries(e.v1.node.annotations).filter(function (_ref22) {\n              var _ref23 = _slicedToArray(_ref22, 1),\n                  key = _ref23[0];\n\n              return _this16.graph.annotations[key].type === Type.DISCRETE || _this16.graph.annotations[key].type === Type.BOOLEAN || _this16.graph.annotations[key].type === Type.INTEGER;\n            }).map(function (_ref24) {\n              var _ref25 = _slicedToArray(_ref24, 2),\n                  key = _ref25[0],\n                  value = _ref25[1];\n\n              return \"\".concat(key, \"-\").concat(value);\n            })));\n          }\n\n          var length = e.v1.x - e.v0.x;\n          e.length = length;\n          e.label = _this16.branchLabelAnnotationName ? _this16.branchLabelAnnotationName === 'length' ? _this16.settings.lengthFormat(length) : e.v1.node.annotations[_this16.branchLabelAnnotationName] : null; // e.labelBelow = e.v1.node.parent.children[0] !== e.v1.node;\n        });\n      }\n    }, {\n      key: \"setInternalNodeLabels\",\n\n      /**\n       * Sets the annotation to use as the node labels.\n       *\n       * @param annotationName\n       */\n      value: function setInternalNodeLabels(annotationName) {\n        this.internalNodeLabelAnnotationName = annotationName;\n        this.update();\n      }\n      /**\n       * Sets the annotation to use as the node labels.\n       *\n       * @param annotationName\n       */\n\n    }, {\n      key: \"setExternalNodeLabels\",\n      value: function setExternalNodeLabels(annotationName) {\n        this.externalNodeLabelAnnotationName = annotationName;\n        this.update();\n      }\n      /**\n       * Sets the annotation to use as the node labels.\n       *\n       * @param annotationName\n       */\n\n    }, {\n      key: \"setBranchLabels\",\n      value: function setBranchLabels(annotationName) {\n        this.branchLabelAnnotationName = annotationName;\n        this.update();\n      }\n      /**\n       * Updates the tree when it has changed\n       */\n\n    }, {\n      key: \"update\",\n      value: function update() {\n        this.updateCallback();\n      } // Takes in scales and returns a function that will draw the branch paths given each edge and index as input.\n      // branches have been translated so 0,0 is the top left hand corner of the group - \n\n    }, {\n      key: \"branchPathGenerator\",\n      value: function branchPathGenerator(scales) {\n        var _this17 = this;\n\n        var branchPath = function branchPath(e, i) {\n          var points;\n\n          if (_this17.settings.curve === \"bezier\") {\n            var _sign = i % 2 === 0 ? 1 : -1;\n\n            var startingP = {\n              x: 0,\n              y: scales.y(e.v0.y) - scales.y(e.v1.y)\n            }; // which is 0 in the defualt setting\n\n            var endingP = {\n              x: scales.x(e.v1.x) - scales.x(e.v0.x),\n              y: 0\n            };\n            var correctingFactor = Math.abs(startingP.x - endingP.x) / (scales.x.range()[1] - scales.x.range()[0]); // so the longer the arc the heigher it goes\n\n            var controlPoint = {\n              \"x\": startingP.x,\n              \"y\": _sign * scales.y(scales.y.domain()[1]) * correctingFactor\n            };\n            var controlPoint1 = {\n              \"x\": startingP.x,\n              //+endingP.x)/3,\n              \"y\": _sign * scales.y(scales.y.domain()[1]) * correctingFactor\n            };\n            var controlPoint2 = {\n              \"x\": endingP.x,\n              //+endingP.x)/3,\n              \"y\": _sign * scales.y(scales.y.domain()[1]) * correctingFactor\n            };\n            points = cubicBezier(startingP, controlPoint1, controlPoint2, endingP); // points = quadraticBezier(startingP,controlPoint,endingP)\n          } else {\n            var r = (scales.x(e.v1.x) - scales.x(e.v0.x)) / 2;\n            var a = r; // center x position\n\n            var _sign2 = i % 2 === 0 ? 1 : -1;\n\n            var _x2 = range(0, scales.x(e.v1.x) - scales.x(e.v0.x), 1); //step every pixel\n\n\n            var _y = _x2.map(function (x) {\n              return circleY(x, r, a, _sign2);\n            });\n\n            points = _x2.map(function (x, i) {\n              return {\n                x: x,\n                y: _y[i]\n              };\n            });\n          }\n\n          var branchLine = line().x(function (v) {\n            return v.x;\n          }).y(function (v) {\n            return v.y;\n          }).curve(_this17.branchCurve);\n          return branchLine(points);\n        };\n\n        return branchPath;\n      }\n    }, {\n      key: \"branchCurve\",\n      set: function set(curve) {\n        this.settings.branchCurve = curve;\n        this.update();\n      },\n      get: function get() {\n        return this.settings.branchCurve;\n      }\n    }]);\n\n    return ArcLayout;\n  }(Layout);\n  /*\n   * Private methods, called by the class using the <function>.call(this) function.\n   */\n\n\n  function circleY(x, r, a, sign) {\n    return sign * Math.sqrt(Math.pow(r, 2) - Math.pow(x - a, 2));\n  }\n  /**\n   * Cubic Bezier curves\n   * @param {*} p0 -starting point\n   * @param {*} p1 - ending point\n   * @param {*} q0 control points\n   * @param {*} q1 - control point 2\n   */\n\n\n  function cubicBezier(p0, p1, p2, p3) {\n    var points = [];\n\n    for (var t = 0; t <= 1; t += 0.01) {\n      var _x3 = Math.pow(1 - t, 3) * p0.x + 3 * Math.pow(1 - t, 2) * t * p1.x + 3 * (1 - t) * Math.pow(t, 2) * p2.x + Math.pow(t, 3) * p3.x;\n\n      var _y2 = Math.pow(1 - t, 3) * p0.y + 3 * Math.pow(1 - t, 2) * t * p1.y + 3 * (1 - t) * Math.pow(t, 2) * p2.y + Math.pow(t, 3) * p3.y;\n\n      points.push({\n        \"x\": _x3,\n        \"y\": _y2\n      });\n    }\n\n    return points;\n  }\n  /** @module bauble */\n\n  /**\n   * The Bauble class\n   *\n   * This is a shape or decoration at the node of a tree or graph\n   */\n\n\n  var Bauble =\n  /*#__PURE__*/\n  function () {\n    _createClass(Bauble, null, [{\n      key: \"DEFAULT_SETTINGS\",\n      value: function DEFAULT_SETTINGS() {\n        return {\n          vertexFilter: function vertexFilter() {\n            return true;\n          }\n        };\n      }\n      /**\n       * The constructor.\n       */\n\n    }]);\n\n    function Bauble() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _classCallCheck(this, Bauble);\n\n      this.settings = _objectSpread({}, Bauble.DEFAULT_SETTINGS(), settings);\n    }\n\n    _createClass(Bauble, [{\n      key: \"createShapes\",\n      value: function createShapes(selection) {\n        throw new Error(\"don't call the base class methods\");\n      }\n    }, {\n      key: \"updateShapes\",\n      value: function updateShapes(selection) {\n        var border = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        throw new Error(\"don't call the base class methods\");\n      }\n    }, {\n      key: \"vertexFilter\",\n      get: function get() {\n        return this.settings.vertexFilter;\n      }\n    }]);\n\n    return Bauble;\n  }();\n\n  var CircleBauble =\n  /*#__PURE__*/\n  function (_Bauble) {\n    _inherits(CircleBauble, _Bauble);\n\n    _createClass(CircleBauble, null, [{\n      key: \"DEFAULT_SETTINGS\",\n      value: function DEFAULT_SETTINGS() {\n        return {\n          radius: 6\n        };\n      }\n      /**\n       * The constructor.\n       */\n\n    }]);\n\n    function CircleBauble() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _classCallCheck(this, CircleBauble);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(CircleBauble).call(this, _objectSpread({}, CircleBauble.DEFAULT_SETTINGS(), settings)));\n    }\n\n    _createClass(CircleBauble, [{\n      key: \"createShapes\",\n      value: function createShapes(selection) {\n        return selection.append(\"circle\");\n      }\n    }, {\n      key: \"updateShapes\",\n      value: function updateShapes(selection) {\n        var border = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        return selection.attr(\"cx\", 0).attr(\"cy\", 0).attr(\"r\", this.settings.radius + border);\n      }\n    }]);\n\n    return CircleBauble;\n  }(Bauble);\n\n  var RectangularBauble =\n  /*#__PURE__*/\n  function (_Bauble2) {\n    _inherits(RectangularBauble, _Bauble2);\n\n    _createClass(RectangularBauble, null, [{\n      key: \"DEFAULT_SETTINGS\",\n      value: function DEFAULT_SETTINGS() {\n        return {\n          height: 16,\n          width: 6,\n          radius: 2\n        };\n      }\n      /**\n       * The constructor.\n       */\n\n    }]);\n\n    function RectangularBauble() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      _classCallCheck(this, RectangularBauble);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(RectangularBauble).call(this, _objectSpread({}, RectangularBauble.DEFAULT_SETTINGS(), settings)));\n    }\n\n    _createClass(RectangularBauble, [{\n      key: \"createShapes\",\n      value: function createShapes(selection) {\n        return selection.append(\"rect\");\n      }\n    }, {\n      key: \"updateShapes\",\n      value: function updateShapes(selection) {\n        var border = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var w = this.settings.width + border;\n        var h = this.settings.height + border;\n        return selection.attr(\"x\", -w / 2).attr(\"width\", w).attr(\"y\", -h / 2).attr(\"height\", h).attr(\"rx\", this.settings.radius).attr(\"ry\", this.settings.radius);\n      }\n    }]);\n\n    return RectangularBauble;\n  }(Bauble);\n  /*\n   * Private methods, called by the class using the <function>.call(this) function.\n   */\n\n  /** @module figtree */\n  // const d3 = require(\"d3\");\n\n  /**\n   * The FigTree class\n   *\n   * A class that takes a tree and draws it into the the given SVG root element. Has a range of methods\n   * for adding interactivity to the tree (e.g., mouse-over labels, rotating nodes and rerooting on branches).\n   * The tree is updated with animated transitions.\n   */\n\n\n  var FigTree =\n  /*#__PURE__*/\n  function () {\n    _createClass(FigTree, null, [{\n      key: \"DEFAULT_SETTINGS\",\n      value: function DEFAULT_SETTINGS() {\n        return {\n          xAxisTickArguments: [5, \"f\"],\n          xAxisTitle: \"Divergence\",\n          // nodeRadius: 6,\n          hoverBorder: 2,\n          backgroundBorder: 0,\n          baubles: [],\n          transitionDuration: 500\n        };\n      }\n      /**\n       * The constructor.\n       * @param svg\n       * @param layout - an instance of class Layout\n       * @param margins\n       * @param settings\n       */\n\n    }]);\n\n    function FigTree(svg, layout, margins) {\n      var settings = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n      _classCallCheck(this, FigTree);\n\n      this.layout = layout;\n      this.margins = margins; // merge the default settings with the supplied settings\n\n      this.settings = _objectSpread({}, FigTree.DEFAULT_SETTINGS(), settings);\n      this.svg = svg;\n    }\n\n    _createClass(FigTree, [{\n      key: \"draw\",\n      value: function draw() {\n        var _this18 = this;\n\n        // get the size of the svg we are drawing on\n        var width, height;\n\n        if (Object.keys(this.settings).indexOf(\"width\") > -1) {\n          width = this.settings.width;\n        } else {\n          width = this.svg.getBoundingClientRect().width;\n        }\n\n        if (Object.keys(this.settings).indexOf(\"height\") > -1) {\n          height = this.settings.height;\n        } else {\n          height = this.svg.getBoundingClientRect().height;\n        } //remove the tree if it is there already\n\n\n        select(this.svg).select(\"g\").remove(); // add a group which will contain the new tree\n\n        select(this.svg).append(\"g\").attr(\"transform\", \"translate(\".concat(this.margins.left, \",\").concat(this.margins.top, \")\")); //to selecting every time\n\n        this.svgSelection = select(this.svg).select(\"g\");\n        this.svgSelection.append(\"g\").attr(\"class\", \"axes-layer\");\n        this.svgSelection.append(\"g\").attr(\"class\", \"branches-layer\");\n\n        if (this.settings.backgroundBorder > 0) {\n          this.svgSelection.append(\"g\").attr(\"class\", \"nodes-background-layer\");\n        }\n\n        this.svgSelection.append(\"g\").attr(\"class\", \"nodes-layer\"); // create the scales\n\n        var xScale = linear$1().domain(this.layout.horizontalRange).range([this.margins.left, width - this.margins.right]);\n        var yScale = linear$1().domain(this.layout.verticalRange).range([this.margins.top + 20, height - this.margins.bottom - 20]);\n        this.scales = {\n          x: xScale,\n          y: yScale,\n          width: width,\n          height: height\n        };\n        addAxis.call(this, this.margins);\n        this.vertices = [];\n        this.edges = []; // Called whenever the layout changes...\n\n        this.layout.updateCallback = function () {\n          _this18.update();\n        };\n\n        this.update();\n      }\n      /**\n       * Updates the tree when it has changed\n       */\n\n    }, {\n      key: \"update\",\n      value: function update() {\n        // get new positions\n        this.layout.layout(this.vertices, this.edges); // svg may have changed sizes\n\n        var width, height;\n\n        if (Object.keys(this.settings).indexOf(\"width\") > -1) {\n          width = this.settings.width;\n        } else {\n          width = this.svg.getBoundingClientRect().width;\n        }\n\n        if (Object.keys(this.settings).indexOf(\"height\") > -1) {\n          height = this.settings.height;\n        } else {\n          height = this.svg.getBoundingClientRect().height;\n        } // update the scales' domains\n\n\n        this.scales.x.domain(this.layout.horizontalRange).range([this.margins.left, width - this.margins.right]);\n        this.scales.y.domain(this.layout.verticalRange).range([this.margins.top + 20, height - this.margins.bottom - 20]);\n        this.scales.width = width;\n        this.scales.height = height; // updateAxis.call(this);\n\n        var xAxis = axisBottom(this.scales.x).tickArguments(this.settings.xAxisTickArguments);\n        this.svgSelection.select(\"#x-axis\").transition().duration(this.settings.transitionDuration).call(xAxis); // call the private methods to create the components of the diagram\n\n        updateBranches.call(this);\n\n        if (this.settings.backgroundBorder > 0) {\n          updateNodeBackgrounds.call(this);\n        }\n\n        updateNodes.call(this);\n      }\n      /**\n       * set mouseover highlighting of branches\n       */\n\n    }, {\n      key: \"hilightBranches\",\n      value: function hilightBranches() {\n        // need to use 'function' here so that 'this' refers to the SVG\n        // element being hovered over.\n        var selected = this.svgSelection.selectAll(\".branch\").select(\".branch-path\");\n        selected.on(\"mouseover\", function (d, i) {\n          select(this).classed(\"hovered\", true);\n        });\n        selected.on(\"mouseout\", function (d, i) {\n          select(this).classed(\"hovered\", false);\n        });\n      }\n      /**\n       * Set mouseover highlighting of internal nodes\n       */\n\n    }, {\n      key: \"hilightInternalNodes\",\n      value: function hilightInternalNodes() {\n        this.hilightNodes(\".internal-node\");\n      }\n      /**\n       * Set mouseover highlighting of internal nodes\n       */\n\n    }, {\n      key: \"hilightExternalNodes\",\n      value: function hilightExternalNodes() {\n        this.hilightNodes(\".external-node\");\n      }\n      /**\n       * Set mouseover highlighting of nodes\n       */\n\n    }, {\n      key: \"hilightNodes\",\n      value: function hilightNodes(selection) {\n        // need to use 'function' here so that 'this' refers to the SVG\n        // element being hovered over.\n        var self = this;\n        var selected = this.svgSelection.selectAll(selection);\n        selected.on(\"mouseover\", function (d, i) {\n          var node = select(this).select(\".node-shape\");\n          self.settings.baubles.forEach(function (bauble) {\n            if (bauble.vertexFilter(node)) {\n              bauble.updateShapes(node, self.settings.hoverBorder);\n            }\n          });\n          node.classed(\"hovered\", true);\n        });\n        selected.on(\"mouseout\", function (d, i) {\n          var node = select(this).select(\".node-shape\");\n          self.settings.baubles.forEach(function (bauble) {\n            if (bauble.vertexFilter(node)) {\n              bauble.updateShapes(node, 0);\n            }\n          });\n          node.classed(\"hovered\", false);\n        });\n      }\n      /**\n       * Registers action function to be called when an edge is clicked on. The function is passed\n       * edge object that was clicked on and the position of the click as a proportion of the edge length.\n       *\n       * Optionally a selection string can be provided - i.e., to select a particular branch by its id.\n       *\n       * @param action\n       * @param selection\n       */\n\n    }, {\n      key: \"onClickBranch\",\n      value: function onClickBranch(action) {\n        var selection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        // We need to use the \"function\" keyword here (rather than an arrow) so that \"this\"\n        // points to the actual SVG element (so we can use d3.mouse(this)). We therefore need\n        // to store a reference to the object in \"self\".\n        var self = this;\n        var selected = this.svgSelection.selectAll(\"\".concat(selection ? selection : \".branch\"));\n        selected.on(\"click\", function (edge) {\n          var x1 = self.scales.x(edge.v1.x);\n          var x2 = self.scales.x(edge.v0.x);\n          var mx = mouse(this)[0];\n          var proportion = Math.max(0.0, Math.min(1.0, (mx - x2) / (x1 - x2)));\n          action(edge, proportion);\n        });\n      }\n      /**\n       * Registers action function to be called when an internal node is clicked on. The function should\n       * take the tree and the node that was clicked on.\n       *\n       * A static method - Tree.rotate() is available for rotating the node order at the clicked node.\n       *\n       * @param action\n       */\n\n    }, {\n      key: \"onClickInternalNode\",\n      value: function onClickInternalNode(action) {\n        this.onClickNode(action, \".internal-node\");\n      }\n      /**\n       * Registers action function to be called when an external node is clicked on. The function should\n       * take the tree and the node that was clicked on.\n       *\n       * @param action\n       */\n\n    }, {\n      key: \"onClickExternalNode\",\n      value: function onClickExternalNode(action) {\n        this.onClickNode(action, \".external-node\");\n      }\n      /**\n       * Registers action function to be called when a vertex is clicked on. The function is passed\n       * the vertex object.\n       *\n       * Optionally a selection string can be provided - i.e., to select a particular node by its id.\n       *\n       * @param action\n       * @param selection\n       */\n\n    }, {\n      key: \"onClickNode\",\n      value: function onClickNode(action) {\n        var selection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var selected = this.svgSelection.selectAll(\"\".concat(selection ? selection : \".node\")).select(\".node-shape\");\n        selected.on(\"click\", function (vertex) {\n          action(vertex);\n        });\n      }\n      /**\n       * General Nodehover callback\n       * @param {*} action and object with an enter and exit function\n       * @param {*} selection defualts to \".node\" will select this selection's child \".node-shape\"\n       */\n\n    }, {\n      key: \"onHoverNode\",\n      value: function onHoverNode(action) {\n        var selection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var selected = this.svgSelection.selectAll(\"\".concat(selection ? selection : \".node\")).select(\".node-shape\");\n        selected.on(\"mouseover\", function (vertex) {\n          action.enter(vertex);\n        });\n        selected.on(\"mouseout\", function (vertex) {\n          action.exit(vertex);\n        });\n      }\n      /**\n       * General branch hover callback\n       * @param {*} action and object with an enter and exit function\n       * @param {*} selection defualts to .branch\n       */\n\n    }, {\n      key: \"onHoverBranch\",\n      value: function onHoverBranch(action) {\n        var selection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        // need to use 'function' here so that 'this' refers to the SVG\n        // element being hovered over.\n        var selected = this.svgSelection.selectAll(\"\".concat(selection ? selection : \".branch\")).select(\"branch-path\");\n        selected.on(\"mouseover\", function (d, i) {\n          action.enter(this);\n        });\n        selected.on(\"mouseout\", function (d, i) {\n          action.exit(this);\n        });\n      }\n      /**\n       * Registers some text to appear in a popup box when the mouse hovers over the selection.\n       *\n       * @param selection\n       * @param text\n       */\n\n    }, {\n      key: \"addToolTip\",\n      value: function addToolTip(selection, text) {\n        this.svgSelection.selectAll(selection).on(\"mouseover\", function (selected) {\n          var tooltip = document.getElementById(\"tooltip\");\n\n          if (typeof text === typeof \"\") {\n            tooltip.innerHTML = text;\n          } else {\n            tooltip.innerHTML = text(selected.node);\n          }\n\n          tooltip.style.display = \"block\";\n          tooltip.style.left = event.pageX + 10 + \"px\";\n          tooltip.style.top = event.pageY + 10 + \"px\";\n        });\n        this.svgSelection.selectAll(selection).on(\"mouseout\", function () {\n          var tooltip = document.getElementById(\"tooltip\");\n          tooltip.style.display = \"none\";\n        });\n      }\n    }, {\n      key: \"treeLayout\",\n      set: function set(layout) {\n        this.layout = layout;\n        this.update();\n      }\n    }]);\n\n    return FigTree;\n  }();\n  /*\n   * Private methods, called by the class using the <function>.call(this) function.\n   */\n\n  /**\n   * Adds or updates nodes\n   */\n\n\n  function updateNodes() {\n    var _this19 = this;\n\n    var nodesLayer = select(this.svg).select(\".nodes-layer\"); // DATA JOIN\n    // Join new data with old elements, if any.\n\n    var nodes = nodesLayer.selectAll(\".node\").data(this.vertices, function (v) {\n      return \"n_\".concat(v.key);\n    }); // ENTER\n    // Create new elements as needed.\n\n    var newNodes = nodes.enter().append(\"g\").attr(\"id\", function (v) {\n      return v.id;\n    }).attr(\"class\", function (v) {\n      return [\"node\"].concat(_toConsumableArray(v.classes)).join(\" \");\n    }).attr(\"transform\", function (v) {\n      return \"translate(\".concat(_this19.scales.x(v.x), \", \").concat(_this19.scales.y(v.y), \")\");\n    }); // add the specific node shapes or 'baubles'\n\n    this.settings.baubles.forEach(function (bauble) {\n      var d = bauble.createShapes(newNodes.filter(bauble.vertexFilter)).attr(\"class\", \"node-shape\");\n      bauble.updateShapes(d);\n    });\n    newNodes.append(\"text\").attr(\"class\", \"node-label name\").attr(\"text-anchor\", \"start\").attr(\"alignment-baseline\", \"middle\").attr(\"dx\", \"12\").attr(\"dy\", \"0\").text(function (d) {\n      return d.rightLabel;\n    });\n    newNodes.append(\"text\").attr(\"class\", \"node-label support\").attr(\"text-anchor\", \"end\").attr(\"dx\", \"-6\").attr(\"dy\", function (d) {\n      return d.labelBelow ? -8 : +8;\n    }).attr(\"alignment-baseline\", function (d) {\n      return d.labelBelow ? \"bottom\" : \"hanging\";\n    }).text(function (d) {\n      return d.leftLabel;\n    }); // update the existing elements\n\n    nodes.transition().duration(this.settings.transitionDuration).attr(\"class\", function (v) {\n      return [\"node\"].concat(_toConsumableArray(v.classes)).join(\" \");\n    }).attr(\"transform\", function (v) {\n      return \"translate(\".concat(_this19.scales.x(v.x), \", \").concat(_this19.scales.y(v.y), \")\");\n    }); // update all the baubles\n\n    this.settings.baubles.forEach(function (bauble) {\n      var d = nodes.select(\".node-shape\").filter(bauble.vertexFilter).transition().duration(_this19.settings.transitionDuration);\n      bauble.updateShapes(d);\n    });\n    nodes.select(\"text .node-label .name\").transition().duration(this.settings.transitionDuration).attr(\"class\", \"node-label name\").attr(\"text-anchor\", \"start\").attr(\"alignment-baseline\", \"middle\").attr(\"dx\", \"12\").attr(\"dy\", \"0\").text(function (d) {\n      return d.rightLabel;\n    });\n    nodes.select(\"text .node-label .support\").transition().duration(this.settings.transitionDuration).attr(\"alignment-baseline\", function (d) {\n      return d.labelBelow ? \"bottom\" : \"hanging\";\n    }).attr(\"class\", \"node-label support\").attr(\"text-anchor\", \"end\").attr(\"dx\", \"-6\").attr(\"dy\", function (d) {\n      return d.labelBelow ? -8 : +8;\n    }).text(function (d) {\n      return d.leftLabel;\n    }); // EXIT\n    // Remove old elements as needed.\n\n    nodes.exit().remove();\n  }\n\n  function updateNodeBackgrounds() {\n    var _this20 = this;\n\n    var nodesBackgroundLayer = this.svgSelection.select(\".nodes-background-layer\"); // DATA JOIN\n    // Join new data with old elements, if any.\n\n    var nodes = nodesBackgroundLayer.selectAll(\".node-background\").data(this.vertices, function (v) {\n      return \"nb_\".concat(v.key);\n    }); // ENTER\n    // Create new elements as needed.\n\n    var newNodes = nodes.enter(); // add the specific node shapes or 'baubles'\n\n    this.settings.baubles.forEach(function (bauble) {\n      var d = bauble.createShapes(newNodes.filter(bauble.vertexFilter)).attr(\"class\", \"node-background\").attr(\"transform\", function (v) {\n        return \"translate(\".concat(_this20.scales.x(v.x), \", \").concat(_this20.scales.y(v.y), \")\");\n      });\n      bauble.updateShapes(d, _this20.settings.backgroundBorder);\n    }); // update all the existing elements\n\n    this.settings.baubles.forEach(function (bauble) {\n      var d = nodes.filter(bauble.vertexFilter).transition().duration(_this20.settings.transitionDuration).attr(\"transform\", function (v) {\n        return \"translate(\".concat(_this20.scales.x(v.x), \", \").concat(_this20.scales.y(v.y), \")\");\n      });\n      bauble.updateShapes(d, _this20.settings.backgroundBorder);\n    }); // EXIT\n    // Remove old elements as needed.\n\n    nodes.exit().remove();\n  }\n  /**\n   * Adds or updates branch lines\n   */\n\n\n  function updateBranches() {\n    var _this21 = this;\n\n    var branchesLayer = this.svgSelection.select(\".branches-layer\"); // a function to create a line path\n    // const branchPath = d3.line()\n    //     .x((v) => v.x)\n    //     .y((v) => v.y)\n    //     .curve(this.layout.branchCurve);\n\n    var branchPath = this.layout.branchPathGenerator(this.scales); // DATA JOIN\n    // Join new data with old elements, if any.\n\n    var branches = branchesLayer.selectAll(\"g .branch\").data(this.edges, function (e) {\n      return \"b_\".concat(e.key);\n    }); // ENTER\n    // Create new elements as needed.\n\n    var newBranches = branches.enter().append(\"g\").attr(\"id\", function (e) {\n      return e.id;\n    }).attr(\"class\", function (e) {\n      return [\"branch\"].concat(_toConsumableArray(e.classes)).join(\" \");\n    }).attr(\"transform\", function (e) {\n      return \"translate(\".concat(_this21.scales.x(e.v0.x), \", \").concat(_this21.scales.y(e.v1.y), \")\");\n    });\n    newBranches.append(\"path\").attr(\"class\", \"branch-path\").attr(\"d\", function (e, i) {\n      return branchPath(e, i);\n    });\n    newBranches.append(\"text\").attr(\"class\", \"branch-label length\").attr(\"dx\", function (e) {\n      return (_this21.scales.x(e.v1.x) - _this21.scales.x(e.v0.x)) / 2;\n    }).attr(\"dy\", function (e) {\n      return e.labelBelow ? +6 : -6;\n    }).attr(\"alignment-baseline\", function (e) {\n      return e.labelBelow ? \"hanging\" : \"bottom\";\n    }).attr(\"text-anchor\", \"middle\").text(function (e) {\n      return e.label;\n    }); // update the existing elements\n\n    branches.transition().duration(this.settings.transitionDuration).attr(\"class\", function (e) {\n      return [\"branch\"].concat(_toConsumableArray(e.classes)).join(\" \");\n    }).attr(\"transform\", function (e) {\n      return \"translate(\".concat(_this21.scales.x(e.v0.x), \", \").concat(_this21.scales.y(e.v1.y), \")\");\n    }).select(\"path\").attr(\"d\", function (e, i) {\n      return branchPath(e, i);\n    }).select(\"text .branch-label .length\").attr(\"class\", \"branch-label length\").attr(\"dx\", function (e) {\n      return (_this21.scales.x(e.v1.x) - _this21.scales.x(e.v0.x)) / 2;\n    }).attr(\"dy\", function (e) {\n      return e.labelBelow ? +6 : -6;\n    }).attr(\"alignment-baseline\", function (e) {\n      return e.labelBelow ? \"hanging\" : \"bottom\";\n    }).attr(\"text-anchor\", \"middle\").text(function (e) {\n      return e.label;\n    }); // EXIT\n    // Remove old elements as needed.\n\n    branches.exit().remove();\n  }\n  /**\n   * Add axis\n   */\n\n\n  function addAxis() {\n    var xAxis = axisBottom(this.scales.x).tickArguments(this.settings.xAxisTickArguments);\n    var xAxisWidth = this.scales.width - this.margins.left - this.margins.right;\n    var axesLayer = this.svgSelection.select(\".axes-layer\");\n    axesLayer.append(\"g\").attr(\"id\", \"x-axis\").attr(\"class\", \"axis\").attr(\"transform\", \"translate(0, \".concat(this.scales.height - this.margins.bottom + 5, \")\")).call(xAxis);\n    axesLayer.append(\"g\").attr(\"id\", \"x-axis-label\").attr(\"class\", \"axis-label\").attr(\"transform\", \"translate(\".concat(this.margins.left, \", \").concat(this.scales.height - this.margins.bottom, \")\")).append(\"text\").attr(\"transform\", \"translate(\".concat(xAxisWidth / 2, \", 35)\")).attr(\"alignment-baseline\", \"hanging\").style(\"text-anchor\", \"middle\").text(this.settings.xAxisTitle);\n  }\n  /** @module Graph */\n  // import {Type} from 'figtree';\n\n  /**\n   * The graph class\n   *\n   * A class that takes an arrary of nodes and edges and provides a number of methods\n   * for manipulating the graph.\n   * @param nodes - an array of nodes. Should contain a unique id identifier\n   * @param edges - an array of edges linking the nodes {source:node.id,target:node.id}\n   */\n\n\n  var Graph =\n  /*#__PURE__*/\n  function () {\n    function Graph() {\n      var _this22 = this;\n\n      var nodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var edges = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var settings = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        acyclicSelector: function acyclicSelector(e) {\n          return true;\n        }\n      };\n\n      _classCallCheck(this, Graph);\n\n      this.nodeList = [];\n      this.nodeMap = new Map();\n      this.outGoingEdgeMap = new Map();\n      this.incomingEdgeMap = new Map();\n      this.edgeList = [];\n      this.edgeMap = new Map();\n      this.acyclicSelector = settings.acyclicSelector;\n      nodes.forEach(function (node) {\n        return _this22.addNode(node);\n      });\n      edges.forEach(function (edge) {\n        var metaData = edge.metaData ? edge.metaData : {};\n\n        _this22.drawEdge(edge.source, edge.target, metaData);\n      }); // This is used in identifying terminal tips  \n    }\n\n    _createClass(Graph, [{\n      key: \"addNode\",\n\n      /**\n       * Adds a node to the graph.\n       * @param {*} node \n       */\n      value: function addNode(node) {\n        if (!node.id) {\n          throw new Error(\"All node's must contain an 'id' key \".concat(node));\n        }\n\n        this.nodeList.push(node);\n\n        if (this.nodeMap.has(node.id)) {\n          throw new Error(\"All node's must have unique id values \".concat(node.id, \" seen twice\"));\n        }\n\n        this.nodeMap.set(node.id, node);\n        this.outGoingEdgeMap.set(node, []);\n        this.incomingEdgeMap.set(node, []);\n      }\n      /**\n       * return a node given the key\n       * @param {*} id the node id value \n       */\n\n    }, {\n      key: \"getNode\",\n      value: function getNode(id) {\n        return this.nodeMap.get(id);\n      }\n      /**\n       * Get the edges entering a node\n       * @param {*} node \n       * @returns {array} array of edges that end with the node\n       */\n\n    }, {\n      key: \"getIncomingEdges\",\n      value: function getIncomingEdges(node) {\n        return this.incomingEdgeMap.get(node);\n      }\n      /**\n       * Get the edges leaving a node\n       * @param {*} node \n       * @returns {array} array of edges that begin with the node\n       */\n\n    }, {\n      key: \"getOutgoingEdges\",\n      value: function getOutgoingEdges(node) {\n        return this.outGoingEdgeMap.get(node);\n      }\n      /**\n       * Get all the edges leaving and entering a node\n       * @param {*} node\n       * @returns {array} array of edges that touch node\n       */\n\n    }, {\n      key: \"getEdges\",\n      value: function getEdges(node) {\n        return this.getOutgoingEdges(node).concat(this.getIncomingEdges(node));\n      }\n    }, {\n      key: \"getNodeInfo\",\n      value: function getNodeInfo(node) {} // const formatDate=d3.timeFormat(\"%Y-%m-%d\")\n      // let outString = `${node.id} </br>`\n      // // for(const key of Object.keys(node)){\n      // //     if(node[key]){\n      // //         if(key!==\"id\"&& key!==\"metaData\"&&key!==\"key\"){\n      // //             if(key.toLowerCase().indexOf(\"date\")>-1){\n      // //                 outString = `${outString}${key}: ${node[key].toISOString().substring(0, 10)}</br>`;\n      // //                 }else{\n      // //                 outString = `${outString}${key}: ${node[key]}</br>`;\n      // //                 }            \n      // //             }\n      // //     }\n      // // }\n      // for(const key of Object.keys(node.metaData)){\n      //     if(key.toLowerCase().indexOf(\"date\")>-1){\n      //     outString = `${outString}${key}: ${node.metaData[key].toISOString().substring(0, 10)}</br>`;\n      //     }else{\n      //     outString = `${outString}${key}: ${node.metaData[key]}</br>`;\n      //     }\n      // }\n      // return outString;\n\n      /**\n       * removes the node and incoming/outgoing edges\n       * @param {object} node \n       */\n\n    }, {\n      key: \"removeNode\",\n      value: function removeNode(node) {\n        var _this23 = this;\n\n        //remove edges\n        var edges = this.getEdges(node);\n        edges.forEach(function (edge) {\n          return _this23.removeEdge(edge);\n        });\n        var id = node.id;\n        this.nodeList = this.nodeList.filter(function (node) {\n          return node.id !== id;\n        });\n        this.nodeMap.delete(id);\n        this.incomingEdgeMap.delete(node);\n        this.outGoingEdgeMap.delete(node);\n      }\n      /**\n      * @returns {*} \n      */\n\n    }, {\n      key: \"getEdge\",\n\n      /**\n       * returns the edge\n       * @param {Symbol()} id - symbol key of the edge\n       * @returns {*} edge\n       */\n      value: function getEdge(id) {\n        return this.edgeMap.get(id);\n      }\n    }, {\n      key: \"getEdgeInfo\",\n      value: function getEdgeInfo(edge) {} // // const formatDate=d3.timeFormat(\"%Y-%m-%d\")\n      // let outString = `Source:${edge.source.id} </br> Target: ${edge.target.id}</br>`;\n      // for(const key of Object.keys(edge.metaData)){\n      //     if(key.toLowerCase().indexOf(\"date\")>-1){\n      //     outString = `${outString}${key}: ${edge.metaData[key].toISOString().substring(0, 10)}</br>`;\n      //     }else{\n      //     outString = `${outString}${key}: ${edge.metaData[key]}</br>`;\n      //     }\n      // }\n      // return outString;\n\n      /**\n      * Adds an edge between the provide source and target nodes. It the nodes are not part of the graph they are added.\n      * @param {String} sourceNode Id\n      * @param {String} targetNode Id\n      */\n\n    }, {\n      key: \"drawEdge\",\n      value: function drawEdge(sourceNodeId, targetNodeId) {\n        var metaData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n        if (!this.nodeMap.has(sourceNodeId)) {\n          throw new Error(\"\".concat(sourceNodeId, \" not found in graph\"));\n        }\n\n        if (!this.nodeMap.has(targetNodeId)) {\n          throw new Error(\"\".concat(targetNodeId, \" not found in graph\"));\n        }\n\n        var index = this.edgeList.length;\n        var edge = {\n          source: this.getNode(sourceNodeId),\n          target: this.getNode(targetNodeId),\n          id: \"edge_\".concat(index),\n          metaData: metaData\n        };\n        this.addEdge(edge);\n      }\n      /**\n       * Adds an premade edge which between the provide source and target nodes. It the nodes are not part of the graph they are added.\n       * @param {*} {source:node, targe:node} \n       */\n\n    }, {\n      key: \"addEdge\",\n      value: function addEdge(edge) {\n        this.edgeList.push(edge);\n        this.edgeMap.set(edge.id, edge);\n        this.outGoingEdgeMap.get(edge.source).push(edge);\n        this.incomingEdgeMap.get(edge.target).push(edge);\n      }\n      /**\n       * removes an edge from the graph\n       * @param {*} edge \n       */\n\n    }, {\n      key: \"removeEdge\",\n      value: function removeEdge(edge) {\n        var id = edge.id;\n        this.edgeList = this.edgeList.filter(function (edge) {\n          return edge.id !== id;\n        }); // update edgemaps\n\n        this.edgeMap.delete(id); // new outgoing\n\n        var newOutgoing = this.getOutgoingEdges(edge.source).filter(function (e) {\n          return e !== edge;\n        });\n        this.outGoingEdgeMap.set(edge.source, newOutgoing);\n        var newIncoming = this.getIncomingEdges(edge.target).filter(function (e) {\n          return e !== edge;\n        });\n        this.incomingEdgeMap.set(edge.target, newIncoming);\n      }\n      /**\n       * Inserts a node into an edge. This replaced the edge with two new edges which pass through the node.\n       * @param {*} node \n       * @param {*} edge \n       */\n\n    }, {\n      key: \"insertNode\",\n      value: function insertNode(node, edge) {\n        if (!this.nodeMap.has(node.id)) {\n          this.addNode(node);\n        }\n\n        this.drawEdge(edge.source.id, node.id);\n        this.drawEdge(node.id, edge.target.id);\n        this.removeEdge(edge);\n      }\n      /**\n       * A function to return a sub graph given an arrary of nodes.\n       * @param {array} nodes - An array of nodes\n       * @param {*} options - an optional object with filterEdges:function() that filters the edges used in the traversal\n       * @returns {*} A graph object including the provided nodes and edges linking the node. If there is no path between all nodes the \n       * object will be empty \n       */\n\n    }, {\n      key: \"getSubGraph\",\n      value: function getSubGraph(nodes) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n          filterEdges: function filterEdges(e) {\n            return true;\n          }\n        };\n      } // check there is a path between all nodes\n      // const preorder= [...this.preorder(nodes[0])];\n      // if(nodes.some(n=>preorder.indexOf(n)===-1)){ \n      //     // If there is at least 1 node not hit in the traversal\n      //     return new Graph();\n      // }\n      // const edges = nodes.map(n=>[...this.getOutgoingEdges(n).filter(e=>options.filterEdges(e)).filter(e=>nodes.indexOf(e.target)>-1),\n      //                             ...this.getIncomingEdges(n).filter(e=>options.filterEdges(e)).filter(e=>nodes.indexOf(e.source)>-1)]);\n      // const uniqueEdges = [...new Set(edges)];\n      // const subGraph = new Graph();\n      // return new Graph();\n      // nodes,uniqueEdges)\n\n      /**\n      * A function returning \n      * @param {*} nodes - An array of nodes\n      * @param {*} options - an optional object with filterEdges:function() that filters the edges used in the traversal\n      * @returns {*} \n      * Not yet implimented. Should each path be a sub-graph?\n      */\n\n    }, {\n      key: \"getPaths\",\n      value: function getPaths(node1, node2) {\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n          filterEdges: function filterEdges(e) {\n            return true;\n          }\n        };\n        // check there is a path between all nodes\n        throw new Error(\"Not yet implimented\");\n      } // -----------  Methods rejigged from figtree.js tree object -----------------------------\n\n      /**\n       * Reverses the order of the children of the given node. If 'recursive=true' then it will\n       * descend down the subtree reversing all the sub nodes.\n       *\n       * @param node\n       * @param recursive\n       */\n      // add options with edgeFilter callback\n\n    }, {\n      key: \"rotate\",\n      value: function rotate(node) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n          recursive: false\n        };\n\n        var nodesToVisit = _toConsumableArray(this.preorder(node));\n\n        var outGoingEdges = this.getOutgoingEdges(node);\n\n        if (options.recursive) {\n          var _iteratorNormalCompletion7 = true;\n          var _didIteratorError7 = false;\n          var _iteratorError7 = undefined;\n\n          try {\n            for (var _iterator7 = nodesToVisit[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n              var n = _step7.value;\n              //Needs to avoid circulare loops \n              var nOutGoingEdges = this.getOutgoingEdges(n);\n              nOutGoingEdges.reverse();\n            }\n          } catch (err) {\n            _didIteratorError7 = true;\n            _iteratorError7 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n                _iterator7.return();\n              }\n            } finally {\n              if (_didIteratorError7) {\n                throw _iteratorError7;\n              }\n            }\n          }\n        } else {\n          outGoingEdges.reverse();\n        }\n      }\n    }, {\n      key: \"order\",\n\n      /**\n       * Sorts the child branches of each node in order of increasing or decreasing number\n       * of tips. This operates recursively from the node given.\n       *\n       * @param node - the node to start sorting from\n       * @param {boolean} increasing - sorting in increasing node order or decreasing?\n       * @returns {number} - the number of tips below this node\n       */\n      value: function order(node, increasing) {} // // orderNodes.call(this, node, increasing, this.treeUpdateCallback);\n      // orderNodes.call(this, node,increasing);\n      // // this.treeUpdateCallback();\n\n      /**\n       * A generator function that returns the nodes in a pre-order traversal. Starting at \n       * node. An optional options objects can be used to select which edges are used in the traversal\n       * @param {*} node \n       * @param {object} options - an optional object with filterEdges:function() that filters the edges used in the traversal\n       * @returns {IterableIterator<IterableIterator<*|*>>}\n       */\n\n    }, {\n      key: \"preorder\",\n      value:\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function preorder(node) {\n        var self, traverse;\n        return _regeneratorRuntime.wrap(function preorder$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                // We have to mark nodes as visited since it is possible to cycle back\n                this.edgeList.forEach(function (e) {\n                  return e.visited = false;\n                });\n                this.nodeList.forEach(function (n) {\n                  return n.visited = false;\n                });\n                self = this;\n                traverse =\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function traverse(node) {\n                  var edges, _iteratorNormalCompletion8, _didIteratorError8, _iteratorError8, _iterator8, _step8, edge, nextNode;\n\n                  return _regeneratorRuntime.wrap(function traverse$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          _context6.next = 2;\n                          return node;\n\n                        case 2:\n                          edges = self.getEdges(node).filter(function (e) {\n                            return self.acyclicSelector(e);\n                          }); // don't need all this if using acyclic edges\n\n                          if (!(edges.length > 0)) {\n                            _context6.next = 37;\n                            break;\n                          }\n\n                          _iteratorNormalCompletion8 = true;\n                          _didIteratorError8 = false;\n                          _iteratorError8 = undefined;\n                          _context6.prev = 7;\n                          _iterator8 = edges[Symbol.iterator]();\n\n                        case 9:\n                          if (_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done) {\n                            _context6.next = 23;\n                            break;\n                          }\n\n                          edge = _step8.value;\n\n                          if (edge.visited) {\n                            _context6.next = 20;\n                            break;\n                          }\n\n                          nextNode = void 0;\n\n                          if (node === edge.source) {\n                            nextNode = edge.target;\n                          } else {\n                            nextNode = edge.source;\n                          }\n\n                          if (nextNode.visited) {\n                            _context6.next = 19;\n                            break;\n                          }\n\n                          edge.visited = true;\n                          return _context6.delegateYield(traverse(nextNode), \"t0\", 17);\n\n                        case 17:\n                          _context6.next = 20;\n                          break;\n\n                        case 19:\n                          edge.visited = true; // technically a back edge\n\n                        case 20:\n                          _iteratorNormalCompletion8 = true;\n                          _context6.next = 9;\n                          break;\n\n                        case 23:\n                          _context6.next = 29;\n                          break;\n\n                        case 25:\n                          _context6.prev = 25;\n                          _context6.t1 = _context6[\"catch\"](7);\n                          _didIteratorError8 = true;\n                          _iteratorError8 = _context6.t1;\n\n                        case 29:\n                          _context6.prev = 29;\n                          _context6.prev = 30;\n\n                          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n                            _iterator8.return();\n                          }\n\n                        case 32:\n                          _context6.prev = 32;\n\n                          if (!_didIteratorError8) {\n                            _context6.next = 35;\n                            break;\n                          }\n\n                          throw _iteratorError8;\n\n                        case 35:\n                          return _context6.finish(32);\n\n                        case 36:\n                          return _context6.finish(29);\n\n                        case 37:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, traverse, null, [[7, 25, 29, 37], [30,, 32, 36]]);\n                });\n                return _context7.delegateYield(traverse(node), \"t0\", 5);\n\n              case 5:\n                this.edgeList.forEach(function (e) {\n                  return delete e[\"visited\"];\n                });\n                this.nodeList.forEach(function (n) {\n                  return delete n[\"visited\"];\n                });\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, preorder, this);\n      })\n      /**\n       * A generator function that returns the nodes in a post-order traversal. Starting at \n       * node. An optional options objects can be used to select which edges are used in the traversal\n       * @param {*} node \n       * @param {object} options - an optional object with filterEdges:function() that filters the edges used in the traversal\n       * @returns {IterableIterator<IterableIterator<*|*>>}\n       */\n\n    }, {\n      key: \"postorder\",\n      value:\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function postorder(node) {\n        var self, traverse;\n        return _regeneratorRuntime.wrap(function postorder$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                // We have to mark nodes as visited since it is possible to cycle back\n                this.edgeList.forEach(function (e) {\n                  return e.visited = false;\n                });\n                this.nodeList.forEach(function (n) {\n                  return n.visited = false;\n                });\n                self = this;\n                traverse =\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function traverse(node) {\n                  var edges, _iteratorNormalCompletion9, _didIteratorError9, _iteratorError9, _iterator9, _step9, edge, nextNode;\n\n                  return _regeneratorRuntime.wrap(function traverse$(_context8) {\n                    while (1) {\n                      switch (_context8.prev = _context8.next) {\n                        case 0:\n                          edges = self.getEdges(node).filter(function (e) {\n                            return self.acyclicSelector(e);\n                          }); // don't need all this if using acyclic edges\n\n                          if (!(edges.length > 0)) {\n                            _context8.next = 35;\n                            break;\n                          }\n\n                          _iteratorNormalCompletion9 = true;\n                          _didIteratorError9 = false;\n                          _iteratorError9 = undefined;\n                          _context8.prev = 5;\n                          _iterator9 = edges[Symbol.iterator]();\n\n                        case 7:\n                          if (_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done) {\n                            _context8.next = 21;\n                            break;\n                          }\n\n                          edge = _step9.value;\n\n                          if (edge.visited) {\n                            _context8.next = 18;\n                            break;\n                          }\n\n                          nextNode = void 0;\n\n                          if (node === edge.source) {\n                            nextNode = edge.target;\n                          } else {\n                            nextNode = edge.source;\n                          }\n\n                          if (nextNode.visited) {\n                            _context8.next = 17;\n                            break;\n                          }\n\n                          edge.visited = true;\n                          return _context8.delegateYield(traverse(nextNode), \"t0\", 15);\n\n                        case 15:\n                          _context8.next = 18;\n                          break;\n\n                        case 17:\n                          edge.visited = true; // technically a back edge\n\n                        case 18:\n                          _iteratorNormalCompletion9 = true;\n                          _context8.next = 7;\n                          break;\n\n                        case 21:\n                          _context8.next = 27;\n                          break;\n\n                        case 23:\n                          _context8.prev = 23;\n                          _context8.t1 = _context8[\"catch\"](5);\n                          _didIteratorError9 = true;\n                          _iteratorError9 = _context8.t1;\n\n                        case 27:\n                          _context8.prev = 27;\n                          _context8.prev = 28;\n\n                          if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n                            _iterator9.return();\n                          }\n\n                        case 30:\n                          _context8.prev = 30;\n\n                          if (!_didIteratorError9) {\n                            _context8.next = 33;\n                            break;\n                          }\n\n                          throw _iteratorError9;\n\n                        case 33:\n                          return _context8.finish(30);\n\n                        case 34:\n                          return _context8.finish(27);\n\n                        case 35:\n                          _context8.next = 37;\n                          return node;\n\n                        case 37:\n                        case \"end\":\n                          return _context8.stop();\n                      }\n                    }\n                  }, traverse, null, [[5, 23, 27, 35], [28,, 30, 34]]);\n                });\n                return _context9.delegateYield(traverse(node), \"t0\", 5);\n\n              case 5:\n                this.edgeList.forEach(function (e) {\n                  return delete e[\"visited\"];\n                });\n                this.nodeList.forEach(function (n) {\n                  return delete n[\"visited\"];\n                });\n\n              case 7:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, postorder, this);\n      })\n    }, {\n      key: \"nodes\",\n\n      /**\n       * @returns {*}\n       */\n      get: function get() {\n        return this.nodeList;\n      }\n      /**\n       * @returns {*}\n       */\n\n    }, {\n      key: \"externalNodes\",\n      get: function get() {\n        var _this24 = this;\n\n        return this.nodeList.filter(function (d) {\n          return _this24.getOutgoingEdges().length === 0;\n        });\n      }\n    }, {\n      key: \"edges\",\n      get: function get() {\n        return this.edgeList;\n      }\n    }], [{\n      key: \"fromPhylogeny\",\n\n      /**\n       * A static function to make a graph out of a tree\n       * @param {*} tree \n       * @returns {Graph}\n       */\n      value: function fromPhylogeny(tree) {\n        var nodes = tree.externalNodes; // links inferred from the transmission layout\n        // will also need a call back somewhere to update the links\n      }\n    }]);\n\n    return Graph;\n  }();\n\n  exports.ArcLayout = ArcLayout;\n  exports.Bauble = Bauble;\n  exports.CircleBauble = CircleBauble;\n  exports.FigTree = FigTree;\n  exports.Graph = Graph;\n  exports.Layout = Layout;\n  exports.RectangularBauble = RectangularBauble;\n  exports.RectangularLayout = RectangularLayout;\n  exports.TransmissionLayout = TransmissionLayout;\n  exports.Tree = Tree;\n  exports.Type = Type;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","module.exports = __webpack_public_path__ + \"static/media/logo.a9ecf903.png\";","import React from 'react';\nimport logo from '../images/logo.png';\nfunction Header() {\n\t\treturn (\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"logo\">\n\t\t\t\t\t<a href=\"http://artic.network\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t<img src={logo} alt={'logo'} width=\"132\" />\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"title\">\n\t\t\t\t\t<h2 style={{marginTop: \"0px\", marginBottom: \"8px\"}}>\n\t\t\t\t  \t\t<span style={{fontSize: \"1.8em\"}}>TRAPPER</span>\n\t\t\t\t\t\t<span> Transmission Reconstuction And Phylogenetics Promoting Early Response</span>\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t);\n}\n\nexport default Header;\n","class Case{\n    /** \n    * A class to hold data for each case. 'case' is a special word in javascript so we spell it with a k.\n    * This class is intended to formalize the data format for each case. The constructor also takes a map which maps   * keys in the incoming object to those in the Case object. Required values in the map and their types are  \n    *   symptomOnset     the date of first contact\n    *   sampleDate       an array of dates\n    *   resolution       The resolution of the case\n    *   resolutionDate   The date of resolution\n    * Any incoming keys not mentioned in the dataMap are put in a metadata entry. If the required keys\n    */\n     /**\n    * The constructor\n    * @param data             an object with the following keys. Any other keys will be added to a metadata entry\n    * @param keyMap          a map that maps incoming keys to the required entries above. The defualt assumes the    keys===the entry names. Any entries not provided will be taken from the defualt.\n    *\n    */\n    \n    static DEFAULT_MAP() {\n          return new Map([\n                  ['symptomOnset','symptomOnset'],\n                  ['sampleDate','sampleDate'],\n                  ['resolution','resolution'],\n                  ['resolutionDate','resolutionDate'],\n                  ['id','id'],\n                  ['location','location'] \n                ]);\n      }\n    constructor(data,keyMap=new Map()){\n      const dataMap = new Map([...Case.DEFAULT_MAP(),...keyMap])   \n      \n      this.symptomOnset = data[dataMap.get('symptomOnset')]? data[dataMap.get('symptomOnset')] :\"Unknown\";\n      this.sampleDate = data[dataMap.get('sampleDate')]?data[dataMap.get('sampleDate')]:\"Unknown\";\n      this.resolution = data[dataMap.get('resolution')]?data[dataMap.get('resolution')]:\"Unknown\";\n      this.resoultionDate = data[dataMap.get('resolutionDate')]?data[dataMap.get('resolutionDate')]:\"Unknown\";\n      this.id=data[dataMap.get('id')]?data[dataMap.get('id')]:\"Unknown\";\n      this.location = data[dataMap.get('location')]?data[dataMap.get('location')]:\"Unknown\";\n      this.caseId =  Symbol();\n      \n      this.metadata={};\n      for(const key of Object.keys(data).filter(k=>[...dataMap.values()].indexOf(k)===-1)){ \n          \n          this.metadata[key]=data[key];\n       }\n    }\n    \n    /**\n    * Returns a copy of the date of symptomOnset\n    */\n    getSymptomOnset(){\n     return new Date(this.symptomOnset.valueOf());\n    }\n    \n     /**\n    * Returns a copy of the sample dates \n    */\n    getSampleDate(){\n     return this.sampleDate.map(d=>new Date(d.valueOf()));\n    }\n    \n     /**\n    * Returns a copy of the date of symptomOnset\n    */\n    getResolution(){\n     return this.resolution;\n    }\n    \n    /**\n    * Returns a copy of the resolution date\n    */\n    getResolutionDate(){\n     return new Date(this.resolutionDate.valueOf());\n    }\n    /**\n    * Returns a copy of the case id\n    */\n    getId(){\n      return this.id;\n    }\n      /**\n    * Returns a copy of the unique caseId\n    */\n    getCaseId(){\n      return this.caseId;\n    }\n    \n    /**\n    * Returns a copy of the location\n    */\n    getLocation(){\n      return this.location;\n    }\n    \n  }\n  export default Case;","class Link{\n    /** \n    * A class to hold data for each link. \n    * This class is intended to formalize the data format for each case. The constructor also takes a map which maps   * keys in the incoming object to those in the Link object. Required values in the map and their types are  \n    *   target           the id of the first contact\n    *   source              the id of the source\n\n    * Any incoming keys not mentioned in the dataMap are put in a metadata entry. If the required keys\n    */\n     /**\n    * The constructor\n    * @param data             an object with the following keys. Any other keys will be added to a metadata entry\n    * @param keyMap          a map that maps incoming keys to the required entries above. The defualt assumes the    keys===the entry names. Any entries not provided will be taken from the defualt.\n    *\n    */\n    \n    static DEFAULT_MAP() {\n          return new Map([\n                  ['target','target'],\n                  ['source','source'],\n                  ['dataSource','dataSource'],\n                ]);\n      }\n    constructor(data,keyMap=new Map()){\n      const dataMap = new Map([...Link.DEFAULT_MAP(),...keyMap])   \n      \n      this.target = data[dataMap.get('target')]? data[dataMap.get('target')] :\"Unknown\";\n      this.source = data[dataMap.get('source')]?data[dataMap.get('source')]:\"Unknown\";      \n      this.dataSource=data[dataMap.get('dataSource')]?data[dataMap.get('dataSource')]:\"Unknown\";\n      this.metadata={};\n      for(const key of Object.keys(data).filter(k=>[...dataMap.values()].indexOf(k)===-1)){ \n          this.metadata[key]=data[key];\n       }\n    }\n    \n   \n    \n  }\n  export default Link;","import{timeParse} from \"d3-time-format\";\nexport const dateParse = timeParse(\"%Y-%m-%d\");\n","import {select} from 'd3-selection';\nimport {scaleLinear} from 'd3-scale';\nimport {axisBottom,axisLeft} from 'd3-axis';\nimport {easeLinear} from 'd3-ease';\n/**\n * A master class for each plot that requires each plot implement a draw\n * update, onclick and onhover method.\n */\n\nexport class d3Plot{\n    static DEFAULT_SETTINGS() {\n        return {\n      transitionDuration:300,\n      xScaleType:scaleLinear,\n      yScaleType:scaleLinear,\n      yAxisType:axisLeft,\n      xAxisType:axisBottom,\n        }\n      }\n      /**\n       * The constructor\n       * @param {*} svg \n       * @param {*} layout \n       * @param {*} margins top,bottom,left,right\n       * @param {*} settings \n       */\n    constructor(svg, layout, margins, settings = {}){\n      this.layout = layout;\n      this.margins = margins;\n\n      // merge the default settings with the supplied settings\n      this.settings = {...d3Plot.DEFAULT_SETTINGS(), ...settings};\n      this.svg=svg;\n      }\n      /**\n       * set up the svg get the size of the svg, translate it to the top\n       * left, remove all 'g' and add a g to hold the plot. make a this.svgSelection\n       * for easy access later.\n       */\n      draw(){\n            // get the size of the svg we are drawing on\n        let width,height;\n        if(Object.keys(this.settings).indexOf(\"width\")>-1){\n            width =this.settings.width;\n        }else{\n            width = this.svg.getBoundingClientRect().width;\n        }\n        if(Object.keys(this.settings).indexOf(\"height\")>-1){\n            height =this.settings.height;\n        }else{\n            height = this.svg.getBoundingClientRect().height;\n        }\n \n        //remove the tree if it is there already\n        select(this.svg).select(\"g\").remove();\n \n        // add a group which will contain the new plot\n        select(this.svg).append(\"g\")\n            .attr(\"transform\",`translate(${this.margins.left},${this.margins.top})`);\n \n         //to selecting every time\n         this.svgSelection = select(this.svg).select(\"g\");\n\n         this.svgSelection.append(\"g\").attr(\"class\", \"axes-layer\");\n\n         this.addDataLayers();\n         \n         // create the scales\n         const xScale = this.settings.xScaleType()\n         .domain(this.layout.horizontalRange)\n         .range([this.margins.left, width - this.margins.right-this.margins.left]);\n         \n         //height is total \n         const yScale = this.settings.yScaleType()\n             .domain(this.layout.verticalRange)\n             .range([height -this.margins.bottom-this.margins.top,this.margins.top]);\n \n         this.scales = {x:xScale, y:yScale, width, height};\n         this.addAxis();\n \n         // Called whenever the layout changes...\n           this.layout.updateCallback = () => {\n                 this.update();\n             }\n     \n             this.update();\n      }\n      // adds layers to hold data here. They are the layers referenced in the update call\n      addDataLayers(){\n      }\n      /**\n       * An update function to be overwritten by member classes. This takes the svg selection\n       * and goes through the join, enter, exit cycle.\n       */\n\n      update(){\n      }\n\n      /**\n     * Add a hover callback\n     * @param {*} action  - object which has 2 functions enter and exit each takes 3 arguments d,i,n d is data n[i] is `this`\n     * @param {*} selection  - what to select defaults to .rect class\n     */\n    onHover(action,selection=null){\n        const selected = this.svgSelection.selectAll(`${selection}`);\n        selected.on(\"mouseover\", (d,i,n) => {\n            action.enter(d,i,n);\n        });\n        selected.on(\"mouseout\", (d,i,n) => {\n            action.exit(d,i,n);\n        });\n    }\n    onClick(action,selection=null){\n    const selected = this.svgSelection.selectAll(`${selection}`);\n    selected.on(\"click\", (d,i,n) => {\n        action(d,i,n);\n    });\n    }\n\n    addAxis(){\n        const axesLayer = this.svgSelection.select(\".axes-layer\");  \n        if(this.settings.xAxisType){\n            axesLayer.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"id\", \"x-axis\")\n            .attr(\"transform\", `translate(0, ${this.scales.height - this.margins.bottom + 5})`)\n            .call(axisBottom(this.scales.x).tickValues(this.layout.horizontalAxisTicks));\n        }\n        if(this.settings.yAxisType){\n            axesLayer.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .attr(\"id\", \"y-axis\")\n            .attr(\"transform\", `translate(${this.margins.left/2},0)`)\n            .call(axisLeft(this.scales.y).ticks(5));\n        }\n    }\n    updateAxis(){\n        this.svgSelection.select(\"#x-axis\")\n            .call(axisBottom(this.scales.x).tickValues(this.layout.horizontalAxisTicks))\n            .attr(\"transform\", `translate(0, ${this.scales.height - this.margins.bottom + 5})`)\n            .transition()\n            .duration(this.settings.transitionDuration)\n            .ease(easeLinear);\n\n        \n        this.svgSelection.select(\"#y-axis\")\n        .attr(\"transform\", `translate(${this.margins.left/2},0)`)\n        .call(axisLeft(this.scales.y).ticks(5))\n        .transition()\n        .duration(this.settings.transitionDuration)\n        .ease(easeLinear)\n    }\n\n    updateAxisBars(){\n        const axesLayer = this.svgSelection.select(\".axes-layer\");  \n        const ticks = []\n        for(let i=0;i<(this.layout.horizontalAxisTicks.length-1);i++){\n            ticks.push({x0:this.layout.horizontalAxisTicks[i],\n                        x1:this.layout.horizontalAxisTicks[i+1]})\n        }\n    // DATA JOIN\n    // Join new data with old elements, if any.\n        const axisBoxes = axesLayer.selectAll(\".axis-box\")\n            .data(ticks)\n    // ENTER\n    // Create new elements as needed.\n    const newBoxes = axisBoxes.enter()\n                    .append('rect')\n                    .attr(\"x\", d => this.scales.x(d.x0))\n                    .attr(\"width\", d =>this.scales.x(d.x1) - this.scales.x(d.x0))\n                    .attr(\"y\", d => 0)\n                    .attr(\"height\", d => this.scales.height-this.margins.bottom-this.margins.top)\n                    .attr(\"class\", (d,i) => i%2===0? `axis-box even`:`axis-box odd`);\n    \n        axisBoxes\n        .transition()\n        .duration(this.settings.transitionDuration)\n        .attr(\"x\", d => this.scales.x(d.x0))\n        .attr(\"width\", d => this.scales.x(d.x1) - this.scales.x(d.x0))\n        .attr(\"y\", d => 0)\n        .attr(\"height\", d => this.scales.height-this.margins.bottom-this.margins.top)\n        .attr(\"class\", (d,i) => i%2===0? `axis-box even`:`axis-box odd`);\n\n\n        axisBoxes.exit().remove();\n    }\n    \n    \n}\n","import {axisLeft, axisBottom} from \"d3-axis\";\nimport {select,selectAll} from \"d3-selection\";\nimport {scaleLinear,scaleTime} from \"d3-scale\";\nimport {easeLinear} from \"d3-ease\";\nimport {d3Plot} from \"./d3Plot\";\n\nexport class stackedHistogramChart extends d3Plot{\n  static DEFAULT_SETTINGS() {\n        return {\n      hoverBorder: 2,\n      backgroundBorder: 0,\n      baubles: [],\n      transitionDuration:500,\n        }\n      }\n      /**\n       * The constructor\n       * @param {*} svg \n       * @param {*} layout \n       * @param {*} margins top,bottom,left,right\n       * @param {*} settings \n       */\n    constructor(svg, layout, margins, settings = {}){\n      super();\n      this.layout = layout;\n      this.margins = margins;\n\n      // merge the default settings with the supplied settings\n      this.settings = {...d3Plot.DEFAULT_SETTINGS(), ...stackedHistogramChart.DEFAULT_SETTINGS(), ...settings};\n      this.svg=svg;\n      }\n      /**\n       * @override\n       * Adds rect-background and rect layers for data addition later\n       */\n      addDataLayers(){\n          if (this.settings.backgroundBorder > 0) {\n              this.svgSelection.append(\"g\").attr(\"class\", \"rect-background-layer\");\n          }\n          this.svgSelection.append(\"g\").attr(\"class\", \"rect-layer\");\n      }\n        update(){\n        // get new positions\n        this.bins = []; // rest to so will be filled\n        this.layout.layout(this.bins);\n        // svg may have changed sizes\n        let width,height;\n        if(Object.keys(this.settings).indexOf(\"width\")>-1){\n            width =this.settings.width;\n        }else{\n            width = this.svg.getBoundingClientRect().width;\n        }\n        if(Object.keys(this.settings).indexOf(\"height\")>-1){\n            height =this.settings.height;\n        }else{\n            height = this.svg.getBoundingClientRect().height;\n        }\n        // update the scales' domains\n        this.scales.x.domain(this.layout.horizontalRange).range([this.margins.left, width - this.margins.right-this.margins.left]);\n        this.scales.y.domain(this.layout.verticalRange).range([height -this.margins.bottom-this.margins.top,this.margins.top]);\n        this.scales.width=width;\n        this.scales.height=height;\n\n\n        if (this.settings.backgroundBorder > 0) {\n          updateRectBackgrounds.call(this);\n      }\n\n      updateRects.call(this);\n      this.updateAxis();\n      // this.updateAxisBars();\n\n    }\n/**\n * Add a hover callback\n * @param {*} action  - object which has 2 functions enter and exit each takes 3 arguments d,i,n d is data n[i] is `this`\n * @param {*} selection  - what to select defaults to .rect class\n */\n  onHover(action,selection=null){\n      const selected = this.svgSelection.selectAll(`${selection ? selection : \".rect\"}`);\n      selected.on(\"mouseover\", (d,i,n) => {\n          action.enter(d,i,n);\n      });\n      selected.on(\"mouseout\", (d,i,n) => {\n          action.exit(d,i,n);\n      });\n  }\n  onClick(action,selection=null){\n    const selected = this.svgSelection.selectAll(`${selection ? selection : \".rect\"}`);\n    selected.on(\"click\", (d,i,n) => {\n        action(d,i,n);\n    });\n  }\n\n  }\n    /**\n     * adds or updates rects\n     */\nfunction updateRects(){\n      const rectLayer = select(this.svg).select(\".rect-layer\");\n\n    // DATA JOIN\n    // Join new data with old elements, if any.\n      const rects = rectLayer.selectAll(\".rect\")\n                  .data(this.bins, (c) => `c_${c.data.id}`);\n    // ENTER\n    // Create new elements as needed.\n    const newRects = rects.enter()\n      .append(\"rect\")\n      .attr(\"id\", (v) => v.id)\n      .attr(\"class\", (v) => [\"rect\"].join(\" \")) // add attribute classes here\n      .attr(\"x\", d => this.scales.x(d.x0) + 1)\n      .attr(\"width\", d => Math.max(0, this.scales.x(d.x1) - this.scales.x(d.x0) - 1))\n      .attr(\"y\", d => this.scales.y(d.y1))\n      .attr(\"height\", d => this.scales.y(d.y0)- this.scales.y(d.y1));\n\n       // update the existing elements\n       rects\n        .transition()\n        .duration(this.settings.transitionDuration)\n        .attr(\"x\", d => this.scales.x(d.x0) + 1)\n        .attr(\"width\", d => Math.max(0, this.scales.x(d.x1) - this.scales.x(d.x0) - 1))\n        .attr(\"y\", d => this.scales.y(d.y1))\n        .attr(\"height\", d => this.scales.y(d.y0)- this.scales.y(d.y1));\n\n     // EXIT\n    // Remove old elements as needed.\n    rects.exit().remove();\n    }\nfunction updateRectBackgrounds(){\n  const rectBackgroundLayer = this.svgSelection.select(\".rect-background-layer\");\n      // DATA JOIN\n    // Join new data with old elements, if any.\n    const rects = rectBackgroundLayer.selectAll(\".rect-background\")\n    .data(this.bins, (c) => `cb_${c.data.id}`);\n    // ENTER\n    // Create new elements as needed.\n    const newRects = rects.enter()\n    .append(\"rect\")\n    .attr(\"id\", (v) => v.id)\n    .attr(\"class\", (v) => [\"rect-background\"].join(\" \")) // add attribute classes \n    .attr(\"x\", d => this.scales.x(d.x0) + 1)\n    .attr(\"width\", d => Math.max(0, this.scales.x(d.x1) - this.scales.x(d.x0) - 1))\n    .attr(\"y\", d => this.scales.y(d.y1))\n    .attr(\"height\", d => this.scales.y(d.y0)- this.scales.y(d.y1));\n\n    // update the existing elements\n    rects\n    .transition()\n    .duration(this.settings.transitionDuration)\n    .attr(\"x\", d => this.scales.x(d.x0) + 1)\n    .attr(\"width\", d => Math.max(0, this.scales.x(d.x1) - this.scales.x(d.x0) - 1))\n    .attr(\"y\", d => this.scales.y(d.y1))\n    .attr(\"height\", d => this.scales.y(d.y0)- this.scales.y(d.y1));\n\n    // EXIT\n    // Remove old elements as needed.\n    rects.exit().remove();\n\n}\n\n","\nimport {max,min} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {timeWeek} from \"d3-time\"\nimport {scaleLinear} from 'd3-scale';\nimport {transition} from \"d3-transition\"\n/** \n * StackedHisogram layout\n * settings \n */\nexport class stackedHistogramLayout{\n      static DEFAULT_SETTINGS() {\n        return {\n            groupingFunction:d=>1,\n            binnedFunction:d=>timeWeek.floor(d.symptomOnset),\n            keyToXFunction:{x0:d=>timeWeek(new Date(d.key)),x1: d=>timeWeek.offset(new Date(d.key),1)},\n            horizontalRange:null,\n            horizontalTicks:null,\n            horizontalScale:scaleLinear,\n        }\n    }\n    /**\n     * The constuctor\n     * @param {*} data which will be binned and  grouped \n     * @param {*} settings functions that will bin and group (color) the data\n     *                    groupingFunction:d=>1 - given the data assign it a group for coloring\n     *                    binnedFunction:d=>timeWeek.floor(d.symptomOnset), - given the data point return category for binning will be used as key in d3.nest\n                          keyToXFunction:{x0:d=>timeWeek(new Date(d.key)), -given the key (from above) convert to x0 and x1 on axis.\n                                          x1: timeWeek.offset(new Date(d.key),1)\n     */\n  constructor(data,settings = { }){\n    this.settings = {...stackedHistogramLayout.DEFAULT_SETTINGS(), ...settings};\n    this.data = data;\n    // default ranges - these should be set in layout()\n    this._horizontalRange = [0.0, 1.0];\n    this._verticalRange = [1.0, 0];\n    this._horizontalTicks= this.settings.horizontalScale()\n    .domain(this._horizontalRange).ticks(5)\n}\n  /**\n   * Layout the data. Given a bins array population the arrary with one entry per datapoint with x0,x1 positions and y0,y1\n   * This will stack the data from each bin ordered by group.\n   * @param {*} bins \n   */\n  layout(bins){\n            const dateBins = nest().key(d=>timeWeek.floor(d.symptomOnset))\n            .entries(this.data)\n            .map(d=>({\"x0\":timeWeek(new Date(d.key)),\"x1\":timeWeek.offset(new Date(d.key),1),\"values\":d.values}));    \n       \n       //get the keys used to group the data within each bin\n\n        const groupKeys= this.data.map(d=>this.settings.groupingFunction(d)).reduce((acc,curr) =>{\n                                            if(acc.indexOf(curr)===-1){\n                                                acc.push(curr)\n                                            };\n                                            return(acc)},[]);\n                                        \n        let currentCount=0;\n        let maxCount=0;\n        for(const time of dateBins){\n        currentCount=0;\n        for(const k of groupKeys){\n        const kEntry = time.values.filter(w=>this.settings.groupingFunction(w)===k);\n        const entry = {\"x0\":time.x0,\"x1\":time.x1,\"colorKey\":k}; // key is used for color\n        if(kEntry.length>0){\n        for(const data of kEntry){\n          const caseEntry = {...entry,...{\"data\":data}};\n          caseEntry.y0=currentCount;\n          caseEntry.y1=currentCount+1;\n          currentCount+=1;\n          bins.push(caseEntry);\n          }\n          }\n        }\n        maxCount=max([maxCount,currentCount])\n        }\n        if(!this.settings.horizontalRange){\n            this._horizontalRange = [min(dateBins,d=>d.x0),max(dateBins,d=>d.x1)];\n        }else{\n            this._horizontalRange=this.settings.horizontalRange;\n        }\n        \n        if(!this.settings.horizontalTicks){\n            this._horizontalTicks= this.settings.horizontalScale()\n                .domain(this._horizontalRange).ticks(5)\n        }else{\n            this._horizontalTicks=this.settings.horizontalTicks;\n        }\n        this._verticalRange = [0,maxCount];\n      \n    }\n      update() {\n        this.updateCallback();\n    }\n    get horizontalRange() {\n      return this._horizontalRange;\n  }\n\n  get verticalRange() {\n      return this._verticalRange;\n  }\n  get horizontalAxisTicks(){\n      return this._horizontalTicks;\n  }\n          \n  }\n\n","import React, {useCallback,useState} from 'react';\nimport {stackedHistogramChart} from '../lib/charts/stackedHistogram';\nimport {stackedHistogramLayout} from \"../lib/charts/stackedHistogramLayout\"\nimport {select} from \"d3-selection\";\nimport {scaleTime} from \"d3-scale\";\nimport {timeWeek} from \"d3-time\";\nimport {extent} from 'd3-array';\n\nfunction StackedHistogram(props){\n    const [histogram,setHistogram]=useState(null);\n    \n    const el = useCallback(node => {\n        \n        if (node !== null) {\n            if(node.children.length===0){ // make it the first time\n                const layoutSettings = {horizontalRange:extent(props.dateRange),\n                                        horizontalTicks:props.dateRange,\n                                        horizontalScale:scaleTime};\n                const layout = new stackedHistogramLayout(props.data,layoutSettings);\n                const settings = { hoverBorder: 4, backgroundBorder:0,transitionDuration:300};\n                const fig = new stackedHistogramChart(node,layout,props.margins,settings);\n                fig.draw();\n                const mouseEnter = (d, i, n)=>{select(n[i]).classed(\"hovered\", true);};\n                const mouseExit = (d,i,n) => {select(n[i]).classed(\"hovered\", false);};\n\n                const callback = {enter:mouseEnter,exit:mouseExit};\n                fig.onHover(callback)\n                fig.onClick((d,i,n)=>alert(`clicked ${d.data.id}`))\n\n                select(node).select(\".axes-layer\").select(\"#x-axis\").remove();\n                setHistogram(fig);\n            }else{\n                histogram.update();\n            }\n        }\n    });\nconst rand_id = `b${Math.random().toString(36).substring(4)}`\n\n\n        return(\n            <svg className=\"chart\" id= {rand_id}\n            ref={el}\n            height={props.chartGeom.height}\n            width={props.chartGeom.width}\n        />);\n\n};\n\nexport default StackedHistogram;\n","import React, {useCallback,useState} from 'react';\nimport {TransmissionLayout, RectangularLayout, Tree} from 'figtree';\nimport { FigTree, CircleBauble } from 'figtree';\nimport {select} from 'd3-selection';\nimport {scaleTime,scaleLinear} from \"d3-scale\";\nimport {extent} from \"d3-array\";\n\nfunction PhyloChart(props){\n    const [figtree,setFigtree]=useState(null);\n\n    const el = useCallback(node => {\n        \n        if (node !== null) {\n            if(node.children.length===0){ // make it the first time\n            const dateRangeScale = scaleTime().domain(extent(props.dateRange)).range([0,1]); // converts date to final domain (horizontal scale)\n            const treeRange = props.treeDateRange.map(d=>dateRangeScale(d)); // horizontal range of tree within date range converted to [0,1]\n            const rootToTipScale = scaleLinear().domain(extent([0,...props.phylogeny.rootToTipLengths()])).range(treeRange) // converts root to tip distance to horizontal range of tree on [0,1]\n            const layout = new props.layout(props.phylogeny,{horizontalScale:rootToTipScale});\n            \n            const fig = new FigTree(node,layout,props.margins, { hoverBorder: 4, backgroundBorder:2,\n                baubles: [\n                    new CircleBauble(),\n                ],\n                transitionDuration:300\n            });\n            fig.draw();\n            fig.hilightInternalNodes();\n            fig.hilightExternalNodes();\n            fig.hilightBranches();\n            fig.onClickNode(d=>console.log(d))\n            select(node).select(\".axes-layer\").remove();\n            setFigtree(fig);\n\n        }else{\n            figtree.update();\n        }\n        }});\n        const rand_id = `b${Math.random().toString(36).substring(4)}`\n\n        // useEffect(()=>{\n        //     if(figtree!==null){\n        //         figtree.update()\n        //     }\n        // },[props.chartGeom,props.phylogeny])\n\n         return(\n                <svg className=\"chart\" id={rand_id}\n                ref={el}\n                height={props.chartGeom.height}\n                width={props.chartGeom.width}\n            />);\n         \n};\n\n\n\nexport default PhyloChart;","import {timeWeek} from 'd3-time';\nimport {min,max,sum} from 'd3-array';\n\nexport class Outbreak{\n  constructor(id,location,cases=[]){\n    this.location=location;\n    this.cases=cases;\n    this.id=id;\n    this.children=[];\n  }\naddCase(Case){\nthis.cases = [...this.cases,Case];\n}\n \nget timeCourse(){ \n    const timePoints= this.timePoints;\n  //Weeks are hardcoded in.\n   const tc = new Map(timePoints.map(t=>[t,{time:new Date(t), cases:this.cases.filter(c=>timeWeek(c.symptomOnset)-t===0).length}]))\n    if(this.children.length===0){\n      tc.forEach(d=>d.totalDescendents=d.cases)\n    }else{\n      const childrenTimeCourse = this.children.map(child=>child.timeCourse);\n      // now get children timepoints that were misssed in this level\n      \n     for(const child of childrenTimeCourse){\n        for(const k of child.keys()){\n          if(timePoints.indexOf(k)==-1){\n            timePoints.push(k);\n            tc.set(k,{time:new Date(k),cases:0})\n          }\n        }\n     }\n      \n     for(const timePoint of timePoints){\n      const childrenCourses = childrenTimeCourse.map(child=>child.has(timePoint)?child.get(timePoint):{cases:0,totalDescendents:0})\n      //https://stackoverflow.com/questions/10865025/merge-flatten-an-array-of-arrays\n       \n       const childrenCases = sum(childrenCourses,d=>d.totalDescendents)\n       const tp = tc.get(timePoint)\n       tc.set(timePoint,{...tp,...{totalDescendents:tp.cases+childrenCases}});\n     }\n\n    }\n  return tc;\n}\naddChild(child){\nif(child instanceof Outbreak){\n  this.children.push(child)\n  child.parent=this;\n}else if(child instanceof Array){\n    child.forEach(k=>this.addChild(k))\n }\n}\nget timePoints(){\n \nconst firstTimePoints =[min(this.cases,d=>d.symptomOnset)];\nconst lastTimePoints = [max(this.cases,d=>d.symptomOnset)]\n\nif(this.children.length>0){\n  for(const child of this.children){\n    const childTP = child.timePoints;\n    firstTimePoints.push(min(childTP))\n    lastTimePoints.push(max(childTP))\n  }\n}\n// const finalWeek = timeWeek(max(lastTimePoin\n\nconst tp= timeWeek.range(timeWeek.offset(min(firstTimePoints),-1),timeWeek.offset(max(lastTimePoints),2)).map(d=>d.getTime())\n \n return tp;\n \n}\n\n/**\n * A generator function that returns the nodes in a pre-order traversal.\n *\n * @returns {IterableIterator<IterableIterator<*|*>>}\n */\n*preorder() {\n    const traverse = function *(node) {\n        yield node;\n        if (node.children) {\n            for (const child of node.children) {\n                yield* traverse(child);\n            }\n        }\n    };\n\n    yield* traverse(this);\n}\n\n/**\n * A generator function that returns the nodes in a post-order traversal\n *\n * @returns {IterableIterator<IterableIterator<*|*>>}\n */\n*postorder() {\n    const traverse = function *(node) {\n        if (node.children) {\n            for (const child of node.children) {\n                yield* traverse(child);\n            }\n        }\n        yield node;\n    };\n\n    yield* traverse(this);\n}\n}","import {Outbreak} from \"../outbreak/Outbreak.js\";\nimport {max, sum,min,extent} from 'd3-array';\nimport {timeWeek} from 'd3-time';\nimport {scaleLinear} from 'd3-scale';\n\n/**\n * The Fishplot layout\n * This takes an epidemic object and calculates the total number of cases at each time point and the relative contribution\n * of each outbreak. It returns a points arrary with with a y0 and y1 for each x for each outbreak in the epidemic.\n */\n\n\nexport class fishLayout {  \n  static DEFAULT_SETTINGS() {\n    return {\n        horizontalRange:null,\n        horizontalTicks:null,\n        horizontalScale:scaleLinear,\n    }\n}\n  /**\n   * The constructor \n   * @param {Epidemic} And epidemic object Epidemic \n   * @param {*} settings \n   */\n    constructor (Epidemic,settings){\n      this.settings = {...fishLayout.DEFAULT_SETTINGS(), ...settings};\n      this.backgroundOutbreak=new Outbreak(\"background\",null,[]);\n      this.backgroundOutbreak.addChild(Epidemic.rootOutbreak)\n      this.gapMap = new Map();\n      this.setGapMap();\n      this.points = [];\n      // Defualt ranges\n      this._horizontalRange = [0.0, 1.0];\n      this._verticalRange = [1.0, 0];\n      this._horizontalTicks= this.settings.horizontalScale()\n      .domain(this._horizontalRange).ticks(5)\n     }\n    // This adds a parent entry to each outbreak that has one.\n    \n\n    /**\n     * creates a map that has each outbreak as a key. with values that are maps with timepoints as the key\n     * And values that are arrays of [space on top, ... space between child 1 and child 2, space between child2& 3 ..., space between childLast and bottom]\n     */\n    setGapMap(){\n      // get every time point\n      const totalCourse = this.backgroundOutbreak.timeCourse;\n      for(const outbreak of [...this.backgroundOutbreak.preorder()]){\n        const timeGap = new Map();\n        const timeCourse = outbreak.timeCourse;\n       for(const time of outbreak.timePoints){\n          const timePoint = timeCourse.has(time)? timeCourse.get(time): {time:new Date(time), cases:0,totalDescendents:0}\n          // The % of total cases at this time point that can be attributed the this outbreak and it's dependents.\n         timePoint.percent = totalCourse.get(time)[\"totalDescendents\"]!==0?timePoint.totalDescendents/totalCourse.get(time)[\"totalDescendents\"]:0;\n         // what percent of this outbreak's space is attributed to it's children in raw total percent\n         const childrenSpace = timePoint.totalDescendents!==0? ((timePoint.totalDescendents-timePoint.cases)/timePoint.totalDescendents)*timePoint.percent:0;\n         \n         let activeChildren = 0;\n         if( childrenSpace>0){\n            //how many children have cases at this time\n           activeChildren =  outbreak.children\n                                .filter(chap=>chap.timeCourse.has(time) && chap.timeCourse.get(time).totalDescendents>0).length\n         }\n         \n         // how much space is there to divy up between the top, bottom and between children\n        const innerSpace =(timePoint.percent-childrenSpace);///(activeChildren+1);\n         // we want most of the space to be on top so the children curves aren't pulled up buy the parent\n         // ~75% of gap on top. ~20% at bottom 5% between children\n         // an array of 0.05/# of children\n         const kidGaps = Array(max([(activeChildren-1),0])).fill(0.05/(activeChildren-1));\n         const innerSpaceArray = [0.85,...kidGaps,(1-0.85-sum(kidGaps))].map(d=>d*innerSpace);\n         // inner space Arrary is [space on top, ... space between child 1 and child 2, space between child2& 3 ..., space between childLast and bottom]\n          timeGap.set(time,innerSpaceArray);\n       }\n      this.gapMap.set(outbreak,timeGap);   \n      }\n      \n    }\n    \n    setPoints(outbreak = this.backgroundOutbreak){\n      // Get all the time points of the data\n      const totalCourse = this.backgroundOutbreak.timeCourse;\n      // Get the gapMap of the background outbreak - should be of the outbreak.\n      const gapMap = this.gapMap.get(outbreak);\n      // will be updated overtime to account for the space that has been taken up.\n      let i=0;\n      const spaceFilled= new Map(outbreak.timePoints.map(t=>[t,gapMap.get(t)[i]])); // starts as just the top gaps.\n      // fillPoints \n      for(const childOutbreak of outbreak.children){\n         let points = [];\n         const timeCourse = childOutbreak.timeCourse;\n        for(const time of childOutbreak.timePoints){\n          const timePoint = timeCourse.get(time);\n          \n          timePoint.percent = totalCourse.get(time)[\"totalDescendents\"]>0?timePoint.totalDescendents/totalCourse.get(time)[\"totalDescendents\"]: 0;\n          const parentTop =1 - getStartingDistance.call(this,childOutbreak,time);\n          const point = {time:time,y1:parentTop-spaceFilled.get(time),\n                         y0:parentTop-spaceFilled.get(time)-timePoint.percent,\n                         outbreak:childOutbreak,\n                         total:totalCourse.get(time).totalDescendents}\n          points.push(point) \n          spaceFilled.set(time,spaceFilled.get(time)+timePoint.percent+gapMap.get(time)[i+1]);\n        }\n        // clean up final point.\n  \n        const first0T = max(points.filter(p=>p.y1===p.y0),d=>d.time);\n        const first0 = points.filter(p=>p.time===first0T)[0];\n        const lastTP= max(points.filter(p=>p.y1!==p.y0),d=>d.time);\n        const lastT = points.filter(p=>p.time===lastTP)[0];\n              \n        points = points.filter(p=>p.time<first0.time);\n        \n        const smoothingPoint = {time : first0.time, \n                                y1:(lastT.y1+lastT.y0)/2, \n                                y0:(lastT.y1+lastT.y0)/2,\n                                outbreak:lastT.outbreak,\n                                total:first0.total};\n                                \n        points.push(smoothingPoint);\n        \n        //add smoothStart\n        const firstTP = min(points,d=>d.time);\n        \n        const firstT = points.filter(p=>p.time===firstTP)[0];\n        \n        const newFirstTP = timeWeek.offset(firstTP,-1).getTime();\n        \n        const totalAtTheTime = totalCourse.has(newFirstTP)&&totalCourse.get(newFirstTP)[\"totalDescendents\"]>0?totalCourse.get(newFirstTP)[\"totalDescendents\"]:0\n        \n        const easyStart =  {time : newFirstTP, \n                                y1:(firstT.y1+firstT.y0)/2, \n                                y0:(firstT.y1+firstT.y0)/2,\n                                outbreak:firstT.outbreak,\n                                total:totalAtTheTime};\n        \n        \n        points.unshift(easyStart);\n        points.sort((a,b)=>a.time-b.time);\n        this.points.push(points);\n        i+=1;\n        this.setPoints(childOutbreak);\n      }\n      \n    }\n\n    layout(input_points){\n      this.points = [];\n      this.setPoints();\n      input_points.push(...this.points);\n\n      if(!this.settings.horizontalRange){\n        this._horizontalRange = extent(this.points.reduce((acc,curr)=>[...acc,...curr],[]),k=>new Date(k.time));\n      }else{\n        this._horizontalRange=this.settings.horizontalRange;\n    }\n    \n    if(!this.settings.horizontalTicks){\n        this._horizontalTicks= this.settings.horizontalScale()\n            .domain(this._horizontalRange).ticks(5)\n    }else{\n        this._horizontalTicks=this.settings.horizontalTicks;\n    }\n      this._verticalRange = extent(this.points.reduce((acc,curr)=>[...acc,...curr],[]),k=>k.total*k.y1)\n    }\n\n    update() {\n      this.updateCallback();\n  }\n\n    get horizontalRange() {\n      return this._horizontalRange;\n    }\n\n  get verticalRange() {\n      return this._verticalRange;\n    }\n    get horizontalAxisTicks(){\n      return this._horizontalTicks;\n  }\n  }\n\n  \n  function getStartingDistance(outbreak,t){\n    let currentOutbreak= outbreak;\n    let thereAreGrandparents = currentOutbreak.parent.parent?true:false;\n    let gap = 0;\n currentOutbreak=currentOutbreak.parent;\n   while(thereAreGrandparents){\n      currentOutbreak= currentOutbreak.parent;\n     gap += this.gapMap.get(currentOutbreak).get(t)[0];\n     thereAreGrandparents = currentOutbreak.parent?true:false\n  }\n    return gap;\n  }","import {axisLeft, axisBottom} from \"d3-axis\";\nimport {select,selectAll} from \"d3-selection\";\nimport {scaleLinear,scaleTime} from \"d3-scale\";\nimport {easeLinear} from \"d3-ease\";\nimport {max,min} from \"d3-array\";\nimport {area,curveBasis} from \"d3-shape\";\nimport {timeWeek} from \"d3-time\"\nimport {transition} from \"d3-transition\"\nimport { d3Plot } from \"./d3Plot\";\n\nexport class areaPlot extends d3Plot{\n  static DEFAULT_SETTINGS() {\n        return {\n      hoverBorder: 2,\n      transitionDuration:300,\n      curve:curveBasis,\n        }\n      }\n      /**\n       * The constructor\n       * @param {*} svg \n       * @param {*} layout \n       * @param {*} margins top,bottom,left,right\n       * @param {*} settings \n       */\n    constructor(svg, layout, margins, settings = {}){\n        super()\n      this.layout = layout;\n      this.margins = margins;\n\n      // merge the default settings with the supplied settings\n      this.settings = {...d3Plot.DEFAULT_SETTINGS(),...areaPlot.DEFAULT_SETTINGS(), ...settings};\n      this.svg=svg;\n      }\n    \n        addDataLayers(){\n            this.svgSelection.append(\"g\").attr(\"class\", \"area-layer\");\n        }\n        update(){\n        // get new positions\n        this.points = []; // rest to so will be filled\n        this.layout.layout(this.points);\n        // svg may have changed sizes\n        let width,height;\n        if(Object.keys(this.settings).indexOf(\"width\")>-1){\n            width =this.settings.width;\n        }else{\n            width = this.svg.getBoundingClientRect().width;\n        }\n        if(Object.keys(this.settings).indexOf(\"height\")>-1){\n            height =this.settings.height;\n        }else{\n            height = this.svg.getBoundingClientRect().height;\n        }\n        // update the scales' domains\n        this.scales.x.domain(this.layout.horizontalRange).range([this.margins.left, width - this.margins.right-this.margins.left]);\n        this.scales.y.domain(this.layout.verticalRange).range([height -this.margins.bottom-this.margins.top,this.margins.top]);\n        this.scales.width=width;\n        this.scales.height=height;\n\n        // updateAxis.call(this);\n\n      updateAreas.call(this);\n      this.updateAxis();\n      // this.updateAxisBars();\n\n    }\n/**\n * Add a hover callback\n * @param {*} action  - object which has 2 functions enter and exit each takes 3 arguments d,i,n d is data n[i] is `this`\n * @param {*} selection  - what to select defaults to .rect class\n */\n  onHover(action,selection=null){\n      const selected = this.svgSelection.selectAll(`${selection ? selection : \"path\"}`);\n      selected.on(\"mouseover\", (d,i,n) => {\n          action.enter(d,i,n);\n      });\n      selected.on(\"mouseout\", (d,i,n) => {\n          action.exit(d,i,n);\n      });\n  }\n  onClick(action,selection=null){\n    const selected = this.svgSelection.selectAll(`${selection ? selection : \"path\"}`);\n    selected.on(\"click\", (d,i,n) => {\n        action(d,i,n);\n    });\n  }\n}\n\nfunction updateAreas(){\n    const areaMaker = area()\n    .x(d => this.scales.x(new Date(d.time)))\n    .y0(d=> this.scales.y(d.y0*d.total))\n    .y1(d => this.scales.y(d.y1*d.total))\n    .curve(curveBasis)\n  // DATA JOIN\n    // Join new data with old elements, if any.\n    const areas = this.svgSelection.select(\".area-layer\")\n        .selectAll(\"path\")\n        .data(this.points,d=>d[0].outbreak.id);\n    // ENTER\n    // Create new elements as needed.\n       const newAreas=areas.enter()\n        .append(\"path\")\n        .attr(\"class\",d=>`location-${d[0].outbreak.location.replace(\" \",\"_\")}`)\n        .attr(\"stroke-width\",4)\n        .attr(\"stroke\",d=>\"black\")\n        .attr(\"d\", d => areaMaker(d))\n       // update the existing elements\n    areas\n    .transition()\n    .duration(this.settings.transitionDuration)\n    .attr(\"d\", d => areaMaker(d));\n     // EXIT\n    // Remove old elements as needed.\n    areas.exit().remove();\n};\n\nfunction updateAxis(){\n        // update axis\n    \n    this.svgSelection.select(\"#y-axis\")\n    .attr(\"transform\", `translate(${this.margins.left.height },0)`)\n    .call(axisLeft(this.scales.y).ticks(5))\n      .transition()\n      .duration(this.settings.transitionDuration)\n      .ease(easeLinear)\n  }\n  ","import React, {useCallback,useState} from 'react';\nimport {select} from 'd3-selection';\nimport {fishLayout} from \"../lib/charts/fishplotLayout\"\nimport {areaPlot} from \"../lib/charts/areaPlot\";\nimport {timeWeek} from \"d3-time\";\nimport {scaleTime} from \"d3-scale\";\nimport {extent} from 'd3-array';\n\nfunction AreaPlot(props){\n    const [plot,setPlot]=useState(null);\n\n    const el = useCallback(node => {\n        \n        if (node !== null) {\n            if(node.children.length===0){ // make it the first time\n            const layoutSettings = {horizontalRange:extent(props.dateRange),\n                                    horizontalTicks:props.dateRange,\n                                    horizontalScale:scaleTime};\n            const layout = new fishLayout(props.epidemic,layoutSettings);\n            const fig = new areaPlot(node,layout,props.margins, { hoverBorder: 4, backgroundBorder:2,transitionDuration:300});\n            fig.draw();\n            // select(node).select(\".axes-layer\").remove();\n            setPlot(fig);\n        }else{\n            plot.update();\n        }\n        }});\n        const rand_id = `b${Math.random().toString(36).substring(4)}`\n\n        // useEffect(()=>{\n        //     if(figtree!==null){\n        //         figtree.update()\n        //     }\n        // },[props.chartGeom,props.phylogeny])\n\n         return(\n                <svg className=\"chart\" id={rand_id}\n                ref={el}\n                height={props.chartGeom.height}\n                width={props.chartGeom.width}\n            />);\n         \n};\n\n\n\nexport default AreaPlot;","import React, { useEffect,useRef } from 'react';\nconst ObjectChart = React.forwardRef((props,ref)=>{\n\n    return (\n        <svg className=\"chart\"\n        ref={ref}\n        height={props.chartGeom.height}\n        width={props.chartGeom.width}\n    />);\n});\nexport default  ObjectChart;","import React, {useState,useCallback} from 'react';\nimport ObjectChart from \"./ObjectChart\";\nimport {ArcLayout,CircleBauble} from 'figtree';\nimport { FigTree } from 'figtree';\nimport {scaleTime,scaleLinear} from \"d3-scale\";\nimport {select,selectAll} from 'd3-selection';\nimport {extent} from 'd3-array';\n\n\nfunction ArcTransmission(props){\n    const [figtree,setFigtree]=useState(null);\n    const xScale = scaleTime().domain(extent(props.dateRange)).range([0,1]); // pass in date domain\n    const xfunc=(n,i)=>n.id===\"UnsampledrootCase\"? xScale(props.treeDateRange[0]):xScale(n.symptomOnset) // for setting the x postion;\n\n    const el = useCallback(node => {\n        \n        if (node !== null) {\n            if(node.children.length===0){ // make it the first time\n                const layout = new ArcLayout(props.graph,{xFunction:xfunc,curve:props.curve});\n                const settings = { hoverBorder: 4, backgroundBorder:2,\n                    baubles: [\n                        new CircleBauble(),\n                    ],\n                    transitionDuration:300\n                };\n                const fig = new FigTree(node,layout,props.margins,settings);\n            fig.draw();\n            fig.hilightInternalNodes();\n            fig.hilightExternalNodes();\n            fig.hilightBranches();\n            select(node).select(\".axes-layer\").remove();\n            setFigtree(fig);\n    }else{\n        figtree.update();\n\n    }\n}});\nconst rand_id = `b${Math.random().toString(36).substring(4)}`\n\n\n        return(\n            <svg className=\"chart\" id= {rand_id}\n            ref={el}\n            height={props.chartGeom.height}\n            width={props.chartGeom.width}\n        />);\n\n};\n\n\n\n\nexport default ArcTransmission;","import {Outbreak} from './Outbreak.js';\n\nexport class Epidemic{\n constructor(indexCase,graph,edgeConditionFactory = e=>true){\n   this.outbreaks=[];\n   this.outbreakMap= new Map();\n   this.graph = graph;\n   this.edgeCondition =edgeConditionFactory(this.graph);\n   this.setOutbreaks(indexCase);\n\n }\n  setOutbreaks(indexCase){\n    // If the location of the index is unknow set to the most common location of the childrent;\n    const firstOutbreak = new Outbreak(`${indexCase.location}-${indexCase.id}`,indexCase.location,[indexCase]);\n    \n    this.rootOutbreak = firstOutbreak;\n    this.outbreakMap.set(indexCase,firstOutbreak);\n    this.outbreaks.push(firstOutbreak);\n    const children = this.graph.getOutgoingEdges(indexCase).filter(this.edgeCondition).map(e =>      ({edge:e,Case:e.target}))\n    \n    for(const child of children){\n      this.outbreakTraversal(child)\n    }    \n  }\n  outbreakTraversal(CaseEdge){\n   const Case = CaseEdge.Case;\n   const edge = CaseEdge.edge;\n   const parent =   edge.source;\n   const parentOutbreak = this.outbreakMap.get(parent);\n\n    if(this.outbreakMap.has(Case)){\n      return\n    }\n   let currentOutbreak;\n  if(Case.location === parent.location){\n    // add case to parent outbreak\n    parentOutbreak.addCase(Case);\n    this.outbreakMap.set(Case,parentOutbreak);\n\n    currentOutbreak = parentOutbreak;\n    \n  }else{\n    const startAnotherOutbreak = new Outbreak(`${Case.location}-${Case.id}`,Case.location,[Case]);\n    parentOutbreak.addChild(startAnotherOutbreak);\n    this.outbreakMap.set(Case,startAnotherOutbreak);\n    this.outbreaks.push(startAnotherOutbreak);\n    currentOutbreak = startAnotherOutbreak;\n  }\n   const children = this.graph.getOutgoingEdges(Case).filter(e=>(this.edgeCondition))\n     .map(e => ({edge:e,Case:e.target}))\n    .filter(c=>!this.outbreakMap.has(c.Case));\n    //avoids circlular loop when edge condition is not sufficient.\n  for(const child of children){\n    this.outbreakTraversal(child)\n  }\n}\nget Cases(){\n  return this.graph.nodes;\n}\n\n\n  \n  \n}","import {easeLinear} from 'd3-ease';\nimport {transition} from \"d3-transition\";\nimport {select} from 'd3-selection';\nimport {scaleLinear,scaleTime} from 'd3-scale';\nimport {axisBottom,axisTop} from \"d3-axis\";\nimport { d3Plot } from './d3Plot';\n/** \n * time Axis\n * settings \n */\nexport class XTimeAxis extends d3Plot{\n    static DEFAULT_SETTINGS() {\n      return {\n        transitionDuration:500,\n        horizontalRange:[0,1],\n        horizontalAxisTicks:[0,0.5,1],\n        horizontalScale:scaleLinear\n        }\n    }\n  /**\n   * The constuctor\n   * @param {*} domain array of first and last dates in axis\n   * @param {*} settings ticksUnit : timeWeek is default\n   */\n\nconstructor(svg,layout,margins,settings = { }){\n    super();\n    this.layout = layout;\n\n  this.settings = {...XTimeAxis.DEFAULT_SETTINGS(), ...settings};\n  // default ranges - these should be set in layout()\n  this._horizontalRange = this.settings.horizontalRange;\n  this.svg = svg;\n  this.margins = margins;\n  // To appease the \n}\ndraw(){\n       // get the size of the svg we are drawing on\n       let width,height;\n       if(Object.keys(this.settings).indexOf(\"width\")>-1){\n           width =this.settings.width;\n       }else{\n           width = this.svg.getBoundingClientRect().width;\n       }\n       if(Object.keys(this.settings).indexOf(\"height\")>-1){\n           height =this.settings.height;\n       }else{\n           height = this.svg.getBoundingClientRect().height;\n       }\n       //\n       this.scales={x:this.settings.horizontalScale()\n        .domain(this._horizontalRange)\n        .range([this.margins.left, width - this.margins.right-this.margins.left]),\n        width:width,\n        height:height}\n\n       //remove the tree if it is there already\n       select(this.svg).select(\"g\").remove();\n\n       // add a group which will contain the new plot\n       select(this.svg).append(\"g\")\n           .attr(\"transform\",`translate(${this.margins.left},${this.margins.top})`);\n        //to selecting every time\n        this.svgSelection = select(this.svg).select(\"g\");\n        this.svgSelection.append(\"g\").attr(\"class\", \"axes-layer\");\n        \n        this.svgSelection.select(\".axes-layer\")\n        .append(\"g\")\n        .attr(\"class\", \"top axis\")\n        .attr(\"id\", \"x-axis-top\")\n        .call(axisTop(this.scales.x).tickValues(this.layout.horizontalAxisTicks));\n\n        this.svgSelection.select(\".axes-layer\")\n        .append(\"g\")\n        .attr(\"transform\",`translate(0,${(this.scales.height-this.margins.bottom-this.margins.top-50)})`)\n        .attr(\"class\", \"bottom axis\")\n        .attr(\"id\", \"x-axis-bottom\")\n        .call(axisBottom(this.scales.x).tickValues(this.layout.horizontalAxisTicks));\n\n        console.log(this.scales.x.domain())\n    \n}\nupdate(){\n           // get the size of the svg we are drawing on\n           let width,height;\n           if(Object.keys(this.settings).indexOf(\"width\")>-1){\n               width =this.settings.width;\n           }else{\n               width = this.svg.getBoundingClientRect().width;\n           }\n           if(Object.keys(this.settings).indexOf(\"height\")>-1){\n               height =this.settings.height;\n           }else{\n               height = this.svg.getBoundingClientRect().height;\n           }\n           //\n        this.scales={x:this.settings.horizontalScale()\n                        .domain(this._horizontalRange)\n                        .range([this.margins.left, width - this.margins.right-this.margins.left]),\n                        width:width,\n                        height:height}\n\n        this.svgSelection.select(\"#x-axis-top\")\n                        .call(axisTop(this.scales.x).tickValues(this.layout.horizontalAxisTicks))\n                        .transition()\n                        .duration(this.settings.transitionDuration)\n                        .ease(easeLinear);\n\n    this.svgSelection.select(\"#x-axis-bottom\")\n                        .attr(\"transform\",`translate(0,${(this.scales.height-this.margins.bottom-this.margins.top)})`)\n                        .call(axisBottom(this.scales.x).tickValues(this.layout.horizontalAxisTicks))\n                        .transition()\n                        .duration(this.settings.transitionDuration)\n\n\n                        this.updateAxisBars();\n}\n\n\nget horizontalRange(){\n    return this._horizontalRange;\n}\n}\nexport default XTimeAxis;","import React, {useCallback,useState} from 'react';\nimport {XTimeAxis} from '../lib/charts/axis';\nimport {scaleTime} from \"d3-scale\"\nimport {extent} from 'd3-array';\nfunction TimeAxis(props){\n    const [axis,Setaxis]=useState(null);\n    \n    const el = useCallback(node => {\n        \n        if (node !== null) {\n            if(node.children.length===0){ // make it the first time\n                const layoutSettings = {horizontalRange:extent(props.dateRange),\n                    horizontalAxisTicks:props.dateRange,\n                    horizontalScale:scaleTime};\n                    const margins = {...props.margins,...{top:30,bottom:25}};\n                const fig = new XTimeAxis(node,layoutSettings, margins,layoutSettings);\n                fig.draw();\n                Setaxis(fig);\n            }else{\n                axis.update();\n            }\n        }\n    });\nconst rand_id = `b${Math.random().toString(36).substring(4)}`\n\n\n        return(\n            <svg className=\"fixedAxis\" id= {rand_id}\n            ref={el}\n            height={props.domRect.height+20+20+30}// 10px padding timecontainer 10px margin on chart 20px top margin on this 20 px bottom here\n            width={props.chartGeom.width}\n        />);\n\n};\n\nexport default TimeAxis;\n","import React, {useState,useCallback,useEffect} from 'react';\nimport {csv} from \"d3-fetch\";\nimport Case from \"../lib/outbreak/Case\";\nimport Link from \"../lib/outbreak/Link\";\nimport {dateParse} from \"../utils/commonFunctions\"\nimport {scaleTime,scaleLinear} from 'd3-scale';\nimport {timeWeek,timeDay} from \"d3-time\";\nimport {max,min,extent} from \"d3-array\";\nimport {nest} from \"d3-collection\";\nimport {axisTop,axisBottom} from \"d3-axis\"\nimport { Graph, RectangularLayout, TransmissionLayout } from 'figtree';\nimport StackedHistogram from './StackedHistogram';\n// import ArcTransmission from \"./ArcTransmission\";\nimport PhyloChart from './PhyloChart';\nimport AreaPlot from './AreaPlot';\nimport {Tree} from \"figtree\";\nimport ArcTransmission from './ArcTransmission';\nimport {Epidemic} from \"../lib/outbreak/Epidemic\";\nimport TimeAxis from './TimeAxis';\n\n\n\nfunction mostProbableTransphyloEdgeCondition(graph){\n  const actualFilterFunction = (edge)=>{\n    const target = edge.target;\n    // get incoming edges\n    const incomingEdges = graph.getIncomingEdges(target);\n    const maxTransphyloProb = max(incomingEdges, e =>e.metaData.transphylo.support);\n    return (edge === incomingEdges.find(e=> e.metaData.transphylo.support===maxTransphyloProb))\n  }\n  return actualFilterFunction\n}\n\n\n\n\nfunction ChartContainer(props){\n  \n    const prefix = process.env.NODE_ENV === 'development' ? 'http://localhost:4001' : 'https://raw.githubusercontent.com/jtmccr1/trapper/master/src';\n    \n    //------------ Data processing ------------------------\n\n    // hardcoding in data processing - magic number\n\n      const [ogLineList,setOgLineList]=useState(null);\n      const [ogLinks,setOgLinks] = useState(null)\n      const [scales,setScales]=useState(null);\n      const [chartGeom,setChartGeom]=useState(null);\n      const [domRect,setDomRect]=useState(null);\n      const [outbreakGraph,setOutbreakGraph] = useState(null);\n      const [phylogeny,setPhylogeny] = useState(null);\n      const [phyloAttributes,setPhyloAttributes]=useState(null);\n      const [dateRange,setDateRange] = useState(null)\n      const [epidemic,setEpidemic] = useState(null);\n      const [treeDateRange,setTreeDateRange] = useState(null);\n      const margins = {\"top\":10,\"bottom\":10,\"left\":50,\"right\":50};\n\n    //Get lineList\n    useEffect(()=>{\n        csv(`${prefix}/examples/simulated/lineList.csv`,\n        d=>{\n            const dataPoint = {\n                   id:d.id,\n                   symptomOnset:dateParse(d.symptomOnset),\n                   sampleDate:[dateParse(d.sampleDate)],\n                   location:d.Location,\n                   resolution:d.Outcome,\n                }\n            return new Case(dataPoint);\n          }).then(data=>{\n            setOgLineList(data)\n          });\n    },[]);// [] only run on first render otherwise we get an infinite loop.\n       //Get links TODO get all links\n       useEffect(()=>{\n        Promise.all([csv(`${prefix}/examples/simulated/transphyloLinks.csv`,\n                        d=>{\n                            const dataPoint = {\n                                  target:d.target,\n                                  source:d.source,\n                                  dataSource:d.dataSource\n                                }\n                            return new Link(dataPoint);\n                              }),\n                              csv(`${prefix}/examples/simulated/epiContacts.csv`,\n                              d=>{\n                                  const dataPoint = {\n                                        target:d.target,\n                                        source:d.source,\n                                        dataSource:d.dataSource\n                                      }\n                                  return new Link(dataPoint);\n                                    })\n                                  ]).then(([data1,data2])=>setOgLinks([...data1,...data2]));\n                        },[]);\n\n      useEffect(()=>{\n        fetch(`${prefix}/examples/simulated/simulated.trees`)\n        .then(response=>response.text()\n                .then(text=>{\n                  setPhylogeny(Tree.parseNewick(text));\n                }));\n        fetch(`${prefix}/examples/simulated/simulated.json`)\n                .then(response=>response.json()\n                        .then(json=>{\n                          setPhyloAttributes(json)\n                        })); \n      },[])\n\n\n    //Summarize links for each target for each type get % of incoming links with this source\n    // [graph,setGraph] = useState(null)\n    \n    useEffect(()=>{\n      if(ogLinks!=null){\n            // link is an object keyed by target each \n            // the output should be \n            // {target, source, dataSource:, metadata:{source1:{ support: %\n            //   links:[links]}[links] source2:linkes}}\n            const nestLinks = nest()\n            .key(d=>d.target)\n            .key(d=>d.source)\n            .key(d=>d.dataSource)\n            .entries(ogLinks)\n\n            const dataSources= [];\n            ogLinks.forEach(l => {\n              dataSources.indexOf(l.dataSource)===-1 && dataSources.push(l.dataSource);\n            });\n\n            const links =[];\n            for(const l of nestLinks){\n              const target = l.key;\n              const totalObservations ={};\n              for(const ds of dataSources){\n                totalObservations[ds] = l.values.map(s=>s.values.filter(d=>d.key==ds)) // array of array of {key:soures, value:data} with an entry for each source\n                                    .reduce((acc,curr)=>{  // flatten array above\n                                      return acc.concat(curr)\n                                    },[])\n                                    .reduce((acc,curr)=>acc+curr.values.length,0); // sum number of data points \n                                            // .reduce((acc,curr)=>acc+curr.values.length,0)));\n              }\n                for(const s of l.values){\n                  const source = s.key;\n                  const metaData=dataSources.reduce((acc,curr)=>{\n                          acc[curr]={support:null,data:[]};\n                          return(acc)\n                        },{})\n                  for(const ds of s.values){\n                    metaData[ds.key].data=ds.values;\n                    metaData[ds.key].support=totalObservations[ds.key]!==0? ds.values.length/totalObservations[ds.key]: null;\n                  }\n                  links.push({\"target\":target,\"source\":source,\"metaData\":metaData})\n                }\n        \n              }\n              // Add any sources that aren't included \n              const sources =  links.map(l=>l.source).reduce((acc,curr)=>{\n                                                      if(acc.indexOf(curr)===-1){\n                                                        return(acc.concat(curr));\n                                                      }\n                                                      return(acc);\n                                                    },[]);\n              const cases = [...ogLineList];\n              for(const source of sources){\n                if(cases.filter(d=>d.id===source).length===0){\n                  const newCase = new Case({\"id\":source});\n                  cases.push(newCase);\n                }\n              }\n              \n              setOutbreakGraph(new Graph(cases,links));\n            }\n    },[ogLinks,ogLineList]);\n\n\n\n    //update scale \n    useEffect(()=>{\n        // epi start and stop week;\n        if(ogLineList!==null&&chartGeom!==null){\n        const startWeek= timeWeek(min(ogLineList,d=>timeWeek(d.getSymptomOnset())));\n        const endWeek = timeWeek(max(ogLineList,d=>timeWeek(d.getSymptomOnset())));\n        const scales={\n            x:scaleTime().domain([timeWeek.offset(startWeek,-1),timeWeek.offset(endWeek,2)]).range([chartGeom.spaceLeft,(chartGeom.width-chartGeom.spaceRight)]),\n            y:scaleLinear().domain([0,1]).range([(chartGeom.height - chartGeom.spaceBottom), chartGeom.spaceTop]),\n        }\n        // scales.x.ticks(timeWeek.range(scales.x.domain()[0],scales.x.domain()[1]));\n        scales.weeks=timeWeek.range(scales.x.domain()[0],timeWeek.offset(scales.x.domain()[1],1))\n        setScales(scales);\n    };\n    },[ogLineList,chartGeom]);\n\n    //Update chart sizes\n    useEffect(()=>{\n        if(domRect!==null){\n        const parentBaseDim={\"height\":max([domRect.height*0.25,50]),\"width\":max([domRect.width*0.9,50])};\n        setChartGeom(parentBaseDim)\n        }\n    },[domRect]);\n\n    // Set the epidemic data\n\n    useEffect(()=>{\n      if(outbreakGraph!==null){\n        const indexCase = outbreakGraph.nodes.find(n=>outbreakGraph.getOutgoingEdges(n).length>0&&outbreakGraph.getIncomingEdges(n).length===0);\n        indexCase.location = \"Location A\";\n        indexCase.symptomOnset=null;\n\n        const outbreakEpidemic = new Epidemic(indexCase,outbreakGraph,mostProbableTransphyloEdgeCondition);\n        setEpidemic(outbreakEpidemic);\n      }\n    },[outbreakGraph]);\n\n    // Set the date scale\n\n    useEffect(()=>{\n      if(phylogeny!==null&&outbreakGraph!==null){\n        //get date range of case\n        const casesRange = extent(outbreakGraph.nodes,d=>d.symptomOnset);\n        const treeMaxTipLength = max(phylogeny.nodes,n=>phylogeny.rootToTipLength(n));\n        const treeMaxTip = phylogeny.nodes.find(n=>phylogeny.rootToTipLength(n)===treeMaxTipLength);\n        const treeMaxDate = max(outbreakGraph.getNode(treeMaxTip.name).sampleDate); // names must match case id's in line list; sampleDate is an array.\n        const treeRootDate = timeDay.offset(treeMaxDate,(-1*treeMaxTipLength*365)); // not exact\n        const totalExtent = extent([treeRootDate,...casesRange]);\n        const week0 = timeWeek.offset(timeWeek.floor(totalExtent[0]),-1);\n        // add anextra one for the range function [,)\n        const weekEnd = timeWeek.offset(timeWeek.ceil(totalExtent[1]),2);\n        setDateRange(timeWeek.range(week0,weekEnd));\n        setTreeDateRange([treeRootDate,treeMaxDate]);\n      }\n    },[ogLineList,outbreakGraph])\n\n    //Getting the size of the container to pass to children\n    const measuredRef = useCallback(node => {\n        if (node !== null) {\n            setDomRect({\"height\":node.getBoundingClientRect().height,\"width\":node.getBoundingClientRect().width})\n            const handleResize = () =>  {\n                setDomRect({\"height\":node.getBoundingClientRect().height,\"width\":node.getBoundingClientRect().width});\n            }\n            window.addEventListener('resize', handleResize);\n            return () => {\n              window.removeEventListener('resize', handleResize);\n            };\n        }\n      },[]);\n\n      //Ensure we don't render before we have scales ect.\n      const isFull = Object.values([ogLineList,ogLinks,scales,chartGeom,outbreakGraph,phylogeny,phyloAttributes,dateRange,epidemic,treeDateRange])\n      .every(x => (x !== null & x !== ''));\n      if(!isFull){\n        return(\n          <div className = \"timelineContainer\" ref={measuredRef}>\n          </div>\n          )\n      }else{\n      return(\n        <div className =\"fillHorizontalSpace\" background={\"none\"}>\n        {/*<div className = \"axisContainer\">\n          <div className =\"mockChartContainer\">\n        <TimeAxis dateRange = {dateRange} \n        margins = {margins}\n          chartGeom = {chartGeom} \n          domRect = {domRect}/>\n        </div>\n      </div>*/}\n\n       <div className = \"timelineContainer\" ref={measuredRef} >\n       <div className = \"mockChartContainer\">\n       <TimeAxis dateRange ={dateRange} \n        margins = {margins}\n          chartGeom = {chartGeom} \n          domRect = {domRect}/>\n          </div>  \n        <div className = \"chartContainer\">\n          <StackedHistogram  data={ogLineList} \n          margins = {margins}\n            scales = {scales} \n            chartGeom={chartGeom}\n            dateRange ={dateRange}\n            callbacks={{groups:d=>d.location}}/>\n          </div>  \n          <div className = \"chartContainer\">\n          <AreaPlot  \n          margins = {margins}\n          epidemic={epidemic} \n          dateRange ={dateRange}\n          scales={scales}\n          chartGeom={chartGeom}/>\n        </div>  \n          <div className = \"chartContainer\">\n          <ArcTransmission  \n          margins = {margins}\n          treeDateRange={treeDateRange}\n          phylogeny={phylogeny} \n          treeDateRange={treeDateRange}\n          graph={outbreakGraph} \n          dateRange ={dateRange}\n          scales = {scales} \n          curve ={\"bezier\"}\n          chartGeom={chartGeom}/>\n        </div>  \n      <div className = \"chartContainer\">\n          <PhyloChart  \n          margins = {margins}\n          dateRange ={dateRange}\n          treeDateRange={treeDateRange}\n          phylogeny={phylogeny} \n          layout = {TransmissionLayout}\n          attributes = {phyloAttributes}\n          scales = {scales} \n          chartGeom={chartGeom}/>\n      </div>  \n</div>\n</div>\n)}\n    // <Chart  />\n}\n\nexport default  ChartContainer;\n","import React from 'react';\nimport Header from './Header';\nimport ChartContainer from './ChartContainer';\nimport \"../styles/trapper.css\"\n\nfunction App() {\n\t\treturn(\n\t\t\t<div className=\"fillHorizontalSpace\">\n\t\t\t<Header />\n\t\t\t<ChartContainer />\n\t\t\t</div>\n\t\t\t)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}